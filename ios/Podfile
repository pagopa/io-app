require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

min_ios_versions_supported = ['14.0', min_ios_version_supported]  
index_of_max = min_ios_versions_supported.each_with_index.max_by { |number, _| number.to_f }[1]

platform :ios, min_ios_versions_supported[index_of_max] 

prepare_react_native_project!
 
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

# Required by react-native-permissions
# https://github.com/zoontek/react-native-permissions?tab=readme-ov-file#ios
setup_permissions([
  'PhotoLibrary', # Required for Gallery read permission
])

production = ENV["PRODUCTION"] == "1"
# This env is used to check whether
# we are in a CI environment or not.
IS_CI = ENV['CI']

target 'ItaliaApp' do
  config = use_native_modules!

  pod 'RNCPushNotificationIOS', :path => '../node_modules/@react-native-community/push-notification-ios'
  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'ItaliaAppTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  end
end