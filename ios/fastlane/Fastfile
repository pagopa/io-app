# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.5"

default_platform :ios

platform :ios do
  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    # match(type: 'development')
    match(type: 'appstore')
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  # Builds the app for TestFlight releases
  lane :do_testflight_build do
    sync_code_signing(type: "appstore")

    # Install pods
    cocoapods

    # build the app
    gym(
      scheme: "ItaliaApp",
      clean: true,
      export_method: "app-store",
      workspace: "ItaliaApp.xcworkspace",
      include_symbols: false
    )
  end

  desc "Submit a new Beta Build to TestFlight"
  lane :beta_circleci_testflight do |options|

    # xCode 14.2, prevents altool to fail with error "Could not
    # determine the package’s bundle ID" during the "pilot" step
    # See https://github.com/fastlane/fastlane/issues/20741
    ENV['ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD'] = 'false'

    # Setup the CI environment
    setup_ci()

    # use the App Store API Key to authenticate
    api_key = app_store_connect_api_key(
      key_id: "#{ENV['APP_STORE_API_KEY_ID']}",
      issuer_id: "#{ENV['APP_STORE_API_KEY_ISSUER_ID']}",
      key_filepath: "./fastlane/AuthKey_#{ENV['APP_STORE_API_KEY_ID']}.p8",
      duration: 1200,
    )

    sync_code_signing(type: "appstore", api_key: api_key)

    # Install pods
    cocoapods

    # build the app
    gym(
      scheme: "ItaliaApp",
      clean: true,
      export_method: "app-store",
      workspace: "ItaliaApp.xcworkspace",
      include_symbols: false
    )

    previous_tag = sh("git tag --sort=-taggerdate | grep \\\\-rc\\\\. | sed -n '2 p' | tr -d '\n'")

    # generate the changelog based on last commits
    changelog = changelog_from_git_commits(
      tag_match_pattern: "*" +previous_tag + "*" ,
      pretty:"- %s",
      merge_commit_filtering: "exclude_merges"
    )

    # upload to App store
    pilot(
      api_key: api_key,
      changelog: changelog,
      # max wait for App Store Connect processing (30 min)
      wait_processing_timeout_duration: 1800
    )
  end

  desc "Submit a new Canary Build to TestFlight"
  lane :canary_ci_testflight do |options|

    # xCode 14.2, prevents altool to fail with error "Could not
    # determine the package’s bundle ID" during the "pilot" step
    # See https://github.com/fastlane/fastlane/issues/20741
    ENV['ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD'] = 'false'

    # Setup the CI environment
    setup_ci()

    # use the App Store API Key to authenticate
    api_key = app_store_connect_api_key(
      key_id: "#{ENV['APP_STORE_API_KEY_ID']}",
      issuer_id: "#{ENV['APP_STORE_API_KEY_ISSUER_ID']}",
      key_filepath: "./fastlane/AuthKey_#{ENV['APP_STORE_API_KEY_ID']}.p8",
      duration: 1200,
    )

    sync_code_signing(type: "appstore", app_identifier:"it.pagopa.app.io.canary", api_key: api_key)

    # Install pods
    cocoapods

    # build the app
    gym(
      scheme: "ItaliaApp",
      clean: true,
      export_method: "app-store",
      configuration: "Canary",
      workspace: "ItaliaApp.xcworkspace",
      include_symbols: false
    )

    previous_tag = sh("git tag --sort=-taggerdate | grep \\\\-canary\\\\. | sed -n '2 p' | tr -d '\n'")

    # generate the changelog based on last commits
    changelog = changelog_from_git_commits(
      tag_match_pattern: "*" +previous_tag + "*" ,
      pretty:"- %s",
      merge_commit_filtering: "exclude_merges"
    )

    # upload to App store
    pilot(
      api_key: api_key,
      changelog: changelog,
      # max wait for App Store Connect processing (30 min)
      wait_processing_timeout_duration: 1800
    )
  end

  desc "Distribute previously uploaded beta to TestFlight, using GA"
  lane :distribute_beta_testflight do |options|

    # Setup the CI environment
    setup_ci()

    # use the App Store API Key to authenticate
    api_key = app_store_connect_api_key(
      key_id: "#{ENV['APP_STORE_API_KEY_ID']}",
      issuer_id: "#{ENV['APP_STORE_API_KEY_ISSUER_ID']}",
      key_filepath: "./fastlane/AuthKey_#{ENV['APP_STORE_API_KEY_ID']}.p8",
      duration: 1200,
    )

    # upload to App store
    pilot(
      api_key: api_key,
      distribute_only: true,
      distribute_external: true,
      notify_external_testers: true,
      app_platform: "ios",
      groups: ["Amici&Familiari", "PagoPa"],
      # max wait for App Store Connect processing (30 min)
      wait_processing_timeout_duration: 1800
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
