diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java b/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
index 07f73fd00a083ebf5a03bffaa7bbadbd1f648505..31d4b1f0d70abbe52c1792d3c482baf5cb33bb78 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
@@ -171,6 +171,10 @@ public class RNCWebChromeClient extends WebChromeClient implements LifecycleEven
             // TODO: RESOURCE_MIDI_SYSEX, RESOURCE_PROTECTED_MEDIA_ID.
             if (androidPermission != null) {
                 if (ContextCompat.checkSelfPermission(this.mWebView.getThemedReactContext(), androidPermission) == PackageManager.PERMISSION_GRANTED) {
+                    if ((androidPermission.equals(Manifest.permission.RECORD_AUDIO) && this.mWebView.getCustomSettings().getMicrophoneAccessDisabled()) ||
+                        (androidPermission.equals(Manifest.permission.CAMERA) && this.mWebView.getCustomSettings().getCameraAccessDisabled())) {
+                        continue;
+                    }                    
                     grantedPermissions.add(requestedResource);
                 } else {
                     requestedAndroidPermissions.add(androidPermission);
diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java b/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
index 80c68034b193a47bedb56ca527352de9548e8ac6..800e1d727d7219140f881ec8146bd532d7fd7f4e 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
@@ -79,6 +79,17 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
     protected boolean nestedScrollEnabled = false;
     protected ProgressChangedFilter progressChangedFilter;
 
+    /**
+     * It is impossible to override WebView getSettings(), so RNCWebView has getCustomSettings()
+     */
+    private CustomWebSettings customWebSettings;
+    public CustomWebSettings getCustomSettings() {
+        if (customWebSettings == null) {
+            customWebSettings = new CustomWebSettings();
+        }
+        return customWebSettings;
+    } 
+
     /**
      * WebView must be created with an context of the current activity
      * <p>
@@ -465,4 +476,25 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
             return waitingForCommandLoadUrl;
         }
     }
+
+    public class CustomWebSettings {
+        private boolean microphoneAccess = true;
+        private boolean cameraAccess = true;
+
+        public boolean getMicrophoneAccessDisabled() {
+            return !microphoneAccess;
+        }
+
+        public boolean getCameraAccessDisabled() {
+            return !cameraAccess;
+        }
+
+        public void setMicrophoneAccessDisabled(boolean b) {
+            microphoneAccess = !b;
+        }
+
+        public void setCameraAccessDisabled(boolean b) {
+            cameraAccess = !b;
+        }
+    }
 }
\ No newline at end of file
diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
index f83033b3597a425da159555233bacce250ccfce0..dc8292a2ad694c67c9b288bb3122e692d79758d9 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
@@ -563,6 +563,18 @@ class RNCWebViewManagerImpl(private val newArch: Boolean = false) {
         setupWebChromeClient(view)
     }
 
+    fun setMicrophoneAccessDisabled(viewWrapper: RNCWebViewWrapper, value: Boolean) {
+        getCustomSettings(viewWrapper)?.setMicrophoneAccessDisabled(value)
+    }
+
+    fun setCameraAccessDisabled(viewWrapper: RNCWebViewWrapper, value: Boolean) {
+        getCustomSettings(viewWrapper)?.setCameraAccessDisabled(value)
+    }
+
+    fun getCustomSettings(viewWrapper: RNCWebViewWrapper): RNCWebView.CustomWebSettings? {
+        return viewWrapper.webView.customSettings
+    }
+
     fun setAndroidLayerType(viewWrapper: RNCWebViewWrapper, layerTypeString: String?) {
         val view = viewWrapper.webView
         val layerType = when (layerTypeString) {
diff --git a/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 4709e2822499067cef3a4ce571991b96f844e085..7c14750779f31b3a928ea857ba047475bf52c81a 100644
--- a/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -94,6 +94,18 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper>
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
     }
 
+    @Override
+    @ReactProp(name = "androidMicrophoneAccessDisabled")
+    public void setAndroidMicrophoneAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.setMicrophoneAccessDisabled(view, disabled);
+    }
+
+    @Override
+    @ReactProp(name = "androidCameraAccessDisabled")
+    public void setAndroidCameraAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.setCameraAccessDisabled(view, disabled);
+    }
+
     @Override
     @ReactProp(name = "androidLayerType")
     public void setAndroidLayerType(RNCWebViewWrapper view, @Nullable String value) {
diff --git a/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 974337f41ce01a5102eeafa6e54fbb3b949c48d7..da9e8e19a97836aa1c7c2e966c3d48e8036fd383 100644
--- a/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -72,6 +72,16 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper> {
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
     }
 
+    @ReactProp(name = "androidMicrophoneAccessDisabled")
+    public void setAndroidMicrophoneAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.setMicrophoneAccessDisabled(view, disabled);
+    }
+
+    @ReactProp(name = "androidCameraAccessDisabled")
+    public void setAndroidCameraAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.setCameraAccessDisabled(view, disabled);
+    }
+
     @ReactProp(name = "androidLayerType")
     public void setAndroidLayerType(RNCWebViewWrapper view, @Nullable String value) {
         mRNCWebViewManagerImpl.setAndroidLayerType(view, value);
diff --git a/lib/RNCWebViewNativeComponent.d.ts b/lib/RNCWebViewNativeComponent.d.ts
index 8dd6cef93c86f32c0358b5762a20d2f5f65a8cee..236f56f829d62265757444f0590b5123e26fc14d 100644
--- a/lib/RNCWebViewNativeComponent.d.ts
+++ b/lib/RNCWebViewNativeComponent.d.ts
@@ -116,6 +116,8 @@ export interface NativeProps extends ViewProps {
     allowFileAccess?: boolean;
     allowsProtectedMedia?: boolean;
     allowsFullscreenVideo?: boolean;
+    androidMicrophoneAccessDisabled?: boolean;
+    androidCameraAccessDisabled?: boolean;
     androidLayerType?: WithDefault<'none' | 'software' | 'hardware', 'none'>;
     cacheMode?: WithDefault<'LOAD_DEFAULT' | 'LOAD_CACHE_ELSE_NETWORK' | 'LOAD_NO_CACHE' | 'LOAD_CACHE_ONLY', 'LOAD_DEFAULT'>;
     domStorageEnabled?: boolean;
diff --git a/lib/RNCWebViewNativeComponent.js b/lib/RNCWebViewNativeComponent.js
index 25d09e9e702ce752832c2a3a64b34150e3f579cc..ad5883238c7d3b6a7fc81dd5ebdd1a54cf06e9a6 100644
--- a/lib/RNCWebViewNativeComponent.js
+++ b/lib/RNCWebViewNativeComponent.js
@@ -1 +1 @@
-var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.__INTERNAL_VIEW_CONFIG=exports.Commands=void 0;var _codegenNativeComponent=_interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeComponent"));var _codegenNativeCommands=_interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeCommands"));var NativeComponentRegistry=require('react-native/Libraries/NativeComponent/NativeComponentRegistry');var _require=require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),ConditionallyIgnoredEventHandlers=_require.ConditionallyIgnoredEventHandlers;var _require2=require("react-native/Libraries/ReactNative/RendererProxy"),dispatchCommand=_require2.dispatchCommand;var nativeComponentName='RNCWebView';var __INTERNAL_VIEW_CONFIG=exports.__INTERNAL_VIEW_CONFIG={uiViewClassName:'RNCWebView',directEventTypes:{topContentSizeChange:{registrationName:'onContentSizeChange'},topRenderProcessGone:{registrationName:'onRenderProcessGone'},topContentProcessDidTerminate:{registrationName:'onContentProcessDidTerminate'},topCustomMenuSelection:{registrationName:'onCustomMenuSelection'},topFileDownload:{registrationName:'onFileDownload'},topLoadingError:{registrationName:'onLoadingError'},topLoadingSubResourceError:{registrationName:'onLoadingSubResourceError'},topLoadingFinish:{registrationName:'onLoadingFinish'},topLoadingProgress:{registrationName:'onLoadingProgress'},topLoadingStart:{registrationName:'onLoadingStart'},topHttpError:{registrationName:'onHttpError'},topMessage:{registrationName:'onMessage'},topOpenWindow:{registrationName:'onOpenWindow'},topScroll:{registrationName:'onScroll'},topShouldStartLoadWithRequest:{registrationName:'onShouldStartLoadWithRequest'}},validAttributes:Object.assign({allowFileAccess:true,allowsProtectedMedia:true,allowsFullscreenVideo:true,androidLayerType:true,cacheMode:true,domStorageEnabled:true,downloadingMessage:true,forceDarkOn:true,geolocationEnabled:true,lackPermissionToDownloadMessage:true,messagingModuleName:true,minimumFontSize:true,mixedContentMode:true,nestedScrollEnabled:true,overScrollMode:true,saveFormDataDisabled:true,scalesPageToFit:true,setBuiltInZoomControls:true,setDisplayZoomControls:true,setSupportMultipleWindows:true,textZoom:true,thirdPartyCookiesEnabled:true,hasOnScroll:true,allowingReadAccessToURL:true,allowsBackForwardNavigationGestures:true,allowsInlineMediaPlayback:true,allowsPictureInPictureMediaPlayback:true,allowsAirPlayForMediaPlayback:true,allowsLinkPreview:true,automaticallyAdjustContentInsets:true,autoManageStatusBarEnabled:true,bounces:true,contentInset:true,contentInsetAdjustmentBehavior:true,contentMode:true,dataDetectorTypes:true,decelerationRate:true,directionalLockEnabled:true,enableApplePay:true,hideKeyboardAccessoryView:true,keyboardDisplayRequiresUserAction:true,limitsNavigationsToAppBoundDomains:true,mediaCapturePermissionGrantType:true,pagingEnabled:true,pullToRefreshEnabled:true,refreshControlLightMode:true,scrollEnabled:true,sharedCookiesEnabled:true,textInteractionEnabled:true,useSharedProcessPool:true,menuItems:true,suppressMenuItems:true,hasOnFileDownload:true,fraudulentWebsiteWarningEnabled:true,allowFileAccessFromFileURLs:true,allowUniversalAccessFromFileURLs:true,applicationNameForUserAgent:true,basicAuthCredential:true,cacheEnabled:true,incognito:true,injectedJavaScript:true,injectedJavaScriptBeforeContentLoaded:true,injectedJavaScriptForMainFrameOnly:true,injectedJavaScriptBeforeContentLoadedForMainFrameOnly:true,javaScriptCanOpenWindowsAutomatically:true,javaScriptEnabled:true,webviewDebuggingEnabled:true,mediaPlaybackRequiresUserAction:true,messagingEnabled:true,hasOnOpenWindowEvent:true,showsHorizontalScrollIndicator:true,showsVerticalScrollIndicator:true,indicatorStyle:true,newSource:true,userAgent:true,injectedJavaScriptObject:true,paymentRequestEnabled:true},ConditionallyIgnoredEventHandlers({onContentSizeChange:true,onRenderProcessGone:true,onContentProcessDidTerminate:true,onCustomMenuSelection:true,onFileDownload:true,onLoadingError:true,onLoadingSubResourceError:true,onLoadingFinish:true,onLoadingProgress:true,onLoadingStart:true,onHttpError:true,onMessage:true,onOpenWindow:true,onScroll:true,onShouldStartLoadWithRequest:true}))};var _default=exports.default=NativeComponentRegistry.get(nativeComponentName,function(){return __INTERNAL_VIEW_CONFIG;});var Commands=exports.Commands={goBack:function goBack(ref){dispatchCommand(ref,"goBack",[]);},goForward:function goForward(ref){dispatchCommand(ref,"goForward",[]);},reload:function reload(ref){dispatchCommand(ref,"reload",[]);},stopLoading:function stopLoading(ref){dispatchCommand(ref,"stopLoading",[]);},injectJavaScript:function injectJavaScript(ref,javascript){dispatchCommand(ref,"injectJavaScript",[javascript]);},requestFocus:function requestFocus(ref){dispatchCommand(ref,"requestFocus",[]);},postMessage:function postMessage(ref,data){dispatchCommand(ref,"postMessage",[data]);},loadUrl:function loadUrl(ref,url){dispatchCommand(ref,"loadUrl",[url]);},clearFormData:function clearFormData(ref){dispatchCommand(ref,"clearFormData",[]);},clearCache:function clearCache(ref,includeDiskFiles){dispatchCommand(ref,"clearCache",[includeDiskFiles]);},clearHistory:function clearHistory(ref){dispatchCommand(ref,"clearHistory",[]);}};
\ No newline at end of file
+var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.__INTERNAL_VIEW_CONFIG=exports.Commands=void 0;var _codegenNativeComponent=_interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeComponent")),_codegenNativeCommands=_interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeCommands")),NativeComponentRegistry=require("react-native/Libraries/NativeComponent/NativeComponentRegistry"),_require=require("react-native/Libraries/NativeComponent/ViewConfigIgnore"),ConditionallyIgnoredEventHandlers=_require.ConditionallyIgnoredEventHandlers,_require2=require("react-native/Libraries/ReactNative/RendererProxy"),dispatchCommand=_require2.dispatchCommand,nativeComponentName="RNCWebView",__INTERNAL_VIEW_CONFIG=exports.__INTERNAL_VIEW_CONFIG={uiViewClassName:"RNCWebView",directEventTypes:{topContentSizeChange:{registrationName:"onContentSizeChange"},topRenderProcessGone:{registrationName:"onRenderProcessGone"},topContentProcessDidTerminate:{registrationName:"onContentProcessDidTerminate"},topCustomMenuSelection:{registrationName:"onCustomMenuSelection"},topFileDownload:{registrationName:"onFileDownload"},topLoadingError:{registrationName:"onLoadingError"},topLoadingSubResourceError:{registrationName:"onLoadingSubResourceError"},topLoadingFinish:{registrationName:"onLoadingFinish"},topLoadingProgress:{registrationName:"onLoadingProgress"},topLoadingStart:{registrationName:"onLoadingStart"},topHttpError:{registrationName:"onHttpError"},topMessage:{registrationName:"onMessage"},topOpenWindow:{registrationName:"onOpenWindow"},topScroll:{registrationName:"onScroll"},topShouldStartLoadWithRequest:{registrationName:"onShouldStartLoadWithRequest"}},validAttributes:Object.assign({allowFileAccess:!0,allowsProtectedMedia:!0,allowsFullscreenVideo:!0,androidMicrophoneAccessDisabled:!0,androidCameraAccessDisabled:!0,androidLayerType:!0,cacheMode:!0,domStorageEnabled:!0,downloadingMessage:!0,forceDarkOn:!0,geolocationEnabled:!0,lackPermissionToDownloadMessage:!0,messagingModuleName:!0,minimumFontSize:!0,mixedContentMode:!0,nestedScrollEnabled:!0,overScrollMode:!0,saveFormDataDisabled:!0,scalesPageToFit:!0,setBuiltInZoomControls:!0,setDisplayZoomControls:!0,setSupportMultipleWindows:!0,textZoom:!0,thirdPartyCookiesEnabled:!0,hasOnScroll:!0,allowingReadAccessToURL:!0,allowsBackForwardNavigationGestures:!0,allowsInlineMediaPlayback:!0,allowsPictureInPictureMediaPlayback:!0,allowsAirPlayForMediaPlayback:!0,allowsLinkPreview:!0,automaticallyAdjustContentInsets:!0,autoManageStatusBarEnabled:!0,bounces:!0,contentInset:!0,contentInsetAdjustmentBehavior:!0,contentMode:!0,dataDetectorTypes:!0,decelerationRate:!0,directionalLockEnabled:!0,enableApplePay:!0,hideKeyboardAccessoryView:!0,keyboardDisplayRequiresUserAction:!0,limitsNavigationsToAppBoundDomains:!0,mediaCapturePermissionGrantType:!0,pagingEnabled:!0,pullToRefreshEnabled:!0,refreshControlLightMode:!0,scrollEnabled:!0,sharedCookiesEnabled:!0,textInteractionEnabled:!0,useSharedProcessPool:!0,menuItems:!0,suppressMenuItems:!0,hasOnFileDownload:!0,fraudulentWebsiteWarningEnabled:!0,allowFileAccessFromFileURLs:!0,allowUniversalAccessFromFileURLs:!0,applicationNameForUserAgent:!0,basicAuthCredential:!0,cacheEnabled:!0,incognito:!0,injectedJavaScript:!0,injectedJavaScriptBeforeContentLoaded:!0,injectedJavaScriptForMainFrameOnly:!0,injectedJavaScriptBeforeContentLoadedForMainFrameOnly:!0,javaScriptCanOpenWindowsAutomatically:!0,javaScriptEnabled:!0,webviewDebuggingEnabled:!0,mediaPlaybackRequiresUserAction:!0,messagingEnabled:!0,hasOnOpenWindowEvent:!0,showsHorizontalScrollIndicator:!0,showsVerticalScrollIndicator:!0,indicatorStyle:!0,newSource:!0,userAgent:!0,injectedJavaScriptObject:!0,paymentRequestEnabled:!0},ConditionallyIgnoredEventHandlers({onContentSizeChange:!0,onRenderProcessGone:!0,onContentProcessDidTerminate:!0,onCustomMenuSelection:!0,onFileDownload:!0,onLoadingError:!0,onLoadingSubResourceError:!0,onLoadingFinish:!0,onLoadingProgress:!0,onLoadingStart:!0,onHttpError:!0,onMessage:!0,onOpenWindow:!0,onScroll:!0,onShouldStartLoadWithRequest:!0}))},_default=exports.default=NativeComponentRegistry.get(nativeComponentName,(function(){return __INTERNAL_VIEW_CONFIG})),Commands=exports.Commands={goBack:function(e){dispatchCommand(e,"goBack",[])},goForward:function(e){dispatchCommand(e,"goForward",[])},reload:function(e){dispatchCommand(e,"reload",[])},stopLoading:function(e){dispatchCommand(e,"stopLoading",[])},injectJavaScript:function(e,o){dispatchCommand(e,"injectJavaScript",[o])},requestFocus:function(e){dispatchCommand(e,"requestFocus",[])},postMessage:function(e,o){dispatchCommand(e,"postMessage",[o])},loadUrl:function(e,o){dispatchCommand(e,"loadUrl",[o])},clearFormData:function(e){dispatchCommand(e,"clearFormData",[])},clearCache:function(e,o){dispatchCommand(e,"clearCache",[o])},clearHistory:function(e){dispatchCommand(e,"clearHistory",[])}};
\ No newline at end of file
diff --git a/lib/WebView.android.js b/lib/WebView.android.js
index c6cb7a95c15e9673c048d537bcfb29feb76fb28a..001d282137f4d5ea490facdbab5f2d8aa1533d30 100644
--- a/lib/WebView.android.js
+++ b/lib/WebView.android.js
@@ -1 +1 @@
-var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _BatchedBridge=_interopRequireDefault(require("react-native/Libraries/BatchedBridge/BatchedBridge"));var _EventEmitter=_interopRequireDefault(require("react-native/Libraries/vendor/emitter/EventEmitter"));var _invariant=_interopRequireDefault(require("invariant"));var _RNCWebViewNativeComponent=_interopRequireWildcard(require("./RNCWebViewNativeComponent"));var _NativeRNCWebViewModule=_interopRequireDefault(require("./NativeRNCWebViewModule"));var _WebViewShared=require("./WebViewShared");var _WebView=_interopRequireDefault(require("./WebView.styles"));var _jsxRuntime=require("react/jsx-runtime");var _excluded=["overScrollMode","javaScriptEnabled","thirdPartyCookiesEnabled","scalesPageToFit","allowsFullscreenVideo","allowFileAccess","saveFormDataDisabled","cacheEnabled","androidLayerType","originWhitelist","setSupportMultipleWindows","setBuiltInZoomControls","setDisplayZoomControls","nestedScrollEnabled","startInLoadingState","onNavigationStateChange","onLoadStart","onError","onLoad","onLoadEnd","onLoadSubResourceError","onLoadProgress","onHttpError","onRenderProcessGone","onMessage","onOpenWindow","renderLoading","renderError","style","containerStyle","source","nativeConfig","onShouldStartLoadWithRequest","injectedJavaScriptObject"],_excluded2=["messagingModuleName"],_excluded3=["messagingModuleName"];var _require$registerCall,_this=this,_jsxFileName="/home/circleci/code/src/WebView.android.tsx";function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var resolveAssetSource=_reactNative.Image.resolveAssetSource;var directEventEmitter=new _EventEmitter.default();var registerCallableModule=(_require$registerCall=require('react-native').registerCallableModule)!=null?_require$registerCall:_BatchedBridge.default.registerCallableModule.bind(_BatchedBridge.default);registerCallableModule('RNCWebViewMessagingModule',{onShouldStartLoadWithRequest:function onShouldStartLoadWithRequest(event){directEventEmitter.emit('onShouldStartLoadWithRequest',event);},onMessage:function onMessage(event){directEventEmitter.emit('onMessage',event);}});var uniqueRef=0;var WebViewComponent=(0,_react.forwardRef)(function(_ref,ref){var _ref$overScrollMode=_ref.overScrollMode,overScrollMode=_ref$overScrollMode===void 0?'always':_ref$overScrollMode,_ref$javaScriptEnable=_ref.javaScriptEnabled,javaScriptEnabled=_ref$javaScriptEnable===void 0?true:_ref$javaScriptEnable,_ref$thirdPartyCookie=_ref.thirdPartyCookiesEnabled,thirdPartyCookiesEnabled=_ref$thirdPartyCookie===void 0?true:_ref$thirdPartyCookie,_ref$scalesPageToFit=_ref.scalesPageToFit,scalesPageToFit=_ref$scalesPageToFit===void 0?true:_ref$scalesPageToFit,_ref$allowsFullscreen=_ref.allowsFullscreenVideo,allowsFullscreenVideo=_ref$allowsFullscreen===void 0?false:_ref$allowsFullscreen,_ref$allowFileAccess=_ref.allowFileAccess,allowFileAccess=_ref$allowFileAccess===void 0?false:_ref$allowFileAccess,_ref$saveFormDataDisa=_ref.saveFormDataDisabled,saveFormDataDisabled=_ref$saveFormDataDisa===void 0?false:_ref$saveFormDataDisa,_ref$cacheEnabled=_ref.cacheEnabled,cacheEnabled=_ref$cacheEnabled===void 0?true:_ref$cacheEnabled,_ref$androidLayerType=_ref.androidLayerType,androidLayerType=_ref$androidLayerType===void 0?'none':_ref$androidLayerType,_ref$originWhitelist=_ref.originWhitelist,originWhitelist=_ref$originWhitelist===void 0?_WebViewShared.defaultOriginWhitelist:_ref$originWhitelist,_ref$setSupportMultip=_ref.setSupportMultipleWindows,setSupportMultipleWindows=_ref$setSupportMultip===void 0?true:_ref$setSupportMultip,_ref$setBuiltInZoomCo=_ref.setBuiltInZoomControls,setBuiltInZoomControls=_ref$setBuiltInZoomCo===void 0?true:_ref$setBuiltInZoomCo,_ref$setDisplayZoomCo=_ref.setDisplayZoomControls,setDisplayZoomControls=_ref$setDisplayZoomCo===void 0?false:_ref$setDisplayZoomCo,_ref$nestedScrollEnab=_ref.nestedScrollEnabled,nestedScrollEnabled=_ref$nestedScrollEnab===void 0?false:_ref$nestedScrollEnab,startInLoadingState=_ref.startInLoadingState,onNavigationStateChange=_ref.onNavigationStateChange,onLoadStart=_ref.onLoadStart,onError=_ref.onError,onLoad=_ref.onLoad,onLoadEnd=_ref.onLoadEnd,onLoadSubResourceError=_ref.onLoadSubResourceError,onLoadProgress=_ref.onLoadProgress,onHttpErrorProp=_ref.onHttpError,onRenderProcessGoneProp=_ref.onRenderProcessGone,onMessageProp=_ref.onMessage,onOpenWindowProp=_ref.onOpenWindow,renderLoading=_ref.renderLoading,renderError=_ref.renderError,style=_ref.style,containerStyle=_ref.containerStyle,source=_ref.source,nativeConfig=_ref.nativeConfig,onShouldStartLoadWithRequestProp=_ref.onShouldStartLoadWithRequest,injectedJavaScriptObject=_ref.injectedJavaScriptObject,otherProps=(0,_objectWithoutProperties2.default)(_ref,_excluded);var messagingModuleName=(0,_react.useRef)(`WebViewMessageHandler${uniqueRef+=1}`).current;var webViewRef=(0,_react.useRef)(null);var onShouldStartLoadWithRequestCallback=(0,_react.useCallback)(function(shouldStart,url,lockIdentifier){if(lockIdentifier){_NativeRNCWebViewModule.default.shouldStartLoadWithLockIdentifier(shouldStart,lockIdentifier);}else if(shouldStart&&webViewRef.current){_RNCWebViewNativeComponent.Commands.loadUrl(webViewRef.current,url);}},[]);var _useWebViewLogic=(0,_WebViewShared.useWebViewLogic)({onNavigationStateChange:onNavigationStateChange,onLoad:onLoad,onError:onError,onHttpErrorProp:onHttpErrorProp,onLoadSubResourceError:onLoadSubResourceError,onLoadEnd:onLoadEnd,onLoadProgress:onLoadProgress,onLoadStart:onLoadStart,onRenderProcessGoneProp:onRenderProcessGoneProp,onMessageProp:onMessageProp,onOpenWindowProp:onOpenWindowProp,startInLoadingState:startInLoadingState,originWhitelist:originWhitelist,onShouldStartLoadWithRequestProp:onShouldStartLoadWithRequestProp,onShouldStartLoadWithRequestCallback:onShouldStartLoadWithRequestCallback}),onLoadingStart=_useWebViewLogic.onLoadingStart,onShouldStartLoadWithRequest=_useWebViewLogic.onShouldStartLoadWithRequest,onMessage=_useWebViewLogic.onMessage,viewState=_useWebViewLogic.viewState,setViewState=_useWebViewLogic.setViewState,lastErrorEvent=_useWebViewLogic.lastErrorEvent,onHttpError=_useWebViewLogic.onHttpError,onLoadingError=_useWebViewLogic.onLoadingError,onLoadingSubResourceError=_useWebViewLogic.onLoadingSubResourceError,onLoadingFinish=_useWebViewLogic.onLoadingFinish,onLoadingProgress=_useWebViewLogic.onLoadingProgress,onOpenWindow=_useWebViewLogic.onOpenWindow,onRenderProcessGone=_useWebViewLogic.onRenderProcessGone;(0,_react.useImperativeHandle)(ref,function(){return{goForward:function goForward(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.goForward(webViewRef.current);},goBack:function goBack(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.goBack(webViewRef.current);},reload:function reload(){setViewState('LOADING');if(webViewRef.current){_RNCWebViewNativeComponent.Commands.reload(webViewRef.current);}},stopLoading:function stopLoading(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.stopLoading(webViewRef.current);},postMessage:function postMessage(data){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.postMessage(webViewRef.current,data);},injectJavaScript:function injectJavaScript(data){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.injectJavaScript(webViewRef.current,data);},requestFocus:function requestFocus(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.requestFocus(webViewRef.current);},clearFormData:function clearFormData(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.clearFormData(webViewRef.current);},clearCache:function clearCache(includeDiskFiles){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.clearCache(webViewRef.current,includeDiskFiles);},clearHistory:function clearHistory(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.clearHistory(webViewRef.current);}};},[setViewState,webViewRef]);(0,_react.useEffect)(function(){var onShouldStartLoadWithRequestSubscription=directEventEmitter.addListener('onShouldStartLoadWithRequest',function(event){if(event.messagingModuleName===messagingModuleName){var _=event.messagingModuleName,rest=(0,_objectWithoutProperties2.default)(event,_excluded2);onShouldStartLoadWithRequest(rest);}});var onMessageSubscription=directEventEmitter.addListener('onMessage',function(event){if(event.messagingModuleName===messagingModuleName){var _=event.messagingModuleName,rest=(0,_objectWithoutProperties2.default)(event,_excluded3);onMessage(rest);}});return function(){onShouldStartLoadWithRequestSubscription.remove();onMessageSubscription.remove();};},[messagingModuleName,onMessage,onShouldStartLoadWithRequest]);var otherView;if(viewState==='LOADING'){otherView=(renderLoading||_WebViewShared.defaultRenderLoading)();}else if(viewState==='ERROR'){(0,_invariant.default)(lastErrorEvent!=null,'lastErrorEvent expected to be non-null');if(lastErrorEvent){otherView=(renderError||_WebViewShared.defaultRenderError)(lastErrorEvent.domain,lastErrorEvent.code,lastErrorEvent.description);}}else if(viewState!=='IDLE'){console.error(`RNCWebView invalid state encountered: ${viewState}`);}var webViewStyles=[_WebView.default.container,_WebView.default.webView,style];var webViewContainerStyle=[_WebView.default.container,containerStyle];if(typeof source!=='number'&&source&&'method'in source){if(source.method==='POST'&&source.headers){console.warn('WebView: `source.headers` is not supported when using POST.');}else if(source.method==='GET'&&source.body){console.warn('WebView: `source.body` is not supported when using GET.');}}var NativeWebView=(nativeConfig==null?void 0:nativeConfig.component)||_RNCWebViewNativeComponent.default;var sourceResolved=resolveAssetSource(source);var newSource=typeof sourceResolved==='object'?Object.entries(sourceResolved).reduce(function(prev,_ref2){var _ref3=(0,_slicedToArray2.default)(_ref2,2),currKey=_ref3[0],currValue=_ref3[1];return Object.assign({},prev,(0,_defineProperty2.default)({},currKey,currKey==='headers'&&currValue&&typeof currValue==='object'?Object.entries(currValue).map(function(_ref4){var _ref5=(0,_slicedToArray2.default)(_ref4,2),key=_ref5[0],value=_ref5[1];return{name:key,value:value};}):currValue));},{}):sourceResolved;var webView=(0,_jsxRuntime.jsx)(NativeWebView,Object.assign({},otherProps,{messagingEnabled:typeof onMessageProp==='function',messagingModuleName:messagingModuleName,hasOnScroll:!!otherProps.onScroll,onLoadingError:onLoadingError,onLoadingSubResourceError:onLoadingSubResourceError,onLoadingFinish:onLoadingFinish,onLoadingProgress:onLoadingProgress,onLoadingStart:onLoadingStart,onHttpError:onHttpError,onRenderProcessGone:onRenderProcessGone,onMessage:onMessage,onOpenWindow:onOpenWindow,hasOnOpenWindowEvent:onOpenWindowProp!==undefined,onShouldStartLoadWithRequest:onShouldStartLoadWithRequest,ref:webViewRef,source:sourceResolved,newSource:newSource,style:webViewStyles,overScrollMode:overScrollMode,javaScriptEnabled:javaScriptEnabled,thirdPartyCookiesEnabled:thirdPartyCookiesEnabled,scalesPageToFit:scalesPageToFit,allowsFullscreenVideo:allowsFullscreenVideo,allowFileAccess:allowFileAccess,saveFormDataDisabled:saveFormDataDisabled,cacheEnabled:cacheEnabled,androidLayerType:androidLayerType,setSupportMultipleWindows:setSupportMultipleWindows,setBuiltInZoomControls:setBuiltInZoomControls,setDisplayZoomControls:setDisplayZoomControls,nestedScrollEnabled:nestedScrollEnabled,injectedJavaScriptObject:JSON.stringify(injectedJavaScriptObject)},nativeConfig==null?void 0:nativeConfig.props),"webViewKey");return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:webViewContainerStyle,children:[webView,otherView]});});var isFileUploadSupported=_NativeRNCWebViewModule.default.isFileUploadSupported;var WebView=Object.assign(WebViewComponent,{isFileUploadSupported:isFileUploadSupported});var _default=exports.default=WebView;
\ No newline at end of file
+var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _require$registerCall,_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")),_react=_interopRequireWildcard(require("react")),_reactNative=require("react-native"),_BatchedBridge=_interopRequireDefault(require("react-native/Libraries/BatchedBridge/BatchedBridge")),_EventEmitter=_interopRequireDefault(require("react-native/Libraries/vendor/emitter/EventEmitter")),_invariant=_interopRequireDefault(require("invariant")),_RNCWebViewNativeComponent=_interopRequireWildcard(require("./RNCWebViewNativeComponent")),_NativeRNCWebViewModule=_interopRequireDefault(require("./NativeRNCWebViewModule")),_WebViewShared=require("./WebViewShared"),_WebView=_interopRequireDefault(require("./WebView.styles")),_jsxRuntime=require("react/jsx-runtime"),_excluded=["overScrollMode","javaScriptEnabled","thirdPartyCookiesEnabled","scalesPageToFit","allowsFullscreenVideo","allowFileAccess","saveFormDataDisabled","cacheEnabled","androidCameraAccessDisabled","androidMicrophoneAccessDisabled","androidLayerType","originWhitelist","setSupportMultipleWindows","setBuiltInZoomControls","setDisplayZoomControls","nestedScrollEnabled","startInLoadingState","onNavigationStateChange","onLoadStart","onError","onLoad","onLoadEnd","onLoadSubResourceError","onLoadProgress","onHttpError","onRenderProcessGone","onMessage","onOpenWindow","renderLoading","renderError","style","containerStyle","source","nativeConfig","onShouldStartLoadWithRequest","injectedJavaScriptObject"],_excluded2=["messagingModuleName"],_excluded3=["messagingModuleName"],_this=this,_jsxFileName="/home/circleci/code/src/WebView.android.tsx";function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var o={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var a=n?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(o,i,a):o[i]=e[i]}return o.default=e,t&&t.set(e,o),o}var resolveAssetSource=_reactNative.Image.resolveAssetSource,directEventEmitter=new _EventEmitter.default,registerCallableModule=null!=(_require$registerCall=require("react-native").registerCallableModule)?_require$registerCall:_BatchedBridge.default.registerCallableModule.bind(_BatchedBridge.default);registerCallableModule("RNCWebViewMessagingModule",{onShouldStartLoadWithRequest:function(e){directEventEmitter.emit("onShouldStartLoadWithRequest",e)},onMessage:function(e){directEventEmitter.emit("onMessage",e)}});var uniqueRef=0,WebViewComponent=(0,_react.forwardRef)((function(e,r){var t,o=e.overScrollMode,n=void 0===o?"always":o,i=e.javaScriptEnabled,a=void 0===i||i,d=e.thirdPartyCookiesEnabled,s=void 0===d||d,u=e.scalesPageToFit,l=void 0===u||u,c=e.allowsFullscreenVideo,p=void 0!==c&&c,b=e.allowFileAccess,v=void 0!==b&&b,m=e.saveFormDataDisabled,g=void 0!==m&&m,f=e.cacheEnabled,_=void 0===f||f,h=e.androidLayerType,C=void 0===h?"none":h,w=e.androidCameraAccessDisabled,W=void 0!==w&&w,S=e.androidMicrophoneAccessDisabled,R=void 0!==S&&S,E=e.originWhitelist,L=void 0===E?_WebViewShared.defaultOriginWhitelist:E,N=e.setSupportMultipleWindows,q=void 0===N||N,y=e.setBuiltInZoomControls,V=void 0===y||y,M=e.setDisplayZoomControls,j=void 0!==M&&M,P=e.nestedScrollEnabled,D=void 0!==P&&P,O=e.startInLoadingState,F=e.onNavigationStateChange,x=e.onLoadStart,A=e.onError,B=e.onLoad,T=e.onLoadEnd,I=e.onLoadSubResourceError,k=e.onLoadProgress,G=e.onHttpError,H=e.onRenderProcessGone,J=e.onMessage,Z=e.onOpenWindow,U=e.renderLoading,$=e.renderError,K=e.style,z=e.containerStyle,Q=e.source,X=e.nativeConfig,Y=e.onShouldStartLoadWithRequest,ee=e.injectedJavaScriptObject,re=(0,_objectWithoutProperties2.default)(e,_excluded),te=(0,_react.useRef)(`WebViewMessageHandler${uniqueRef+=1}`).current,oe=(0,_react.useRef)(null),ne=(0,_react.useCallback)((function(e,r,t){t?_NativeRNCWebViewModule.default.shouldStartLoadWithLockIdentifier(e,t):e&&oe.current&&_RNCWebViewNativeComponent.Commands.loadUrl(oe.current,r)}),[]),ie=(0,_WebViewShared.useWebViewLogic)({onNavigationStateChange:F,onLoad:B,onError:A,onHttpErrorProp:G,onLoadSubResourceError:I,onLoadEnd:T,onLoadProgress:k,onLoadStart:x,onRenderProcessGoneProp:H,onMessageProp:J,onOpenWindowProp:Z,startInLoadingState:O,originWhitelist:L,onShouldStartLoadWithRequestProp:Y,onShouldStartLoadWithRequestCallback:ne}),ae=ie.onLoadingStart,de=ie.onShouldStartLoadWithRequest,se=ie.onMessage,ue=ie.viewState,le=ie.setViewState,ce=ie.lastErrorEvent,pe=ie.onHttpError,be=ie.onLoadingError,ve=ie.onLoadingSubResourceError,me=ie.onLoadingFinish,ge=ie.onLoadingProgress,fe=ie.onOpenWindow,_e=ie.onRenderProcessGone;(0,_react.useImperativeHandle)(r,(function(){return{goForward:function(){return oe.current&&_RNCWebViewNativeComponent.Commands.goForward(oe.current)},goBack:function(){return oe.current&&_RNCWebViewNativeComponent.Commands.goBack(oe.current)},reload:function(){le("LOADING"),oe.current&&_RNCWebViewNativeComponent.Commands.reload(oe.current)},stopLoading:function(){return oe.current&&_RNCWebViewNativeComponent.Commands.stopLoading(oe.current)},postMessage:function(e){return oe.current&&_RNCWebViewNativeComponent.Commands.postMessage(oe.current,e)},injectJavaScript:function(e){return oe.current&&_RNCWebViewNativeComponent.Commands.injectJavaScript(oe.current,e)},requestFocus:function(){return oe.current&&_RNCWebViewNativeComponent.Commands.requestFocus(oe.current)},clearFormData:function(){return oe.current&&_RNCWebViewNativeComponent.Commands.clearFormData(oe.current)},clearCache:function(e){return oe.current&&_RNCWebViewNativeComponent.Commands.clearCache(oe.current,e)},clearHistory:function(){return oe.current&&_RNCWebViewNativeComponent.Commands.clearHistory(oe.current)}}}),[le,oe]),(0,_react.useEffect)((function(){var e=directEventEmitter.addListener("onShouldStartLoadWithRequest",(function(e){if(e.messagingModuleName===te){e.messagingModuleName;var r=(0,_objectWithoutProperties2.default)(e,_excluded2);de(r)}})),r=directEventEmitter.addListener("onMessage",(function(e){if(e.messagingModuleName===te){e.messagingModuleName;var r=(0,_objectWithoutProperties2.default)(e,_excluded3);se(r)}}));return function(){e.remove(),r.remove()}}),[te,se,de]),"LOADING"===ue?t=(U||_WebViewShared.defaultRenderLoading)():"ERROR"===ue?((0,_invariant.default)(null!=ce,"lastErrorEvent expected to be non-null"),ce&&(t=($||_WebViewShared.defaultRenderError)(ce.domain,ce.code,ce.description))):"IDLE"!==ue&&console.error(`RNCWebView invalid state encountered: ${ue}`);var he=[_WebView.default.container,_WebView.default.webView,K],Ce=[_WebView.default.container,z];"number"!=typeof Q&&Q&&"method"in Q&&("POST"===Q.method&&Q.headers?console.warn("WebView: `source.headers` is not supported when using POST."):"GET"===Q.method&&Q.body&&console.warn("WebView: `source.body` is not supported when using GET."));var we=(null==X?void 0:X.component)||_RNCWebViewNativeComponent.default,We=resolveAssetSource(Q),Se="object"==typeof We?Object.entries(We).reduce((function(e,r){var t=(0,_slicedToArray2.default)(r,2),o=t[0],n=t[1];return Object.assign({},e,(0,_defineProperty2.default)({},o,"headers"===o&&n&&"object"==typeof n?Object.entries(n).map((function(e){var r=(0,_slicedToArray2.default)(e,2);return{name:r[0],value:r[1]}})):n))}),{}):We,Re=(0,_jsxRuntime.jsx)(we,Object.assign({},re,{messagingEnabled:"function"==typeof J,messagingModuleName:te,hasOnScroll:!!re.onScroll,onLoadingError:be,onLoadingSubResourceError:ve,onLoadingFinish:me,onLoadingProgress:ge,onLoadingStart:ae,onHttpError:pe,onRenderProcessGone:_e,onMessage:se,onOpenWindow:fe,hasOnOpenWindowEvent:void 0!==Z,onShouldStartLoadWithRequest:de,ref:oe,source:We,newSource:Se,style:he,overScrollMode:n,javaScriptEnabled:a,thirdPartyCookiesEnabled:s,scalesPageToFit:l,allowsFullscreenVideo:p,allowFileAccess:v,saveFormDataDisabled:g,cacheEnabled:_,androidCameraAccessDisabled:W,androidMicrophoneAccessDisabled:R,androidLayerType:C,setSupportMultipleWindows:q,setBuiltInZoomControls:V,setDisplayZoomControls:j,nestedScrollEnabled:D,injectedJavaScriptObject:JSON.stringify(ee)},null==X?void 0:X.props),"webViewKey");return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:Ce,children:[Re,t]})})),isFileUploadSupported=_NativeRNCWebViewModule.default.isFileUploadSupported,WebView=Object.assign(WebViewComponent,{isFileUploadSupported:isFileUploadSupported}),_default=exports.default=WebView;
\ No newline at end of file
diff --git a/lib/WebViewTypes.d.ts b/lib/WebViewTypes.d.ts
index 998cc88f03f3fbcd0a47f227c01f738dbf4c58bf..669b32606ee814eddc22ebd250d81e33b491fac2 100644
--- a/lib/WebViewTypes.d.ts
+++ b/lib/WebViewTypes.d.ts
@@ -844,6 +844,18 @@ export interface AndroidWebViewProps extends WebViewSharedProps {
      * @platform android
      */
     setSupportMultipleWindows?: boolean;
+    /**
+     * Boolean value to always forbid access to the microphone in the `WebView`, even if the app
+     * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+     * @platform android
+     */
+    androidMicrophoneAccessDisabled?: boolean;
+    /**
+     * Boolean value to always forbid access to the camera in the `WebView`, even if the app
+     * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+     * @platform android
+     */
+    androidCameraAccessDisabled?: boolean;
     /**
      * https://developer.android.com/reference/android/webkit/WebView#setLayerType(int,%20android.graphics.Paint)
      * Sets the layerType. Possible values are:
diff --git a/src/RNCWebViewNativeComponent.ts b/src/RNCWebViewNativeComponent.ts
index 7f4e6c4f73506efa9517314a3ff89f91b097763e..ec88588479522730fe5d894f22b8fbba602f2d3b 100644
--- a/src/RNCWebViewNativeComponent.ts
+++ b/src/RNCWebViewNativeComponent.ts
@@ -147,6 +147,8 @@ export interface NativeProps extends ViewProps {
   allowFileAccess?: boolean;
   allowsProtectedMedia?: boolean;
   allowsFullscreenVideo?: boolean;
+  androidMicrophoneAccessDisabled?: boolean;
+  androidCameraAccessDisabled?: boolean;
   androidLayerType?: WithDefault<'none' | 'software' | 'hardware', 'none'>;
   cacheMode?: WithDefault<
     | 'LOAD_DEFAULT'
