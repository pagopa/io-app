diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java b/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
index 07f73fd00a083ebf5a03bffaa7bbadbd1f648505..882b722236b44adcaabd0d56d34218b01e50e4d9 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
@@ -171,6 +171,10 @@ public class RNCWebChromeClient extends WebChromeClient implements LifecycleEven
             // TODO: RESOURCE_MIDI_SYSEX, RESOURCE_PROTECTED_MEDIA_ID.
             if (androidPermission != null) {
                 if (ContextCompat.checkSelfPermission(this.mWebView.getThemedReactContext(), androidPermission) == PackageManager.PERMISSION_GRANTED) {
+                    if ((androidPermission.equals(Manifest.permission.RECORD_AUDIO) && this.mWebView.getCustomSettings().getMicrophoneAccessDisabled()) ||
+                        (androidPermission.equals(Manifest.permission.CAMERA) && this.mWebView.getCustomSettings().getCameraAccessDisabled())) {
+                        continue;
+                    }
                     grantedPermissions.add(requestedResource);
                 } else {
                     requestedAndroidPermissions.add(androidPermission);
diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
index f83033b3597a425da159555233bacce250ccfce0..f3b98c1a2c72c6e147c1c16cbedf409dd9cfdb9c 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
@@ -563,6 +563,10 @@ class RNCWebViewManagerImpl(private val newArch: Boolean = false) {
         setupWebChromeClient(view)
     }
 
+    fun getCustomSettings(viewWrapper: RNCWebViewWrapper): RNCWebView.CustomWebSettings? {
+        return viewWrapper.webView.customSettings
+    }
+
     fun setAndroidLayerType(viewWrapper: RNCWebViewWrapper, layerTypeString: String?) {
         val view = viewWrapper.webView
         val layerType = when (layerTypeString) {
diff --git a/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 4709e2822499067cef3a4ce571991b96f844e085..252943153991fe3216a028cb32e9922a73e71927 100644
--- a/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -94,6 +94,18 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper>
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
     }
 
+    @Override
+    @ReactProp(name = "androidMicrophoneAccessDisabled")
+    public void setMicrophoneAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setMicrophoneAccessDisabled(disabled);
+    }
+
+    @Override
+    @ReactProp(name = "androidCameraAccessDisabled")
+    public void setCameraAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setCameraAccessDisabled(disabled);
+    }
+
     @Override
     @ReactProp(name = "androidLayerType")
     public void setAndroidLayerType(RNCWebViewWrapper view, @Nullable String value) {
diff --git a/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 974337f41ce01a5102eeafa6e54fbb3b949c48d7..86e5435e9e45d7565160da756cab0ec64b062b79 100644
--- a/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -72,6 +72,16 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper> {
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
     }
 
+    @ReactProp(name = "androidMicrophoneAccessDisabled")
+    public void setMicrophoneAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setMicrophoneAccessDisabled(disabled);
+    }
+
+    @ReactProp(name = "androidCameraAccessDisabled")
+    public void setCameraAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setCameraAccessDisabled(disabled);
+    }
+
     @ReactProp(name = "androidLayerType")
     public void setAndroidLayerType(RNCWebViewWrapper view, @Nullable String value) {
         mRNCWebViewManagerImpl.setAndroidLayerType(view, value);
diff --git a/lib/WebView.android.js b/lib/WebView.android.js
index c6cb7a95c15e9673c048d537bcfb29feb76fb28a..2cf9ceef28c331cfd8a9a103a7b6a5f6162f614d 100644
--- a/lib/WebView.android.js
+++ b/lib/WebView.android.js
@@ -1 +1 @@
-var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _BatchedBridge=_interopRequireDefault(require("react-native/Libraries/BatchedBridge/BatchedBridge"));var _EventEmitter=_interopRequireDefault(require("react-native/Libraries/vendor/emitter/EventEmitter"));var _invariant=_interopRequireDefault(require("invariant"));var _RNCWebViewNativeComponent=_interopRequireWildcard(require("./RNCWebViewNativeComponent"));var _NativeRNCWebViewModule=_interopRequireDefault(require("./NativeRNCWebViewModule"));var _WebViewShared=require("./WebViewShared");var _WebView=_interopRequireDefault(require("./WebView.styles"));var _jsxRuntime=require("react/jsx-runtime");var _excluded=["overScrollMode","javaScriptEnabled","thirdPartyCookiesEnabled","scalesPageToFit","allowsFullscreenVideo","allowFileAccess","saveFormDataDisabled","cacheEnabled","androidLayerType","originWhitelist","setSupportMultipleWindows","setBuiltInZoomControls","setDisplayZoomControls","nestedScrollEnabled","startInLoadingState","onNavigationStateChange","onLoadStart","onError","onLoad","onLoadEnd","onLoadSubResourceError","onLoadProgress","onHttpError","onRenderProcessGone","onMessage","onOpenWindow","renderLoading","renderError","style","containerStyle","source","nativeConfig","onShouldStartLoadWithRequest","injectedJavaScriptObject"],_excluded2=["messagingModuleName"],_excluded3=["messagingModuleName"];var _require$registerCall,_this=this,_jsxFileName="/home/circleci/code/src/WebView.android.tsx";function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var resolveAssetSource=_reactNative.Image.resolveAssetSource;var directEventEmitter=new _EventEmitter.default();var registerCallableModule=(_require$registerCall=require('react-native').registerCallableModule)!=null?_require$registerCall:_BatchedBridge.default.registerCallableModule.bind(_BatchedBridge.default);registerCallableModule('RNCWebViewMessagingModule',{onShouldStartLoadWithRequest:function onShouldStartLoadWithRequest(event){directEventEmitter.emit('onShouldStartLoadWithRequest',event);},onMessage:function onMessage(event){directEventEmitter.emit('onMessage',event);}});var uniqueRef=0;var WebViewComponent=(0,_react.forwardRef)(function(_ref,ref){var _ref$overScrollMode=_ref.overScrollMode,overScrollMode=_ref$overScrollMode===void 0?'always':_ref$overScrollMode,_ref$javaScriptEnable=_ref.javaScriptEnabled,javaScriptEnabled=_ref$javaScriptEnable===void 0?true:_ref$javaScriptEnable,_ref$thirdPartyCookie=_ref.thirdPartyCookiesEnabled,thirdPartyCookiesEnabled=_ref$thirdPartyCookie===void 0?true:_ref$thirdPartyCookie,_ref$scalesPageToFit=_ref.scalesPageToFit,scalesPageToFit=_ref$scalesPageToFit===void 0?true:_ref$scalesPageToFit,_ref$allowsFullscreen=_ref.allowsFullscreenVideo,allowsFullscreenVideo=_ref$allowsFullscreen===void 0?false:_ref$allowsFullscreen,_ref$allowFileAccess=_ref.allowFileAccess,allowFileAccess=_ref$allowFileAccess===void 0?false:_ref$allowFileAccess,_ref$saveFormDataDisa=_ref.saveFormDataDisabled,saveFormDataDisabled=_ref$saveFormDataDisa===void 0?false:_ref$saveFormDataDisa,_ref$cacheEnabled=_ref.cacheEnabled,cacheEnabled=_ref$cacheEnabled===void 0?true:_ref$cacheEnabled,_ref$androidLayerType=_ref.androidLayerType,androidLayerType=_ref$androidLayerType===void 0?'none':_ref$androidLayerType,_ref$originWhitelist=_ref.originWhitelist,originWhitelist=_ref$originWhitelist===void 0?_WebViewShared.defaultOriginWhitelist:_ref$originWhitelist,_ref$setSupportMultip=_ref.setSupportMultipleWindows,setSupportMultipleWindows=_ref$setSupportMultip===void 0?true:_ref$setSupportMultip,_ref$setBuiltInZoomCo=_ref.setBuiltInZoomControls,setBuiltInZoomControls=_ref$setBuiltInZoomCo===void 0?true:_ref$setBuiltInZoomCo,_ref$setDisplayZoomCo=_ref.setDisplayZoomControls,setDisplayZoomControls=_ref$setDisplayZoomCo===void 0?false:_ref$setDisplayZoomCo,_ref$nestedScrollEnab=_ref.nestedScrollEnabled,nestedScrollEnabled=_ref$nestedScrollEnab===void 0?false:_ref$nestedScrollEnab,startInLoadingState=_ref.startInLoadingState,onNavigationStateChange=_ref.onNavigationStateChange,onLoadStart=_ref.onLoadStart,onError=_ref.onError,onLoad=_ref.onLoad,onLoadEnd=_ref.onLoadEnd,onLoadSubResourceError=_ref.onLoadSubResourceError,onLoadProgress=_ref.onLoadProgress,onHttpErrorProp=_ref.onHttpError,onRenderProcessGoneProp=_ref.onRenderProcessGone,onMessageProp=_ref.onMessage,onOpenWindowProp=_ref.onOpenWindow,renderLoading=_ref.renderLoading,renderError=_ref.renderError,style=_ref.style,containerStyle=_ref.containerStyle,source=_ref.source,nativeConfig=_ref.nativeConfig,onShouldStartLoadWithRequestProp=_ref.onShouldStartLoadWithRequest,injectedJavaScriptObject=_ref.injectedJavaScriptObject,otherProps=(0,_objectWithoutProperties2.default)(_ref,_excluded);var messagingModuleName=(0,_react.useRef)(`WebViewMessageHandler${uniqueRef+=1}`).current;var webViewRef=(0,_react.useRef)(null);var onShouldStartLoadWithRequestCallback=(0,_react.useCallback)(function(shouldStart,url,lockIdentifier){if(lockIdentifier){_NativeRNCWebViewModule.default.shouldStartLoadWithLockIdentifier(shouldStart,lockIdentifier);}else if(shouldStart&&webViewRef.current){_RNCWebViewNativeComponent.Commands.loadUrl(webViewRef.current,url);}},[]);var _useWebViewLogic=(0,_WebViewShared.useWebViewLogic)({onNavigationStateChange:onNavigationStateChange,onLoad:onLoad,onError:onError,onHttpErrorProp:onHttpErrorProp,onLoadSubResourceError:onLoadSubResourceError,onLoadEnd:onLoadEnd,onLoadProgress:onLoadProgress,onLoadStart:onLoadStart,onRenderProcessGoneProp:onRenderProcessGoneProp,onMessageProp:onMessageProp,onOpenWindowProp:onOpenWindowProp,startInLoadingState:startInLoadingState,originWhitelist:originWhitelist,onShouldStartLoadWithRequestProp:onShouldStartLoadWithRequestProp,onShouldStartLoadWithRequestCallback:onShouldStartLoadWithRequestCallback}),onLoadingStart=_useWebViewLogic.onLoadingStart,onShouldStartLoadWithRequest=_useWebViewLogic.onShouldStartLoadWithRequest,onMessage=_useWebViewLogic.onMessage,viewState=_useWebViewLogic.viewState,setViewState=_useWebViewLogic.setViewState,lastErrorEvent=_useWebViewLogic.lastErrorEvent,onHttpError=_useWebViewLogic.onHttpError,onLoadingError=_useWebViewLogic.onLoadingError,onLoadingSubResourceError=_useWebViewLogic.onLoadingSubResourceError,onLoadingFinish=_useWebViewLogic.onLoadingFinish,onLoadingProgress=_useWebViewLogic.onLoadingProgress,onOpenWindow=_useWebViewLogic.onOpenWindow,onRenderProcessGone=_useWebViewLogic.onRenderProcessGone;(0,_react.useImperativeHandle)(ref,function(){return{goForward:function goForward(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.goForward(webViewRef.current);},goBack:function goBack(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.goBack(webViewRef.current);},reload:function reload(){setViewState('LOADING');if(webViewRef.current){_RNCWebViewNativeComponent.Commands.reload(webViewRef.current);}},stopLoading:function stopLoading(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.stopLoading(webViewRef.current);},postMessage:function postMessage(data){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.postMessage(webViewRef.current,data);},injectJavaScript:function injectJavaScript(data){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.injectJavaScript(webViewRef.current,data);},requestFocus:function requestFocus(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.requestFocus(webViewRef.current);},clearFormData:function clearFormData(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.clearFormData(webViewRef.current);},clearCache:function clearCache(includeDiskFiles){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.clearCache(webViewRef.current,includeDiskFiles);},clearHistory:function clearHistory(){return webViewRef.current&&_RNCWebViewNativeComponent.Commands.clearHistory(webViewRef.current);}};},[setViewState,webViewRef]);(0,_react.useEffect)(function(){var onShouldStartLoadWithRequestSubscription=directEventEmitter.addListener('onShouldStartLoadWithRequest',function(event){if(event.messagingModuleName===messagingModuleName){var _=event.messagingModuleName,rest=(0,_objectWithoutProperties2.default)(event,_excluded2);onShouldStartLoadWithRequest(rest);}});var onMessageSubscription=directEventEmitter.addListener('onMessage',function(event){if(event.messagingModuleName===messagingModuleName){var _=event.messagingModuleName,rest=(0,_objectWithoutProperties2.default)(event,_excluded3);onMessage(rest);}});return function(){onShouldStartLoadWithRequestSubscription.remove();onMessageSubscription.remove();};},[messagingModuleName,onMessage,onShouldStartLoadWithRequest]);var otherView;if(viewState==='LOADING'){otherView=(renderLoading||_WebViewShared.defaultRenderLoading)();}else if(viewState==='ERROR'){(0,_invariant.default)(lastErrorEvent!=null,'lastErrorEvent expected to be non-null');if(lastErrorEvent){otherView=(renderError||_WebViewShared.defaultRenderError)(lastErrorEvent.domain,lastErrorEvent.code,lastErrorEvent.description);}}else if(viewState!=='IDLE'){console.error(`RNCWebView invalid state encountered: ${viewState}`);}var webViewStyles=[_WebView.default.container,_WebView.default.webView,style];var webViewContainerStyle=[_WebView.default.container,containerStyle];if(typeof source!=='number'&&source&&'method'in source){if(source.method==='POST'&&source.headers){console.warn('WebView: `source.headers` is not supported when using POST.');}else if(source.method==='GET'&&source.body){console.warn('WebView: `source.body` is not supported when using GET.');}}var NativeWebView=(nativeConfig==null?void 0:nativeConfig.component)||_RNCWebViewNativeComponent.default;var sourceResolved=resolveAssetSource(source);var newSource=typeof sourceResolved==='object'?Object.entries(sourceResolved).reduce(function(prev,_ref2){var _ref3=(0,_slicedToArray2.default)(_ref2,2),currKey=_ref3[0],currValue=_ref3[1];return Object.assign({},prev,(0,_defineProperty2.default)({},currKey,currKey==='headers'&&currValue&&typeof currValue==='object'?Object.entries(currValue).map(function(_ref4){var _ref5=(0,_slicedToArray2.default)(_ref4,2),key=_ref5[0],value=_ref5[1];return{name:key,value:value};}):currValue));},{}):sourceResolved;var webView=(0,_jsxRuntime.jsx)(NativeWebView,Object.assign({},otherProps,{messagingEnabled:typeof onMessageProp==='function',messagingModuleName:messagingModuleName,hasOnScroll:!!otherProps.onScroll,onLoadingError:onLoadingError,onLoadingSubResourceError:onLoadingSubResourceError,onLoadingFinish:onLoadingFinish,onLoadingProgress:onLoadingProgress,onLoadingStart:onLoadingStart,onHttpError:onHttpError,onRenderProcessGone:onRenderProcessGone,onMessage:onMessage,onOpenWindow:onOpenWindow,hasOnOpenWindowEvent:onOpenWindowProp!==undefined,onShouldStartLoadWithRequest:onShouldStartLoadWithRequest,ref:webViewRef,source:sourceResolved,newSource:newSource,style:webViewStyles,overScrollMode:overScrollMode,javaScriptEnabled:javaScriptEnabled,thirdPartyCookiesEnabled:thirdPartyCookiesEnabled,scalesPageToFit:scalesPageToFit,allowsFullscreenVideo:allowsFullscreenVideo,allowFileAccess:allowFileAccess,saveFormDataDisabled:saveFormDataDisabled,cacheEnabled:cacheEnabled,androidLayerType:androidLayerType,setSupportMultipleWindows:setSupportMultipleWindows,setBuiltInZoomControls:setBuiltInZoomControls,setDisplayZoomControls:setDisplayZoomControls,nestedScrollEnabled:nestedScrollEnabled,injectedJavaScriptObject:JSON.stringify(injectedJavaScriptObject)},nativeConfig==null?void 0:nativeConfig.props),"webViewKey");return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:webViewContainerStyle,children:[webView,otherView]});});var isFileUploadSupported=_NativeRNCWebViewModule.default.isFileUploadSupported;var WebView=Object.assign(WebViewComponent,{isFileUploadSupported:isFileUploadSupported});var _default=exports.default=WebView;
\ No newline at end of file
+var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _require$registerCall,_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")),_react=_interopRequireWildcard(require("react")),_reactNative=require("react-native"),_BatchedBridge=_interopRequireDefault(require("react-native/Libraries/BatchedBridge/BatchedBridge")),_EventEmitter=_interopRequireDefault(require("react-native/Libraries/vendor/emitter/EventEmitter")),_invariant=_interopRequireDefault(require("invariant")),_RNCWebViewNativeComponent=_interopRequireWildcard(require("./RNCWebViewNativeComponent")),_NativeRNCWebViewModule=_interopRequireDefault(require("./NativeRNCWebViewModule")),_WebViewShared=require("./WebViewShared"),_WebView=_interopRequireDefault(require("./WebView.styles")),_jsxRuntime=require("react/jsx-runtime"),_excluded=["overScrollMode","javaScriptEnabled","thirdPartyCookiesEnabled","scalesPageToFit","allowsFullscreenVideo","allowFileAccess","saveFormDataDisabled","cacheEnabled","androidMicrophoneAccessDisabled","androidCameraAccessDisabled","androidLayerType","originWhitelist","setSupportMultipleWindows","setBuiltInZoomControls","setDisplayZoomControls","nestedScrollEnabled","startInLoadingState","onNavigationStateChange","onLoadStart","onError","onLoad","onLoadEnd","onLoadSubResourceError","onLoadProgress","onHttpError","onRenderProcessGone","onMessage","onOpenWindow","renderLoading","renderError","style","containerStyle","source","nativeConfig","onShouldStartLoadWithRequest","injectedJavaScriptObject"],_excluded2=["messagingModuleName"],_excluded3=["messagingModuleName"],_this=this,_jsxFileName="/home/circleci/code/src/WebView.android.tsx";function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var o={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var a=n?Object.getOwnPropertyDescriptor(e,i):null;a&&(a.get||a.set)?Object.defineProperty(o,i,a):o[i]=e[i]}return o.default=e,t&&t.set(e,o),o}var resolveAssetSource=_reactNative.Image.resolveAssetSource,directEventEmitter=new _EventEmitter.default,registerCallableModule=null!=(_require$registerCall=require("react-native").registerCallableModule)?_require$registerCall:_BatchedBridge.default.registerCallableModule.bind(_BatchedBridge.default);registerCallableModule("RNCWebViewMessagingModule",{onShouldStartLoadWithRequest:function(e){directEventEmitter.emit("onShouldStartLoadWithRequest",e)},onMessage:function(e){directEventEmitter.emit("onMessage",e)}});var uniqueRef=0,WebViewComponent=(0,_react.forwardRef)((function(e,r){var t,o=e.overScrollMode,n=void 0===o?"always":o,i=e.javaScriptEnabled,a=void 0===i||i,d=e.thirdPartyCookiesEnabled,s=void 0===d||d,u=e.scalesPageToFit,l=void 0===u||u,c=e.allowsFullscreenVideo,p=void 0!==c&&c,b=e.allowFileAccess,v=void 0!==b&&b,m=e.saveFormDataDisabled,f=void 0!==m&&m,g=e.cacheEnabled,_=void 0===g||g,h=e.androidLayerType,C=void 0===h?"none":h,w=e.originWhitelist,W=void 0===w?_WebViewShared.defaultOriginWhitelist:w,S=e.setSupportMultipleWindows,R=void 0===S||S,E=e.setBuiltInZoomControls,L=void 0===E||E,N=e.setDisplayZoomControls,q=void 0!==N&&N,y=e.nestedScrollEnabled,V=void 0!==y&&y,M=(e._ref$androidMicrophoneAcceessDisabled,e._ref$androidCameraAccessDisabled),j=void 0!==M&&M,P=e.startInLoadingState,D=e.onNavigationStateChange,O=e.onLoadStart,F=e.onError,A=e.onLoad,x=e.onLoadEnd,B=e.onLoadSubResourceError,T=e.onLoadProgress,I=e.onHttpError,k=e.onRenderProcessGone,G=e.onMessage,H=e.onOpenWindow,$=e.renderLoading,J=e.renderError,Z=e.style,U=e.containerStyle,K=e.source,z=e.nativeConfig,Q=e.onShouldStartLoadWithRequest,X=e.injectedJavaScriptObject,Y=(0,_objectWithoutProperties2.default)(e,_excluded),ee=(0,_react.useRef)(`WebViewMessageHandler${uniqueRef+=1}`).current,re=(0,_react.useRef)(null),te=(0,_react.useCallback)((function(e,r,t){t?_NativeRNCWebViewModule.default.shouldStartLoadWithLockIdentifier(e,t):e&&re.current&&_RNCWebViewNativeComponent.Commands.loadUrl(re.current,r)}),[]),oe=(0,_WebViewShared.useWebViewLogic)({onNavigationStateChange:D,onLoad:A,onError:F,onHttpErrorProp:I,onLoadSubResourceError:B,onLoadEnd:x,onLoadProgress:T,onLoadStart:O,onRenderProcessGoneProp:k,onMessageProp:G,onOpenWindowProp:H,startInLoadingState:P,originWhitelist:W,onShouldStartLoadWithRequestProp:Q,onShouldStartLoadWithRequestCallback:te}),ne=oe.onLoadingStart,ie=oe.onShouldStartLoadWithRequest,ae=oe.onMessage,de=oe.viewState,se=oe.setViewState,ue=oe.lastErrorEvent,le=oe.onHttpError,ce=oe.onLoadingError,pe=oe.onLoadingSubResourceError,be=oe.onLoadingFinish,ve=oe.onLoadingProgress,me=oe.onOpenWindow,fe=oe.onRenderProcessGone;(0,_react.useImperativeHandle)(r,(function(){return{goForward:function(){return re.current&&_RNCWebViewNativeComponent.Commands.goForward(re.current)},goBack:function(){return re.current&&_RNCWebViewNativeComponent.Commands.goBack(re.current)},reload:function(){se("LOADING"),re.current&&_RNCWebViewNativeComponent.Commands.reload(re.current)},stopLoading:function(){return re.current&&_RNCWebViewNativeComponent.Commands.stopLoading(re.current)},postMessage:function(e){return re.current&&_RNCWebViewNativeComponent.Commands.postMessage(re.current,e)},injectJavaScript:function(e){return re.current&&_RNCWebViewNativeComponent.Commands.injectJavaScript(re.current,e)},requestFocus:function(){return re.current&&_RNCWebViewNativeComponent.Commands.requestFocus(re.current)},clearFormData:function(){return re.current&&_RNCWebViewNativeComponent.Commands.clearFormData(re.current)},clearCache:function(e){return re.current&&_RNCWebViewNativeComponent.Commands.clearCache(re.current,e)},clearHistory:function(){return re.current&&_RNCWebViewNativeComponent.Commands.clearHistory(re.current)}}}),[se,re]),(0,_react.useEffect)((function(){var e=directEventEmitter.addListener("onShouldStartLoadWithRequest",(function(e){if(e.messagingModuleName===ee){e.messagingModuleName;var r=(0,_objectWithoutProperties2.default)(e,_excluded2);ie(r)}})),r=directEventEmitter.addListener("onMessage",(function(e){if(e.messagingModuleName===ee){e.messagingModuleName;var r=(0,_objectWithoutProperties2.default)(e,_excluded3);ae(r)}}));return function(){e.remove(),r.remove()}}),[ee,ae,ie]),"LOADING"===de?t=($||_WebViewShared.defaultRenderLoading)():"ERROR"===de?((0,_invariant.default)(null!=ue,"lastErrorEvent expected to be non-null"),ue&&(t=(J||_WebViewShared.defaultRenderError)(ue.domain,ue.code,ue.description))):"IDLE"!==de&&console.error(`RNCWebView invalid state encountered: ${de}`);var ge=[_WebView.default.container,_WebView.default.webView,Z],_e=[_WebView.default.container,U];"number"!=typeof K&&K&&"method"in K&&("POST"===K.method&&K.headers?console.warn("WebView: `source.headers` is not supported when using POST."):"GET"===K.method&&K.body&&console.warn("WebView: `source.body` is not supported when using GET."));var he=(null==z?void 0:z.component)||_RNCWebViewNativeComponent.default,Ce=resolveAssetSource(K),we="object"==typeof Ce?Object.entries(Ce).reduce((function(e,r){var t=(0,_slicedToArray2.default)(r,2),o=t[0],n=t[1];return Object.assign({},e,(0,_defineProperty2.default)({},o,"headers"===o&&n&&"object"==typeof n?Object.entries(n).map((function(e){var r=(0,_slicedToArray2.default)(e,2);return{name:r[0],value:r[1]}})):n))}),{}):Ce,We=(0,_jsxRuntime.jsx)(he,Object.assign({},Y,{messagingEnabled:"function"==typeof G,messagingModuleName:ee,hasOnScroll:!!Y.onScroll,onLoadingError:ce,onLoadingSubResourceError:pe,onLoadingFinish:be,onLoadingProgress:ve,onLoadingStart:ne,onHttpError:le,onRenderProcessGone:fe,onMessage:ae,onOpenWindow:me,hasOnOpenWindowEvent:void 0!==H,onShouldStartLoadWithRequest:ie,ref:re,source:Ce,newSource:we,style:ge,overScrollMode:n,javaScriptEnabled:a,thirdPartyCookiesEnabled:s,scalesPageToFit:l,allowsFullscreenVideo:p,allowFileAccess:v,saveFormDataDisabled:f,cacheEnabled:_,androidMicrophoneAccessDisabled:androidMicrophoneAccessDisabled,androidCameraAccessDisabled:j,androidLayerType:C,setSupportMultipleWindows:R,setBuiltInZoomControls:L,setDisplayZoomControls:q,nestedScrollEnabled:V,injectedJavaScriptObject:JSON.stringify(X)},null==z?void 0:z.props),"webViewKey");return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:_e,children:[We,t]})})),isFileUploadSupported=_NativeRNCWebViewModule.default.isFileUploadSupported,WebView=Object.assign(WebViewComponent,{isFileUploadSupported:isFileUploadSupported}),_default=exports.default=WebView;
\ No newline at end of file
diff --git a/lib/WebViewTypes.d.ts b/lib/WebViewTypes.d.ts
index 998cc88f03f3fbcd0a47f227c01f738dbf4c58bf..669b32606ee814eddc22ebd250d81e33b491fac2 100644
--- a/lib/WebViewTypes.d.ts
+++ b/lib/WebViewTypes.d.ts
@@ -844,6 +844,18 @@ export interface AndroidWebViewProps extends WebViewSharedProps {
      * @platform android
      */
     setSupportMultipleWindows?: boolean;
+    /**
+     * Boolean value to always forbid access to the microphone in the `WebView`, even if the app
+     * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+     * @platform android
+     */
+    androidMicrophoneAccessDisabled?: boolean;
+    /**
+     * Boolean value to always forbid access to the camera in the `WebView`, even if the app
+     * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+     * @platform android
+     */
+    androidCameraAccessDisabled?: boolean;
     /**
      * https://developer.android.com/reference/android/webkit/WebView#setLayerType(int,%20android.graphics.Paint)
      * Sets the layerType. Possible values are:
