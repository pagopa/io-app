/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.2.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


/**
 * Describes a SPID Identity Provider
 */
export type IdentityProvider = {
    id: string,
    logo: any,
    name: string,
    entityID: string,
    profileUrl: string
};
export type ApiFetchSuccess<T>= {
    isError: undefined,
    result: T
};
export type ApiFetchFailure = {
    isError: undefined,
    error: Error
};
export type ApiFetchResult<T>= ApiFetchSuccess<T>| ApiFetchFailure;
export type Versionable = {
    version: number
};
/**
 * A type that makes all fields of type T optional, then adds `version` as the only
 * required field. This type is used mostly to update an API entity.
 */
export type WithOnlyVersionRequired<T>= Partial<T>& Versionable;
export type ApiProfile = {
    is_inbox_enabled: boolean
} & Versionable;
export type LoginSuccess = {
    success: undefined,
    token: string
};
export type LoginFailure = {
    success: undefined
};
export type LoginResult = LoginSuccess | LoginFailure;
declare export var extractLoginResult: (url: string) => LoginSuccess | LoginFailure | null;
declare export var fetchProfile: (token: string) => Promise<ApiFetchResult<ApiProfile >> ;
declare export var postProfile: (
    token: string,
    newProfile: WithOnlyVersionRequired<ApiProfile>) => Promise<ApiFetchResult<ApiProfile >> ;
