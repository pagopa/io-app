diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
index 07f73fd..882b722 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebChromeClient.java
@@ -171,6 +171,10 @@ public class RNCWebChromeClient extends WebChromeClient implements LifecycleEven
             // TODO: RESOURCE_MIDI_SYSEX, RESOURCE_PROTECTED_MEDIA_ID.
             if (androidPermission != null) {
                 if (ContextCompat.checkSelfPermission(this.mWebView.getThemedReactContext(), androidPermission) == PackageManager.PERMISSION_GRANTED) {
+                    if ((androidPermission.equals(Manifest.permission.RECORD_AUDIO) && this.mWebView.getCustomSettings().getMicrophoneAccessDisabled()) ||
+                        (androidPermission.equals(Manifest.permission.CAMERA) && this.mWebView.getCustomSettings().getCameraAccessDisabled())) {
+                        continue;
+                    }
                     grantedPermissions.add(requestedResource);
                 } else {
                     requestedAndroidPermissions.add(androidPermission);
diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
index 80c6803..27c8d00 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
@@ -79,6 +79,16 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
     protected boolean nestedScrollEnabled = false;
     protected ProgressChangedFilter progressChangedFilter;
 
+    /**
+     * It is impossibile to override WebView getSettings(), so RNCWebView has getCustomSettings()
+     */
+    private CustomWebSettings customWebSettings;
+    public CustomWebSettings getCustomSettings() {
+        if (customWebSettings == null) {
+            customWebSettings = new CustomWebSettings();
+        }
+        return customWebSettings;
+    }
     /**
      * WebView must be created with an context of the current activity
      * <p>
@@ -465,4 +475,25 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
             return waitingForCommandLoadUrl;
         }
     }
+
+    public class CustomWebSettings {
+        private boolean microphoneAccess = true;
+        private boolean cameraAccess = true;
+
+        public boolean getMicrophoneAccessDisabled() {
+            return !microphoneAccess;
+        }
+
+        public boolean getCameraAccessDisabled() {
+            return !cameraAccess;
+        }
+
+        public void setMicrophoneAccessDisabled(boolean b) {
+            microphoneAccess = !b;
+        }
+
+        public void setCameraAccessDisabled(boolean b) {
+            cameraAccess = !b;
+        }
+    }
 }
\ No newline at end of file
diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
index f83033b..f3b98c1 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
@@ -563,6 +563,10 @@ class RNCWebViewManagerImpl(private val newArch: Boolean = false) {
         setupWebChromeClient(view)
     }
 
+    fun getCustomSettings(viewWrapper: RNCWebViewWrapper): RNCWebView.CustomWebSettings? {
+        return viewWrapper.webView.customSettings
+    }
+
     fun setAndroidLayerType(viewWrapper: RNCWebViewWrapper, layerTypeString: String?) {
         val view = viewWrapper.webView
         val layerType = when (layerTypeString) {
diff --git a/node_modules/react-native-webview/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/node_modules/react-native-webview/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 4709e28..2529431 100644
--- a/node_modules/react-native-webview/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/node_modules/react-native-webview/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -94,6 +94,18 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper>
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
     }
 
+    @Override
+    @ReactProp(name = "androidMicrophoneAccessDisabled")
+    public void setMicrophoneAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setMicrophoneAccessDisabled(disabled);
+    }
+
+    @Override
+    @ReactProp(name = "androidCameraAccessDisabled")
+    public void setCameraAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setCameraAccessDisabled(disabled);
+    }
+
     @Override
     @ReactProp(name = "androidLayerType")
     public void setAndroidLayerType(RNCWebViewWrapper view, @Nullable String value) {
diff --git a/node_modules/react-native-webview/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/node_modules/react-native-webview/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 974337f..86e5435 100644
--- a/node_modules/react-native-webview/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/node_modules/react-native-webview/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -72,6 +72,16 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper> {
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
     }
 
+    @ReactProp(name = "androidMicrophoneAccessDisabled")
+    public void setMicrophoneAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setMicrophoneAccessDisabled(disabled);
+    }
+
+    @ReactProp(name = "androidCameraAccessDisabled")
+    public void setCameraAccessDisabled(RNCWebViewWrapper view, boolean disabled) {
+        mRNCWebViewManagerImpl.getCustomSettings(view).setCameraAccessDisabled(disabled);
+    }
+
     @ReactProp(name = "androidLayerType")
     public void setAndroidLayerType(RNCWebViewWrapper view, @Nullable String value) {
         mRNCWebViewManagerImpl.setAndroidLayerType(view, value);
diff --git a/node_modules/react-native-webview/lib/WebViewTypes.d.ts b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
index 998cc88..669b326 100644
--- a/node_modules/react-native-webview/lib/WebViewTypes.d.ts
+++ b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
@@ -844,6 +844,18 @@ export interface AndroidWebViewProps extends WebViewSharedProps {
      * @platform android
      */
     setSupportMultipleWindows?: boolean;
+    /**
+     * Boolean value to always forbid access to the microphone in the `WebView`, even if the app
+     * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+     * @platform android
+     */
+    androidMicrophoneAccessDisabled?: boolean;
+    /**
+     * Boolean value to always forbid access to the camera in the `WebView`, even if the app
+     * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+     * @platform android
+     */
+    androidCameraAccessDisabled?: boolean;
     /**
      * https://developer.android.com/reference/android/webkit/WebView#setLayerType(int,%20android.graphics.Paint)
      * Sets the layerType. Possible values are:
