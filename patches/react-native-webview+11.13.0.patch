diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManager.java b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManager.java
index f743bbc..7e46417 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -323,6 +323,16 @@ public class RNCWebViewManager extends SimpleViewManager<WebView> {
     }
   }
 
+  @ReactProp(name = "androidMicrophoneAccessDisabled")
+  public void setMicrophoneAccessDisabled(WebView view, boolean disabled) {
+    ((RNCWebView) view).getCustomSettings().setMicrophoneAccessDisabled(disabled);
+  }
+
+  @ReactProp(name = "androidCameraAccessDisabled")
+  public void setCameraAccessDisabled(WebView view, boolean disabled) {
+    ((RNCWebView) view).getCustomSettings().setCameraAccessDisabled(disabled);
+  }
+
   @ReactProp(name = "androidLayerType")
   public void setLayerType(WebView view, String layerTypeString) {
     int layerType = View.LAYER_TYPE_NONE;
@@ -1229,6 +1239,10 @@ public class RNCWebViewManager extends SimpleViewManager<WebView> {
 
         if (androidPermission != null) {
           if (ContextCompat.checkSelfPermission(mReactContext, androidPermission) == PackageManager.PERMISSION_GRANTED) {
+              if ((androidPermission.equals(Manifest.permission.RECORD_AUDIO) && ((RNCWebView) mWebView).getCustomSettings().getMicrophoneAccessDisabled()) ||
+                (androidPermission.equals(Manifest.permission.CAMERA) && ((RNCWebView) mWebView).getCustomSettings().getCameraAccessDisabled())) {
+                continue;
+            }
             grantedPermissions.add(requestedResource);
           } else {
             requestedAndroidPermissions.add(androidPermission);
@@ -1256,7 +1270,6 @@ public class RNCWebViewManager extends SimpleViewManager<WebView> {
 
       if (ContextCompat.checkSelfPermission(mReactContext, Manifest.permission.ACCESS_FINE_LOCATION)
         != PackageManager.PERMISSION_GRANTED) {
-
         /*
          * Keep the trace of callback and origin for the async permission request
          */
@@ -1447,6 +1460,17 @@ public class RNCWebViewManager extends SimpleViewManager<WebView> {
     protected boolean nestedScrollEnabled = false;
     protected ProgressChangedFilter progressChangedFilter;
 
+    /**
+       *  It is impossibile to override WebView getSettings(), so RNCWebView has getCustomSettings()
+       */
+    private CustomWebSettings customWebSettings;
+    public CustomWebSettings getCustomSettings() {
+      if (customWebSettings == null) {
+        customWebSettings = new CustomWebSettings();
+      }
+      return customWebSettings;
+    }
+
     /**
      * WebView must be created with an context of the current activity
      * <p>
@@ -1735,5 +1759,26 @@ public class RNCWebViewManager extends SimpleViewManager<WebView> {
         return waitingForCommandLoadUrl;
       }
     }
+
+    private class CustomWebSettings {
+      private boolean microphoneAccess = true;
+      private boolean cameraAccess = true;
+
+      private boolean getMicrophoneAccessDisabled() {
+        return !microphoneAccess;
+      }
+
+      private boolean getCameraAccessDisabled() {
+        return !cameraAccess;
+      }
+
+      private void setMicrophoneAccessDisabled(boolean b) {
+        microphoneAccess = !b;
+      }
+
+      private void setCameraAccessDisabled(boolean b) {
+        cameraAccess = !b;
+      }
+    }
   }
 }
diff --git a/node_modules/react-native-webview/lib/WebView.android.js b/node_modules/react-native-webview/lib/WebView.android.js
index 7ab7d76..484677b 100644
--- a/node_modules/react-native-webview/lib/WebView.android.js
+++ b/node_modules/react-native-webview/lib/WebView.android.js
@@ -284,6 +284,8 @@ var WebView = /** @class */ (function (_super) {
         setSupportMultipleWindows: true,
         setBuiltInZoomControls: true,
         setDisplayZoomControls: false,
+        androidMicrophoneAccessDisabled: false,
+        androidCameraAccessDisabled: false,
         nestedScrollEnabled: false
     };
     WebView.isFileUploadSupported = function () { return __awaiter(void 0, void 0, void 0, function () {
diff --git a/node_modules/react-native-webview/lib/WebViewTypes.d.ts b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
index 3652f1a..a743f54 100644
--- a/node_modules/react-native-webview/lib/WebViewTypes.d.ts
+++ b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
@@ -743,6 +743,18 @@ export interface AndroidWebViewProps extends WebViewSharedProps {
      */
     androidHardwareAccelerationDisabled?: boolean;
     /**
+   * Boolean value to always forbid access to the microphone in the `WebView`, even if the app
+   * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+   * @platform android
+   */
+    androidMicrophoneAccessDisabled?: boolean;
+
+  /**
+   * Boolean value to always forbid access to the camera in the `WebView`, even if the app
+   * was granted the necessary Android permission. The default value is `false` for backward-compatibility.
+   * @platform android
+   */
+    /**
    * https://developer.android.com/reference/android/webkit/WebView#setLayerType(int,%20android.graphics.Paint)
    * Sets the layerType. Possible values are:
    *
@@ -828,6 +840,7 @@ export interface AndroidWebViewProps extends WebViewSharedProps {
     nestedScrollEnabled?: boolean;
 }
 export interface WebViewSharedProps extends ViewProps {
+    androidCameraAccessDisabled?: boolean;
     /**
      * Loads static html or a uri (with optional headers) in the WebView.
      */
