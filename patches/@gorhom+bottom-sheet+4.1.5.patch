diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/constants.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/constants.d.ts
index 1dc61cc..7c1b4e3 100644
--- a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/constants.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/constants.d.ts
@@ -18,4 +18,9 @@ declare const INITIAL_CONTAINER_OFFSET: {
 };
 declare const INITIAL_HANDLE_HEIGHT = -999;
 declare const INITIAL_POSITION: number;
-export { DEFAULT_HANDLE_HEIGHT, DEFAULT_OVER_DRAG_RESISTANCE_FACTOR, DEFAULT_ENABLE_CONTENT_PANNING_GESTURE, DEFAULT_ENABLE_HANDLE_PANNING_GESTURE, DEFAULT_ENABLE_OVER_DRAG, DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE, DEFAULT_ANIMATE_ON_MOUNT, DEFAULT_KEYBOARD_BEHAVIOR, DEFAULT_KEYBOARD_BLUR_BEHAVIOR, DEFAULT_KEYBOARD_INPUT_MODE, INITIAL_POSITION, INITIAL_CONTAINER_HEIGHT, INITIAL_CONTAINER_OFFSET, INITIAL_HANDLE_HEIGHT, INITIAL_SNAP_POINT, };
+declare const DEFAULT_ACCESSIBLE = true;
+declare const DEFAULT_ACCESSIBILITY_LABEL = "Bottom Sheet";
+declare const DEFAULT_ACCESSIBILITY_ROLE = "adjustable";
+declare const DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT = true;
+declare const DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT: (positionInScreen: string) => string;
+export { DEFAULT_HANDLE_HEIGHT, DEFAULT_OVER_DRAG_RESISTANCE_FACTOR, DEFAULT_ENABLE_CONTENT_PANNING_GESTURE, DEFAULT_ENABLE_HANDLE_PANNING_GESTURE, DEFAULT_ENABLE_OVER_DRAG, DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE, DEFAULT_ANIMATE_ON_MOUNT, DEFAULT_KEYBOARD_BEHAVIOR, DEFAULT_KEYBOARD_BLUR_BEHAVIOR, DEFAULT_KEYBOARD_INPUT_MODE, INITIAL_POSITION, INITIAL_CONTAINER_HEIGHT, INITIAL_CONTAINER_OFFSET, INITIAL_HANDLE_HEIGHT, INITIAL_SNAP_POINT, DEFAULT_ACCESSIBLE, DEFAULT_ACCESSIBILITY_LABEL, DEFAULT_ACCESSIBILITY_ROLE, DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT, DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT, };
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/types.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/types.d.ts
index 2fe2f4b..d995309 100644
--- a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/types.d.ts
@@ -12,7 +12,10 @@ import type {
   KEYBOARD_BLUR_BEHAVIOR,
   KEYBOARD_INPUT_MODE,
 } from '../../constants';
-import type { GestureEventsHandlersHookType } from '../../types';
+import type {
+  GestureEventsHandlersHookType,
+  NullableAccessibilityProps,
+} from '../../types';
 
 export interface BottomSheetProps
   extends BottomSheetAnimationConfigs,
@@ -26,7 +29,8 @@ export interface BottomSheetProps
         | 'waitFor'
         | 'simultaneousHandlers'
       >
-    > {
+    >,
+    Omit<NullableAccessibilityProps, 'accessibilityHint'> {
   //#region configuration
   /**
    * Initial snap point index, provide `-1` to initiate bottom sheet in closed state.
@@ -286,6 +290,26 @@ export interface BottomSheetProps
    */
   $modal?: boolean;
   //#endregion
+
+  // accessibility
+  /**
+   * Enables announcement of the snap position change on screen readers.
+   * @type boolean
+   * @default true
+   */
+  enableAccessibilityChangeAnnouncement?: boolean;
+  /**
+   * Callback on snap position change that announces the returned string on screen readers.
+   * @type string | ((positionInScreen: string) => string)
+   */
+  accessibilityPositionChangeAnnouncement?:
+    | string
+    | ((positionInScreen: string) => string);
+  /**
+   * Enables the possibility to define custom accessibility props on the handle container component.
+   * @type NullableAccessibilityProps
+   */
+  handleComponentAccessibility?: NullableAccessibilityProps;
 }
 
 export interface BottomSheetAnimationConfigs {
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackdrop/constants.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackdrop/constants.d.ts
index 607e4f1..3ad4427 100644
--- a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackdrop/constants.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackdrop/constants.d.ts
@@ -3,4 +3,8 @@ declare const DEFAULT_APPEARS_ON_INDEX = 1;
 declare const DEFAULT_DISAPPEARS_ON_INDEX = 0;
 declare const DEFAULT_ENABLE_TOUCH_THROUGH = false;
 declare const DEFAULT_PRESS_BEHAVIOR: "close";
-export { DEFAULT_OPACITY, DEFAULT_APPEARS_ON_INDEX, DEFAULT_DISAPPEARS_ON_INDEX, DEFAULT_ENABLE_TOUCH_THROUGH, DEFAULT_PRESS_BEHAVIOR, };
+declare const DEFAULT_ACCESSIBLE = true;
+declare const DEFAULT_ACCESSIBILITY_LABEL = "Bottom Sheet backdrop";
+declare const DEFAULT_ACCESSIBILITY_ROLE = "button";
+declare const DEFAULT_ACCESSIBILITY_HINT: (pressBehavior: string) => string;
+export { DEFAULT_OPACITY, DEFAULT_APPEARS_ON_INDEX, DEFAULT_DISAPPEARS_ON_INDEX, DEFAULT_ENABLE_TOUCH_THROUGH, DEFAULT_PRESS_BEHAVIOR, DEFAULT_ACCESSIBLE, DEFAULT_ACCESSIBILITY_ROLE, DEFAULT_ACCESSIBILITY_LABEL, DEFAULT_ACCESSIBILITY_HINT, };
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/constants.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/constants.d.ts
new file mode 100644
index 0000000..9a2a9bf
--- /dev/null
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/constants.d.ts
@@ -0,0 +1,4 @@
+declare const DEFAULT_ACCESSIBLE = true;
+declare const DEFAULT_ACCESSIBILITY_LABEL = "Bottom Sheet";
+declare const DEFAULT_ACCESSIBILITY_ROLE = "adjustable";
+export { DEFAULT_ACCESSIBLE, DEFAULT_ACCESSIBILITY_LABEL, DEFAULT_ACCESSIBILITY_ROLE, };
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/types.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/types.d.ts
index 37d2e20..2ca28c6 100644
--- a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetBackground/types.d.ts
@@ -1,6 +1,10 @@
-import type { ViewProps } from 'react-native';
-import type { BottomSheetVariables } from '../../types';
+import type { Omit, ViewProps } from 'react-native';
+import type {
+  BottomSheetVariables,
+  NullableAccessibilityProps,
+} from '../../types';
 
 export interface BottomSheetBackgroundProps
   extends Pick<ViewProps, 'pointerEvents' | 'style'>,
-    BottomSheetVariables {}
+    BottomSheetVariables,
+    Omit<NullableAccessibilityProps, 'accessibilityHint'> {}
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/constants.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/constants.d.ts
new file mode 100644
index 0000000..9ceccfe
--- /dev/null
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/constants.d.ts
@@ -0,0 +1,5 @@
+declare const DEFAULT_ACCESSIBLE = true;
+declare const DEFAULT_ACCESSIBILITY_LABEL = "Bottom Sheet handle";
+declare const DEFAULT_ACCESSIBILITY_ROLE = "adjustable";
+declare const DEFAULT_ACCESSIBILITY_HINT = "Drag up or down to extend or minimize the Bottom Sheet";
+export { DEFAULT_ACCESSIBLE, DEFAULT_ACCESSIBILITY_LABEL, DEFAULT_ACCESSIBILITY_ROLE, DEFAULT_ACCESSIBILITY_HINT, };
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/types.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/types.d.ts
index c3c2ae9..2d7d172 100644
--- a/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/components/bottomSheetHandleContainer/types.d.ts
@@ -3,6 +3,7 @@ import type Animated from 'react-native-reanimated';
 import type { BottomSheetProps } from '../bottomSheet';
 import type { BottomSheetHandleProps } from '../bottomSheetHandle';
 import type { useInteractivePanGestureHandlerConfigs } from '../../hooks/useGestureHandler';
+import { NullableAccessibilityProps } from '../../types';
 
 export interface BottomSheetHandleContainerProps
   extends Pick<PanGestureHandlerProperties, 'simultaneousHandlers'>,
@@ -20,6 +21,7 @@ export interface BottomSheetHandleContainerProps
       | 'overDragResistanceFactor'
       | 'keyboardBehavior'
     >,
-    BottomSheetHandleProps {
+    BottomSheetHandleProps,
+    NullableAccessibilityProps {
   handleHeight: Animated.SharedValue<number>;
 }
diff --git a/node_modules/@gorhom/bottom-sheet/lib/typescript/types.d.ts b/node_modules/@gorhom/bottom-sheet/lib/typescript/types.d.ts
index 52fe472..6bccb4a 100644
--- a/node_modules/@gorhom/bottom-sheet/lib/typescript/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/lib/typescript/types.d.ts
@@ -4,6 +4,7 @@ import type {
   ScrollView,
   SectionList,
   NativeScrollEvent,
+  AccessibilityProps,
 } from 'react-native';
 import type {
   GestureEventPayload,
@@ -164,3 +165,10 @@ export type ScrollEventsHandlersHookType = (
   handleOnMomentumEnd?: ScrollEventHandlerCallbackType;
 };
 //#endregion
+
+export interface NullableAccessibilityProps extends AccessibilityProps {
+  accessible?: AccessibilityProps['accessible'] | null;
+  accessibilityLabel?: AccessibilityProps['accessibilityLabel'] | null;
+  accessibilityHint?: AccessibilityProps['accessibilityHint'] | null;
+  accessibilityRole?: AccessibilityProps['accessibilityRole'] | null;
+}
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx
index 0f5ac23..d372e07 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/BottomSheet.tsx
@@ -6,7 +6,7 @@ import React, {
   memo,
   useEffect,
 } from 'react';
-import { Platform } from 'react-native';
+import { AccessibilityInfo, Platform } from 'react-native';
 import invariant from 'invariant';
 import Animated, {
   useAnimatedReaction,
@@ -49,6 +49,7 @@ import {
   KEYBOARD_BLUR_BEHAVIOR,
   KEYBOARD_INPUT_MODE,
   ANIMATION_SOURCE,
+  WINDOW_HEIGHT,
 } from '../../constants';
 import {
   animate,
@@ -71,10 +72,16 @@ import {
   INITIAL_SNAP_POINT,
   DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,
   INITIAL_CONTAINER_OFFSET,
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,
+  DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,
 } from './constants';
 import type { BottomSheetMethods, Insets } from '../../types';
 import type { BottomSheetProps, AnimateToPositionType } from './types';
 import { styles } from './styles';
+import ReText from '../bottomSheetDebugView/ReText';
 
 Animated.addWhitelistedUIProps({
   decelerationRate: true,
@@ -152,6 +159,19 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
       backgroundComponent,
       footerComponent,
       children,
+
+      // accessibility
+      accessible: _providedAccessible = DEFAULT_ACCESSIBLE,
+      accessibilityLabel:
+        _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,
+      accessibilityRole:
+        _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,
+      enableAccessibilityChangeAnnouncement:
+        _providedEnableAccessibilityChangeAnnouncement = DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,
+      accessibilityPositionChangeAnnouncement:
+        _providedAccessibilityPositionChangeAnnouncement = DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,
+      handleComponentAccessibility: _providedHandleComponentAccessibility,
+      ...rest
     } = props;
     //#endregion
 
@@ -587,8 +607,42 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
         if (_providedOnChange) {
           _providedOnChange(index);
         }
+
+        AccessibilityInfo.isScreenReaderEnabled().then(isEnabled => {
+          if (
+            !isEnabled ||
+            !_providedEnableAccessibilityChangeAnnouncement ||
+            !_providedAccessibilityPositionChangeAnnouncement
+          ) {
+            return;
+          }
+
+          const positionInScreen = Math.max(
+            Math.floor(
+              ((WINDOW_HEIGHT - animatedSnapPoints.value[index] || 1) /
+                WINDOW_HEIGHT) *
+                100
+            ),
+            0
+          ).toFixed(0);
+
+          AccessibilityInfo.announceForAccessibility(
+            typeof _providedAccessibilityPositionChangeAnnouncement ===
+              'function'
+              ? _providedAccessibilityPositionChangeAnnouncement(
+                  positionInScreen
+                )
+              : _providedAccessibilityPositionChangeAnnouncement
+          );
+        });
       },
-      [_providedOnChange, animatedCurrentIndex]
+      [
+        _providedAccessibilityPositionChangeAnnouncement,
+        _providedEnableAccessibilityChangeAnnouncement,
+        _providedOnChange,
+        animatedCurrentIndex.value,
+        animatedSnapPoints.value,
+      ]
     );
     const handleOnAnimate = useCallback(
       function handleOnAnimate(toPoint: number) {
@@ -1578,6 +1632,10 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
                 />
                 <Animated.View
                   pointerEvents="box-none"
+                  accessible={_providedAccessible ?? undefined}
+                  accessibilityRole={_providedAccessibilityRole ?? undefined}
+                  accessibilityLabel={_providedAccessibilityLabel ?? undefined}
+                  {...rest}
                   style={contentMaskContainerStyle}
                 >
                   <BottomSheetDraggableView
@@ -1608,8 +1666,16 @@ const BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(
                   handleComponent={handleComponent}
                   handleStyle={_providedHandleStyle}
                   handleIndicatorStyle={_providedHandleIndicatorStyle}
+                  accessible={_providedHandleComponentAccessibility?.accessible}
+                  accessibilityRole={
+                    _providedHandleComponentAccessibility?.accessibilityRole
+                  }
+                  accessibilityLabel={
+                    _providedHandleComponentAccessibility?.accessibilityLabel
+                  }
                 />
               </Animated.View>
+              <ReText style={{ position: 'absolute', opacity: 0, marginLeft: -10000, display: "none" }} text={""} value={animatedSheetState} />
               {/* <BottomSheetDebugView
                 values={{
                   // topInset,
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/constants.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/constants.ts
index a30aaae..0785f19 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/constants.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/constants.ts
@@ -31,6 +31,15 @@ const INITIAL_CONTAINER_OFFSET = {
 const INITIAL_HANDLE_HEIGHT = -999;
 const INITIAL_POSITION = SCREEN_HEIGHT;
 
+// accessibility
+const DEFAULT_ACCESSIBLE = true;
+const DEFAULT_ACCESSIBILITY_LABEL = 'Bottom Sheet';
+const DEFAULT_ACCESSIBILITY_ROLE = 'adjustable';
+const DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT = true;
+const DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT = (
+  positionInScreen: string
+) => `Bottom sheet snapped to ${positionInScreen}% of the screen`;
+
 export {
   DEFAULT_HANDLE_HEIGHT,
   DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,
@@ -49,4 +58,10 @@ export {
   INITIAL_CONTAINER_OFFSET,
   INITIAL_HANDLE_HEIGHT,
   INITIAL_SNAP_POINT,
+  // accessibility
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,
+  DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,
 };
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/types.d.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/types.d.ts
index 2fe2f4b..d995309 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheet/types.d.ts
@@ -12,7 +12,10 @@ import type {
   KEYBOARD_BLUR_BEHAVIOR,
   KEYBOARD_INPUT_MODE,
 } from '../../constants';
-import type { GestureEventsHandlersHookType } from '../../types';
+import type {
+  GestureEventsHandlersHookType,
+  NullableAccessibilityProps,
+} from '../../types';
 
 export interface BottomSheetProps
   extends BottomSheetAnimationConfigs,
@@ -26,7 +29,8 @@ export interface BottomSheetProps
         | 'waitFor'
         | 'simultaneousHandlers'
       >
-    > {
+    >,
+    Omit<NullableAccessibilityProps, 'accessibilityHint'> {
   //#region configuration
   /**
    * Initial snap point index, provide `-1` to initiate bottom sheet in closed state.
@@ -286,6 +290,26 @@ export interface BottomSheetProps
    */
   $modal?: boolean;
   //#endregion
+
+  // accessibility
+  /**
+   * Enables announcement of the snap position change on screen readers.
+   * @type boolean
+   * @default true
+   */
+  enableAccessibilityChangeAnnouncement?: boolean;
+  /**
+   * Callback on snap position change that announces the returned string on screen readers.
+   * @type string | ((positionInScreen: string) => string)
+   */
+  accessibilityPositionChangeAnnouncement?:
+    | string
+    | ((positionInScreen: string) => string);
+  /**
+   * Enables the possibility to define custom accessibility props on the handle container component.
+   * @type NullableAccessibilityProps
+   */
+  handleComponentAccessibility?: NullableAccessibilityProps;
 }
 
 export interface BottomSheetAnimationConfigs {
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/BottomSheetBackdrop.tsx b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/BottomSheetBackdrop.tsx
index 69db946..38eb5ed 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/BottomSheetBackdrop.tsx
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/BottomSheetBackdrop.tsx
@@ -18,6 +18,10 @@ import {
   DEFAULT_DISAPPEARS_ON_INDEX,
   DEFAULT_ENABLE_TOUCH_THROUGH,
   DEFAULT_PRESS_BEHAVIOR,
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_HINT,
 } from './constants';
 import { styles } from './styles';
 import type { BottomSheetDefaultBackdropProps } from './types';
@@ -31,6 +35,10 @@ const BottomSheetBackdropComponent = ({
   pressBehavior = DEFAULT_PRESS_BEHAVIOR,
   style,
   children,
+  accessible: _providedAccessible = DEFAULT_ACCESSIBLE,
+  accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,
+  accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,
+  accessibilityHint: _providedAccessibilityHint,
 }: BottomSheetDefaultBackdropProps) => {
   //#region hooks
   const { snapToIndex, close } = useBottomSheet();
@@ -111,12 +119,15 @@ const BottomSheetBackdropComponent = ({
       <Animated.View
         ref={containerRef}
         style={containerStyle}
-        accessible={true}
-        accessibilityRole="button"
-        accessibilityLabel="Bottom Sheet backdrop"
-        accessibilityHint={`Tap to ${
-          typeof pressBehavior === 'string' ? pressBehavior : 'move'
-        } the Bottom Sheet`}
+        accessible={_providedAccessible ?? undefined}
+        accessibilityRole={_providedAccessibilityRole ?? undefined}
+        accessibilityLabel={_providedAccessibilityLabel ?? undefined}
+        accessibilityHint={
+          _providedAccessibilityHint ??
+          DEFAULT_ACCESSIBILITY_HINT(
+            typeof pressBehavior === 'string' ? pressBehavior : 'move'
+          )
+        }
       >
         {children}
       </Animated.View>
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/constants.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/constants.ts
index c2388db..5a13138 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/constants.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/constants.ts
@@ -4,10 +4,21 @@ const DEFAULT_DISAPPEARS_ON_INDEX = 0;
 const DEFAULT_ENABLE_TOUCH_THROUGH = false;
 const DEFAULT_PRESS_BEHAVIOR = 'close' as const;
 
+// accessibility
+const DEFAULT_ACCESSIBLE = true;
+const DEFAULT_ACCESSIBILITY_LABEL = 'Bottom Sheet backdrop';
+const DEFAULT_ACCESSIBILITY_ROLE = 'button';
+const DEFAULT_ACCESSIBILITY_HINT = (pressBehavior: string) =>
+  `Tap to ${pressBehavior} the Bottom Sheet`;
+
 export {
   DEFAULT_OPACITY,
   DEFAULT_APPEARS_ON_INDEX,
   DEFAULT_DISAPPEARS_ON_INDEX,
   DEFAULT_ENABLE_TOUCH_THROUGH,
   DEFAULT_PRESS_BEHAVIOR,
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_HINT,
 };
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/types.d.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/types.d.ts
index 0ebbbf4..b03eda4 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackdrop/types.d.ts
@@ -1,9 +1,13 @@
 import type { ViewProps } from 'react-native';
-import type { BottomSheetVariables } from '../../types';
+import type {
+  BottomSheetVariables,
+  NullableAccessibilityProps,
+} from '../../types';
 
 export interface BottomSheetBackdropProps
   extends Pick<ViewProps, 'style'>,
-    BottomSheetVariables {}
+    BottomSheetVariables,
+    NullableAccessibilityProps {}
 
 export type BackdropPressBehavior = 'none' | 'close' | 'collapse' | number;
 
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/BottomSheetBackground.tsx b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/BottomSheetBackground.tsx
index 71ce0c3..3a48a28 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/BottomSheetBackground.tsx
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/BottomSheetBackground.tsx
@@ -2,16 +2,24 @@ import React, { memo } from 'react';
 import { View } from 'react-native';
 import type { BottomSheetBackgroundProps } from './types';
 import { styles } from './styles';
+import {
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+} from './constants';
 
 const BottomSheetBackgroundComponent = ({
   pointerEvents,
   style,
+  accessible: _providedAccessible = DEFAULT_ACCESSIBLE,
+  accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,
+  accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,
 }: BottomSheetBackgroundProps) => (
   <View
     pointerEvents={pointerEvents}
-    accessible={true}
-    accessibilityRole="adjustable"
-    accessibilityLabel="Bottom Sheet"
+    accessible={_providedAccessible ?? undefined}
+    accessibilityRole={_providedAccessibilityRole ?? undefined}
+    accessibilityLabel={_providedAccessibilityLabel ?? undefined}
     style={[styles.container, style]}
   />
 );
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/constants.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/constants.ts
new file mode 100644
index 0000000..8118faf
--- /dev/null
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/constants.ts
@@ -0,0 +1,11 @@
+// accessibility
+const DEFAULT_ACCESSIBLE = true;
+const DEFAULT_ACCESSIBILITY_LABEL = 'Bottom Sheet';
+const DEFAULT_ACCESSIBILITY_ROLE = 'adjustable';
+
+export {
+  // accessibility
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_ROLE,
+};
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/types.d.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/types.d.ts
index 37d2e20..2ca28c6 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetBackground/types.d.ts
@@ -1,6 +1,10 @@
-import type { ViewProps } from 'react-native';
-import type { BottomSheetVariables } from '../../types';
+import type { Omit, ViewProps } from 'react-native';
+import type {
+  BottomSheetVariables,
+  NullableAccessibilityProps,
+} from '../../types';
 
 export interface BottomSheetBackgroundProps
   extends Pick<ViewProps, 'pointerEvents' | 'style'>,
-    BottomSheetVariables {}
+    BottomSheetVariables,
+    Omit<NullableAccessibilityProps, 'accessibilityHint'> {}
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/BottomSheetHandleContainer.tsx b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/BottomSheetHandleContainer.tsx
index 9e48c17..e48b15f 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/BottomSheetHandleContainer.tsx
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/BottomSheetHandleContainer.tsx
@@ -9,6 +9,12 @@ import {
 } from '../../hooks';
 import { print } from '../../utilities';
 import type { BottomSheetHandleContainerProps } from './types';
+import {
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_HINT,
+} from './constants';
 
 function BottomSheetHandleContainerComponent({
   animatedIndex,
@@ -19,6 +25,10 @@ function BottomSheetHandleContainerComponent({
   handleComponent: _providedHandleComponent,
   handleStyle: _providedHandleStyle,
   handleIndicatorStyle: _providedIndicatorStyle,
+  accessible: _providedAccessible = DEFAULT_ACCESSIBLE,
+  accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,
+  accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,
+  accessibilityHint: _providedAccessibilityHint = DEFAULT_ACCESSIBILITY_HINT,
 }: BottomSheetHandleContainerProps) {
   //#region hooks
   const {
@@ -95,10 +105,10 @@ function BottomSheetHandleContainerComponent({
     >
       <Animated.View
         key="BottomSheetHandleContainer"
-        accessible={true}
-        accessibilityRole="adjustable"
-        accessibilityLabel="Bottom Sheet handle"
-        accessibilityHint="Drag up or down to extend or minimize the Bottom Sheet"
+        accessible={_providedAccessible ?? undefined}
+        accessibilityRole={_providedAccessibilityRole ?? undefined}
+        accessibilityLabel={_providedAccessibilityLabel ?? undefined}
+        accessibilityHint={_providedAccessibilityHint ?? undefined}
         onLayout={handleContainerLayout}
       >
         <HandleComponent
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/constants.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/constants.ts
new file mode 100644
index 0000000..47fa970
--- /dev/null
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/constants.ts
@@ -0,0 +1,14 @@
+// accessibility
+const DEFAULT_ACCESSIBLE = true;
+const DEFAULT_ACCESSIBILITY_LABEL = 'Bottom Sheet handle';
+const DEFAULT_ACCESSIBILITY_ROLE = 'adjustable';
+const DEFAULT_ACCESSIBILITY_HINT =
+  'Drag up or down to extend or minimize the Bottom Sheet';
+
+export {
+  // accessibility
+  DEFAULT_ACCESSIBLE,
+  DEFAULT_ACCESSIBILITY_LABEL,
+  DEFAULT_ACCESSIBILITY_ROLE,
+  DEFAULT_ACCESSIBILITY_HINT,
+};
diff --git a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/types.d.ts b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/types.d.ts
index c3c2ae9..2d7d172 100644
--- a/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/components/bottomSheetHandleContainer/types.d.ts
@@ -3,6 +3,7 @@ import type Animated from 'react-native-reanimated';
 import type { BottomSheetProps } from '../bottomSheet';
 import type { BottomSheetHandleProps } from '../bottomSheetHandle';
 import type { useInteractivePanGestureHandlerConfigs } from '../../hooks/useGestureHandler';
+import { NullableAccessibilityProps } from '../../types';
 
 export interface BottomSheetHandleContainerProps
   extends Pick<PanGestureHandlerProperties, 'simultaneousHandlers'>,
@@ -20,6 +21,7 @@ export interface BottomSheetHandleContainerProps
       | 'overDragResistanceFactor'
       | 'keyboardBehavior'
     >,
-    BottomSheetHandleProps {
+    BottomSheetHandleProps,
+    NullableAccessibilityProps {
   handleHeight: Animated.SharedValue<number>;
 }
diff --git a/node_modules/@gorhom/bottom-sheet/src/types.d.ts b/node_modules/@gorhom/bottom-sheet/src/types.d.ts
index 52fe472..6a23178 100644
--- a/node_modules/@gorhom/bottom-sheet/src/types.d.ts
+++ b/node_modules/@gorhom/bottom-sheet/src/types.d.ts
@@ -164,3 +164,10 @@ export type ScrollEventsHandlersHookType = (
   handleOnMomentumEnd?: ScrollEventHandlerCallbackType;
 };
 //#endregion
+
+export interface NullableAccessibilityProps extends AccessibilityProps {
+  accessible?: AccessibilityProps['accessible'] | null;
+  accessibilityLabel?: AccessibilityProps['accessibilityLabel'] | null;
+  accessibilityHint?: AccessibilityProps['accessibilityHint'] | null;
+  accessibilityRole?: AccessibilityProps['accessibilityRole'] | null;
+}
