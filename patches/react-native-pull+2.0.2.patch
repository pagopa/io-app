diff --git a/node_modules/react-native-pull/PullSectionList.js b/node_modules/react-native-pull/PullSectionList.js
new file mode 100644
index 0000000..f72e93a
--- /dev/null
+++ b/node_modules/react-native-pull/PullSectionList.js
@@ -0,0 +1,56 @@
+﻿'use strict';
+
+import React, { Component } from 'react';
+import { SectionList } from 'react-native';
+
+import Pullable from './Pullable';
+
+/**
+支持android&ios可以下拉刷新的PullList组件
+Demo:
+import {PullList} from 'react-native-pullview';
+
+<PullList onPulling={} onPullOk={} onPullRelease={} isPullEnd={true}
+topIndicatorRender={({pulling, pullok, pullrelease}) => {}} topIndicatorHeight={60}
+{...ListView.props}
+>
+
+Demo2:
+    topIndicatorRender(pulling, pullok, pullrelease) {
+        return <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', height: 60}}>
+            <ActivityIndicator size="small" color="gray" />
+            {pulling ? <Text>下拉刷新2...</Text> : null}
+            {pullok ? <Text>松开刷新2......</Text> : null}
+            {pullrelease ? <Text>玩命刷新中2......</Text> : null}
+        </View>;
+    }
+    <PullList onPullRelease={this.props.onRefresh} topIndicatorRender={this.topIndicatorRender} topIndicatorHeight={60} {...ListView.props} />
+*/
+
+export default class extends Pullable {
+
+    constructor(props) {
+        super(props);
+        this.getMetrics = this.getMetrics.bind(this);
+        this.scrollToLocation = this.scrollToLocation.bind(this);
+        this.scrollToEnd = this.scrollToEnd.bind(this);
+    }
+
+    getMetrics(args) {
+        this.scroll.getMetrics(args);
+    }
+
+    scrollToLocation(...args) {
+        this.scroll.scrollToLocation(...args);
+    }
+
+    scrollToEnd(args) {
+        this.scroll.scrollToEnd(args);
+    }
+
+    getScrollable() {
+        return (
+            <SectionList ref={(c) => {this.scroll = c;}} scrollEnabled={this.state.scrollEnabled} onScroll={this.onScroll} {...this.props} />
+        );
+    }
+}
diff --git a/node_modules/react-native-pull/PullView.js b/node_modules/react-native-pull/PullView.js
index 54404ff..4ff55b4 100644
--- a/node_modules/react-native-pull/PullView.js
+++ b/node_modules/react-native-pull/PullView.js
@@ -65,7 +65,7 @@ export default class extends Pullable {
 
     getScrollable(refreshControl) {
         return (
-            <ScrollView ref={(c) => {this.scroll = c;}} refreshControl={refreshControl} scrollEnabled={this.state.scrollEnabled} onScroll={this.onScroll}>
+            <ScrollView ref={(c) => {this.scroll = c;}} refreshControl={refreshControl} scrollEnabled={this.state.scrollEnabled} onScroll={this.onScroll} {...this.props}>
                 {this.props.children}
             </ScrollView>
         );
diff --git a/node_modules/react-native-pull/Pullable.js b/node_modules/react-native-pull/Pullable.js
index 1c647a7..a08e803 100644
--- a/node_modules/react-native-pull/Pullable.js
+++ b/node_modules/react-native-pull/Pullable.js
@@ -3,16 +3,11 @@
 import React, { Component } from 'react';
 import {
     View,
-    Text,
-    RefreshControl,
     PanResponder,
     Animated,
-    Easing,
-    Dimensions,
-    ActivityIndicator
+    Easing
 } from 'react-native';
 
-import i18n from './i18n';
 import styles from './style/index.js';
 
 // const padding = 2; //scrollview与外面容器的距离
@@ -91,7 +86,19 @@ export default class extends Component {
             } else if(this.props.onPushing && this.props.onPushing(this.gesturePosition)) {
                 // do nothing, handling by this.props.onPushing
             } else {
-                this.scroll.scrollTo({x:0, y: gesture.dy * -1});
+                if (this.props.sections) {
+                    //ending animation to close button
+                    if (!this.flagAnimationButton && this.props.sectionsLength > 0) {
+                        this.scroll.scrollToLocation({
+                            animated: true,
+                            sectionIndex: 0,
+                            itemIndex: 0,
+                            viewOffset: gesture.dy
+                        });
+                    }
+                } else {
+                    this.scroll.scrollTo({x:0, y: gesture.dy * -1});
+                }
             }
             return;
         } else if (isDownGesture(gesture.dx, gesture.dy)) { //下拉
@@ -118,8 +125,6 @@ export default class extends Component {
             if (!this.flag.pullrelease) {
                 if (this.props.onPullRelease) {
                      this.props.onPullRelease(this.resolveHandler);
-                } else {
-                    setTimeout(() => {this.resetDefaultXYHandler()}, 3000);
                 }
             }
             this.setFlag(flagPullrelease); //完成下拉，已松开
@@ -173,7 +178,11 @@ export default class extends Component {
 
     resetDefaultXYHandler() {
         this.flag = defaultFlag;
-        this.state.pullPan.setValue(this.defaultXY);
+        Animated.timing(this.state.pullPan, {
+            toValue: this.defaultXY,
+            easing: Easing.linear,
+            duration: this.duration
+        }).start();
     }
 
     componentWillUpdate(nextProps, nextState) {
@@ -206,7 +215,7 @@ export default class extends Component {
 
     renderTopIndicator() {
         let { pulling, pullok, pullrelease } = this.flag;
-        if (this.props.topIndicatorRender == null) {
+        if (this.props.topIndicatorRender == null || this.props.sectionsLength === 0) {
             return this.defaultTopIndicatorRender(pulling, pullok, pullrelease, this.gesturePosition);
         } else {
             return this.props.topIndicatorRender(pulling, pullok, pullrelease, this.gesturePosition);
@@ -218,28 +227,15 @@ export default class extends Component {
     make changes directly to a component without using state/props to trigger a re-render of the entire subtree
     */
     defaultTopIndicatorRender(pulling, pullok, pullrelease, gesturePosition) {
-        setTimeout(() => {
-            if (pulling) {
-                this.txtPulling && this.txtPulling.setNativeProps({style: styles.show});
-                this.txtPullok && this.txtPullok.setNativeProps({style: styles.hide});
-                this.txtPullrelease && this.txtPullrelease.setNativeProps({style: styles.hide});
-            } else if (pullok) {
-                this.txtPulling && this.txtPulling.setNativeProps({style: styles.hide});
-                this.txtPullok && this.txtPullok.setNativeProps({style: styles.show});
-                this.txtPullrelease && this.txtPullrelease.setNativeProps({style: styles.hide});
-            } else if (pullrelease) {
-                this.txtPulling && this.txtPulling.setNativeProps({style: styles.hide});
-                this.txtPullok && this.txtPullok.setNativeProps({style: styles.hide});
-                this.txtPullrelease && this.txtPullrelease.setNativeProps({style: styles.show});
-            }
-        }, 1);
         return (
-            <View style={{flexDirection: 'row', justifyContent: 'center', alignItems: 'center', height: defaultTopIndicatorHeight}}>
-                <ActivityIndicator size="small" color="gray" />
-                <Text ref={(c) => {this.txtPulling = c;}} style={styles.hide}>{i18n.pulling}</Text>
-                <Text ref={(c) => {this.txtPullok = c;}} style={styles.hide}>{i18n.pullok}</Text>
-                <Text ref={(c) => {this.txtPullrelease = c;}} style={styles.hide}>{i18n.pullrelease}</Text>
-            </View>
+            <View
+                style={{
+                flexDirection: "row",
+                justifyContent: "center",
+                alignItems: "center",
+                height: this.topIndicatorHeight
+                }}
+            />
         );
     }
 }
diff --git a/node_modules/react-native-pull/index.js b/node_modules/react-native-pull/index.js
index e3c4588..9baf81c 100644
--- a/node_modules/react-native-pull/index.js
+++ b/node_modules/react-native-pull/index.js
@@ -2,8 +2,10 @@
 
 import PullView from './PullView';
 import PullList from './PullList';
+import PullSectionList from './PullSectionList';
 
 export {
     PullView,
-    PullList
+    PullList,
+    PullSectionList
 };
