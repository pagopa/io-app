diff --git a/node_modules/@react-navigation/material-top-tabs/.DS_Store b/node_modules/@react-navigation/material-top-tabs/.DS_Store
new file mode 100644
index 0000000..5172429
Binary files /dev/null and b/node_modules/@react-navigation/material-top-tabs/.DS_Store differ
diff --git a/node_modules/@react-navigation/material-top-tabs/lib/typescript/.DS_Store b/node_modules/@react-navigation/material-top-tabs/lib/typescript/.DS_Store
new file mode 100644
index 0000000..5127bf9
Binary files /dev/null and b/node_modules/@react-navigation/material-top-tabs/lib/typescript/.DS_Store differ
diff --git a/node_modules/@react-navigation/material-top-tabs/lib/typescript/src/types.d.ts b/node_modules/@react-navigation/material-top-tabs/lib/typescript/src/types.d.ts
index 4a4b081..1cf21c0 100644
--- a/node_modules/@react-navigation/material-top-tabs/lib/typescript/src/types.d.ts
+++ b/node_modules/@react-navigation/material-top-tabs/lib/typescript/src/types.d.ts
@@ -76,6 +76,18 @@ export declare type MaterialTopTabNavigationConfig = Partial<Omit<React.Componen
      * The pager handles swipe gestures and page switching.
      */
     pager?: React.ComponentProps<typeof TabView>['renderPager'];
+    /**
+     * Whether this screen should be lazily rendered. When this is set to `true`,
+     * the screen will be rendered as it comes into the viewport.
+     * By default all screens are rendered to provide a smoother swipe experience.
+     * But you might want to defer the rendering of screens out of the viewport until the user sees them.
+     * To enable lazy rendering for this screen, set `lazy` to `true`.
+     *
+     * When you enable `lazy`, the lazy loaded screens will usually take some time to render
+     * when they come into the viewport. You can use the `lazyPlaceholder` prop to customize
+     * what the user sees during this short period.
+     */
+    lazy?: boolean;
     /**
      * Function that returns a React element to render for routes that haven't been rendered yet.
      * Receives an object containing the route as the prop.
diff --git a/node_modules/@react-navigation/material-top-tabs/src/types.tsx b/node_modules/@react-navigation/material-top-tabs/src/types.tsx
index 60270ff..d7ae0e8 100644
--- a/node_modules/@react-navigation/material-top-tabs/src/types.tsx
+++ b/node_modules/@react-navigation/material-top-tabs/src/types.tsx
@@ -121,6 +121,18 @@ export type MaterialTopTabNavigationConfig = Partial<
    * The pager handles swipe gestures and page switching.
    */
   pager?: React.ComponentProps<typeof TabView>['renderPager'];
+  /**
+   * Whether this screen should be lazily rendered. When this is set to `true`,
+   * the screen will be rendered as it comes into the viewport.
+   * By default all screens are rendered to provide a smoother swipe experience.
+   * But you might want to defer the rendering of screens out of the viewport until the user sees them.
+   * To enable lazy rendering for this screen, set `lazy` to `true`.
+   *
+   * When you enable `lazy`, the lazy loaded screens will usually take some time to render
+   * when they come into the viewport. You can use the `lazyPlaceholder` prop to customize
+   * what the user sees during this short period.
+   */
+  lazy?: boolean;  
   /**
    * Function that returns a React element to render for routes that haven't been rendered yet.
    * Receives an object containing the route as the prop.
