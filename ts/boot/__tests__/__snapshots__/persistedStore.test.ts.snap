// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'authentication' state 1`] = `
Object {
  "kind": "LoggedOutWithoutIdp",
  "reason": "NOT_LOGGED_IN",
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'content' state 1`] = `
Object {
  "contextualHelp": Object {
    "kind": "PotNone",
  },
  "idps": Object {
    "kind": "undefined",
  },
  "municipality": Object {
    "codiceCatastale": Object {
      "kind": "PotNone",
    },
    "data": Object {
      "kind": "PotNone",
    },
  },
  "servicesMetadata": Object {
    "byId": Object {},
  },
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'crossSessions' state 1`] = `
Object {
  "hashedFiscalCode": undefined,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'debug' state 1`] = `
Object {
  "isDebugModeEnabled": false,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'entities' state 1`] = `
Object {
  "calendarEvents": Object {
    "byMessageId": Object {},
  },
  "messages": Object {
    "allIds": Object {
      "kind": "PotNone",
    },
    "byId": Object {},
    "idsByServiceId": Object {},
  },
  "messagesStatus": Object {},
  "organizations": Object {
    "all": Array [],
    "nameByFiscalCode": Object {},
  },
  "paymentByRptId": Object {},
  "services": Object {
    "byId": Object {},
    "byOrgFiscalCode": Object {},
    "firstLoading": Object {
      "isFirstServicesLoadingCompleted": false,
    },
    "readState": Object {},
    "servicePreference": Object {
      "kind": "PotNone",
    },
    "visible": Object {
      "kind": "PotNone",
    },
  },
  "transactionsRead": Object {},
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'identification' state 1`] = `
Object {
  "fail": undefined,
  "progress": Object {
    "kind": "unidentified",
  },
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'installation' state 1`] = `
Object {
  "isFirstRunAfterInstall": true,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'notifications' state 1`] = `
Object {
  "installation": Object {
    "id": "fakeInstallationId",
    "token": undefined,
  },
  "pendingMessage": null,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'onboarding' state 1`] = `
Object {
  "isFingerprintAcknowledged": false,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'payments' state 1`] = `
Object {
  "creditCardInsertion": Array [],
  "current": Object {
    "kind": "UNSTARTED",
  },
  "history": Array [],
  "lastDeleted": null,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'persistedPreferences' state 1`] = `
Object {
  "continueWithRootOrJailbreak": false,
  "isCustomEmailChannelEnabled": Object {
    "kind": "PotNone",
  },
  "isExperimentalFeaturesEnabled": false,
  "isFingerprintEnabled": undefined,
  "isMixpanelEnabled": null,
  "isPagoPATestEnabled": false,
  "preferredCalendar": undefined,
  "preferredLanguage": undefined,
  "wasServiceAlertDisplayedOnce": false,
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'profile' state 1`] = `
Object {
  "kind": "PotNone",
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'userMetadata' state 1`] = `
Object {
  "kind": "PotNone",
}
`;

exports[`Check the addition for new fields to the persisted store. If one of this test fails, check that exists the migration before updating the snapshot! Freeze 'wallet.wallets.walletById' state 1`] = `
Object {
  "kind": "PotNone",
}
`;
