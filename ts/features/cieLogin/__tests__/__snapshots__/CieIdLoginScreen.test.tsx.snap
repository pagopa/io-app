// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CieIdLoginScreen Should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "off",
      "right": "off",
      "top": "off",
    }
  }
  style={
    {
      "flex": 1,
      "justifyContent": "center",
      "marginHorizontal": 16,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      allowsPictureInPictureMediaPlayback={true}
      cacheEnabled={true}
      fraudulentWebsiteWarningEnabled={true}
      hasOnFileDownload={false}
      hasOnOpenWindowEvent={false}
      injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
      injectedJavaScriptForMainFrameOnly={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      messagingModuleName=""
      newSource={
        {
          "uri": "undefined/login?entityID=xx_servizicie&authLevel=undefined",
        }
      }
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        {
          "uri": "undefined/login?entityID=xx_servizicie&authLevel=undefined",
        }
      }
      style={
        [
          {
            "flex": 1,
            "overflow": "hidden",
          },
          {
            "backgroundColor": "#ffffff",
          },
          undefined,
        ]
      }
      testID="cie-id-webview"
      textInteractionEnabled={true}
      useSharedProcessPool={true}
      userAgent="Mozilla/5.0 (iPhone; CPU iPhone OS 14_0_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1"
    />
    <View
      style={
        {
          "height": "100%",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
        testID="overlayComponent"
      >
        <View
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 1,
              },
              {
                "backgroundColor": "rgba(255,255,255,0.7)",
                "opacity": 1,
              },
            ]
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "height": 100,
                "justifyContent": "center",
              }
            }
          >
            <View
              accessibilityHint="Wait for the content load"
              accessibilityLabel="Loading"
              accessibilityRole="progressbar"
              accessible={true}
              importantForAccessibility="no-hide-descendants"
              style={
                {
                  "height": 48,
                  "width": 48,
                }
              }
              testID="refreshIndicator"
            >
              <View
                collapsable={false}
                style={
                  {
                    "transform": [
                      {
                        "rotateZ": "0deg",
                      },
                    ],
                  }
                }
                testID="LoadingSpinnerAnimatedTestID"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={48}
                  bbWidth={48}
                  fill="none"
                  focusable={false}
                  height={48}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "flex": 0,
                        "height": 48,
                        "width": 48,
                      },
                    ]
                  }
                  vbHeight={48}
                  vbWidth={48}
                  width={48}
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGDefs>
                      <RNSVGLinearGradient
                        gradient={
                          [
                            0,
                            736995,
                            1,
                            -16040221,
                          ]
                        }
                        gradientTransform={null}
                        gradientUnits={0}
                        name="spinner-secondHalf"
                        x1="0%"
                        x2="100%"
                        y1="0%"
                        y2="0%"
                      />
                      <RNSVGLinearGradient
                        gradient={
                          [
                            0,
                            -16040221,
                            1,
                            -16040221,
                          ]
                        }
                        gradientTransform={null}
                        gradientUnits={0}
                        name="spinner-firstHalf"
                        x1="0%"
                        x2="100%"
                        y1="0%"
                        y2="0%"
                      />
                    </RNSVGDefs>
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                      propList={
                        [
                          "strokeWidth",
                        ]
                      }
                      strokeWidth={5}
                    >
                      <RNSVGPath
                        d="M 2.5 24 A 21.5 21.5 0 0 1 45.5 24"
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "stroke",
                          ]
                        }
                        stroke={
                          {
                            "brushRef": "spinner-secondHalf",
                            "type": 1,
                          }
                        }
                      />
                      <RNSVGPath
                        d="M 45.5 24 A 21.5 21.5 0 0 1 2.5 24"
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "stroke",
                          ]
                        }
                        stroke={
                          {
                            "brushRef": "spinner-firstHalf",
                            "type": 1,
                          }
                        }
                      />
                      <RNSVGPath
                        d="M 2.5 24 A 21.5 21.5 0 0 1 2.5 22.75"
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "stroke",
                            "strokeLinecap",
                          ]
                        }
                        stroke={
                          {
                            "payload": 4278927075,
                            "type": 0,
                          }
                        }
                        strokeLinecap={1}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <View
              style={
                {
                  "padding": 24,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                dynamicTypeRamp="title2"
                maxFontSizeMultiplier={1.25}
                style={
                  [
                    {},
                    {
                      "color": "#2B2E38",
                      "fontFamily": "Titillium Sans Pro",
                      "fontSize": 22,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "lineHeight": 33,
                    },
                    {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Wait a few seconds..
              </Text>
            </View>
            <View
              style={
                {
                  "alignSelf": "center",
                }
              }
            >
              <View
                accessibilityLabel="Cancel"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignSelf": "flex-start",
                  }
                }
                testID="loadingSpinnerOverlayCancelButton"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "borderRadius": 4,
                        "elevation": 0,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingHorizontal": 16,
                        "textAlignVertical": "center",
                      },
                      false,
                      {
                        "borderWidth": 1,
                      },
                      {
                        "height": 40,
                      },
                      false,
                      {
                        "backgroundColor": "rgba(0,115,230,0)",
                        "borderColor": "#0073E6",
                      },
                      false,
                      {
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                    ]
                  }
                >
                  <Text
                    accessibilityElementsHidden={true}
                    accessible={false}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    importantForAccessibility="no-hide-descendants"
                    maxFontSizeMultiplier={1.25}
                    numberOfLines={1}
                    style={
                      [
                        {},
                        {
                          "color": "#0E0F13",
                          "fontFamily": "Titillium Sans Pro",
                          "fontSize": 16,
                          "fontStyle": "normal",
                          "fontWeight": "600",
                          "lineHeight": undefined,
                        },
                        [
                          {
                            "alignSelf": "center",
                          },
                          {
                            "color": undefined,
                          },
                        ],
                      ]
                    }
                  >
                    Cancel
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "flex": 1,
              },
              {
                "zIndex": 0,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
