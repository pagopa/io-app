// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test SignatureFieldItem component should render a SignatureFieldItem component with props correctly 1`] = `
<View
  style={
    Object {
      "borderBottomColor": "#E6E9F2",
      "borderBottomWidth": 1,
      "flexDirection": "column",
      "marginBottom": 16,
      "paddingBottom": 8,
      "paddingTop": 16,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <Text
      allowFontScaling={false}
      color="black"
      defaultColor="black"
      defaultWeight="SemiBold"
      font="TitilliumWeb"
      fontStyle={
        Object {
          "fontSize": 18,
          "lineHeight": 25,
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "marginRight": 22,
          },
          Object {
            "fontSize": 18,
            "lineHeight": 25,
          },
          Object {
            "color": "#0E0F13",
            "fontFamily": "Titillium Web",
            "fontStyle": "normal",
            "fontWeight": "600",
          },
        ]
      }
      testID="SignatureFieldItemTitleTestID"
      weight="SemiBold"
    >
      Clause title 1
    </Text>
    <View
      accessibilityLabel="Field not selected"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={8}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="SignatureFieldItemCheckboxTestID"
    >
      <View
        style={
          Array [
            Object {
              "height": 24,
              "width": 24,
            },
            Object {
              "alignItems": "center",
            },
            Object {
              "justifyContent": "center",
            },
            Object {
              "transform": Array [
                Object {
                  "scale": undefined,
                },
              ],
            },
          ]
        }
      >
        <RNSVGSvgView
          accessibilityElementsHidden={true}
          accessibilityLabel=""
          accessible={false}
          align="xMidYMid"
          animatedProps={
            Object {
              "color": undefined,
            }
          }
          bbHeight={24}
          bbWidth={24}
          color={4278219750}
          focusable={false}
          height={24}
          importantForAccessibility="no-hide-descendants"
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "color": "#0073E6",
              },
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          tintColor={4278219750}
          vbHeight={22}
          vbWidth={22}
          width={24}
        >
          <RNSVGGroup>
            <RNSVGPath
              clipRule={0}
              d="M19.25 0H2.75C1.23122 0 0 1.23122 0 2.75v16.5C0 20.7688 1.23122 22 2.75 22h16.5c1.5188 0 2.75-1.2312 2.75-2.75V2.75C22 1.23122 20.7688 0 19.25 0ZM1.83333 2.75c0-.50626.41041-.91667.91667-.91667h16.5c.5063 0 .9167.41041.9167.91667v16.5c0 .5063-.4104.9167-.9167.9167H2.75c-.50626 0-.91667-.4104-.91667-.9167V2.75Z"
              fill={
                Array [
                  2,
                ]
              }
              fillRule={0}
              propList={
                Array [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
        },
        Object {
          "paddingBottom": 8,
          "paddingTop": 16,
        },
      ]
    }
  >
    <Text
      accessibilityHint="Go to the page that displays the signature field"
      accessibilityLabel="See on document"
      accessibilityRole="link"
      allowFontScaling={false}
      color="blue"
      defaultColor="blue"
      defaultWeight="SemiBold"
      font="TitilliumWeb"
      fontStyle={
        Object {
          "fontSize": 16,
          "lineHeight": 24,
          "textDecorationLine": "underline",
        }
      }
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "underline",
          },
          Object {
            "color": "#0073E6",
            "fontFamily": "Titillium Web",
            "fontStyle": "normal",
            "fontWeight": "600",
          },
        ]
      }
      testID="SignatureFieldItemDetailTestID"
      weight="SemiBold"
    >
      See on document
    </Text>
  </View>
</View>
`;
