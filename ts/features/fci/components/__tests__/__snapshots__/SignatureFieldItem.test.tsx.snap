// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test SignatureFieldItem component should render a SignatureFieldItem component with props correctly 1`] = `
<View
  style={
    {
      "borderBottomColor": "#E8EBF1",
      "borderBottomWidth": 1,
      "marginBottom": 16,
      "paddingBottom": 8,
      "paddingTop": 16,
    }
  }
>
  <View
    accessibilityLabel="Clause title 1"
    accessibilityRole="checkbox"
    accessibilityState={
      {
        "busy": undefined,
        "checked": false,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onTouchEnd={[Function]}
    testID="ListItemCheckbox"
  >
    <View
      needsOffscreenAlphaCompositing={true}
      style={
        [
          {
            "marginHorizontal": -24,
            "paddingHorizontal": 24,
            "paddingVertical": 12,
          },
          {
            "backgroundColor": undefined,
          },
          {
            "opacity": 1,
          },
        ]
      }
    >
      <View
        style={
          {
            "transform": [
              {
                "scale": undefined,
              },
            ],
          }
        }
      >
        <View
          style={
            {
              "alignItems": "flex-start",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "columnGap": 18,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              allowFontScaling={true}
              dynamicTypeRamp="headline"
              maxFontSizeMultiplier={1.5}
              style={
                [
                  {},
                  {
                    "color": "#0E0F13",
                    "fontFamily": "Titillium Sans Pro",
                    "fontSize": 17,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                    "lineHeight": 24,
                  },
                  {
                    "flexShrink": 1,
                  },
                ]
              }
            >
              Clause title 1
            </Text>
          </View>
          <View
            style={
              {
                "width": 8,
              }
            }
          />
          <View
            accessibilityElementsHidden={true}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={false}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "height": 36,
                  "width": 36,
                }
              }
              testID="AnimatedCheckboxInput"
            >
              <View
                style={
                  [
                    {
                      "borderCurve": "continuous",
                      "borderWidth": 2,
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                    },
                    {
                      "borderRadius": 7.5,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "borderColor": "#555C70",
                    },
                  ]
                }
              />
              <View
                style={
                  [
                    {
                      "borderCurve": "continuous",
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                    },
                    {
                      "borderRadius": 7.5,
                      "height": 36,
                      "width": 36,
                    },
                    {
                      "backgroundColor": "#0073E6",
                    },
                    {
                      "opacity": 0,
                      "transform": [
                        {
                          "scale": undefined,
                        },
                      ],
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "flexDirection": "row",
        },
        {
          "paddingBottom": 8,
          "paddingTop": 16,
        },
      ]
    }
  >
    <Text
      accessibilityHint="Go to the page that displays the signature field"
      accessibilityLabel="See on document"
      accessibilityRole="link"
      allowFontScaling={true}
      dynamicTypeRamp="body"
      maxFontSizeMultiplier={1.5}
      onPress={[MockFunction]}
      style={
        [
          {
            "textDecorationLine": "underline",
          },
          {
            "color": "#0B3EE3",
            "fontFamily": "Titillium Sans Pro",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "600",
            "lineHeight": 24,
          },
        ]
      }
      testID="SignatureFieldItemDetailTestID"
    >
      See on document
    </Text>
  </View>
</View>
`;
