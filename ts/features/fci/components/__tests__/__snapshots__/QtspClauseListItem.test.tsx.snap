// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test QtspClauseListItem component should render a QtspClauseListItem component with props correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  FCI_QTSP_TOS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "paddingBottom": 24,
                            "paddingTop": 24,
                          }
                        }
                        testID="QtspClauseListItemContainerTestID"
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                            }
                          }
                          testID="QtspClauseLinkedTextTestID"
                        >
                          <Text
                            allowFontScaling={false}
                            dynamicTypeRamp="title3"
                            maxFontSizeMultiplier={1.25}
                            style={
                              [
                                {},
                                {
                                  "color": "#0E0F13",
                                  "fontFamily": "Titillium Sans Pro",
                                  "fontSize": 20,
                                  "fontStyle": "normal",
                                  "fontWeight": "600",
                                  "lineHeight": 24,
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            >
                              (1) Io sottoscritto/a dichiaro quanto indicato nel 
                            </Text>
                            <Text
                              accessibilityRole="link"
                              allowFontScaling={false}
                              maxFontSizeMultiplier={1.25}
                              onPress={[Function]}
                              style={
                                [
                                  {
                                    "textDecorationLine": "underline",
                                  },
                                  {
                                    "color": "#0B3EE3",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            >
                              QUADRO E - AUTOCERTIFICAZIONE E SOTTOSCRIZIONE DA PARTE DEL TITOLARE.
                            </Text>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            />
                          </Text>
                        </View>
                        <View
                          style={
                            {
                              "paddingHorizontal": 24,
                            }
                          }
                        />
                        <View
                          accessibilityRole="checkbox"
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": false,
                              "disabled": false,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          needsOffscreenAlphaCompositing={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignSelf": "flex-start",
                              "opacity": 1,
                            }
                          }
                          testID="AnimatedCheckbox"
                        >
                          <View
                            style={
                              [
                                {
                                  "flexDirection": "row",
                                },
                                {
                                  "alignItems": "center",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityElementsHidden={true}
                              importantForAccessibility="no-hide-descendants"
                              pointerEvents="none"
                              style={
                                {
                                  "alignSelf": "flex-start",
                                }
                              }
                            >
                              <View
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={false}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  {
                                    "height": 24,
                                    "width": 24,
                                  }
                                }
                                testID="AnimatedCheckboxInput"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "borderCurve": "continuous",
                                        "borderRadius": 5,
                                        "borderWidth": 2,
                                        "height": 24,
                                        "left": 0,
                                        "position": "absolute",
                                        "top": 0,
                                        "width": 24,
                                      },
                                      {
                                        "borderColor": "#475A6D",
                                      },
                                    ]
                                  }
                                />
                                <View
                                  style={
                                    [
                                      {
                                        "borderCurve": "continuous",
                                        "borderRadius": 5,
                                        "height": 24,
                                        "left": 0,
                                        "position": "absolute",
                                        "top": 0,
                                        "width": 24,
                                      },
                                      {
                                        "backgroundColor": "#0073E6",
                                      },
                                      {
                                        "opacity": 0,
                                        "transform": [
                                          {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              style={
                                {
                                  "width": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "flexShrink": 1,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
