// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageDetailsReminderExpiring should match snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  DUMMY
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSModalScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityRole="button"
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="due-date-alert"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignContent": "center",
                                "alignItems": "flex-start",
                                "flexDirection": "row",
                              },
                              Object {
                                "borderCurve": "continuous",
                                "borderRadius": 8,
                                "padding": 16,
                              },
                              Object {
                                "backgroundColor": "#FFF5DA",
                              },
                              Object {
                                "transform": Array [
                                  Object {
                                    "scale": undefined,
                                  },
                                ],
                              },
                            ]
                          }
                        >
                          <RNSVGSvgView
                            accessibilityElementsHidden={true}
                            accessibilityLabel=""
                            accessible={false}
                            align="xMidYMid"
                            bbHeight={24}
                            bbWidth={24}
                            focusable={false}
                            height={24}
                            importantForAccessibility="no-hide-descendants"
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {
                                  "color": "#614C15",
                                },
                                Object {
                                  "flex": 0,
                                  "height": 24,
                                  "width": 24,
                                },
                              ]
                            }
                            tintColor="#614C15"
                            vbHeight={24}
                            vbWidth={24}
                            width={24}
                          >
                            <RNSVGGroup
                              fill={
                                Object {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGPath
                                clipRule={0}
                                d="m15.523 3.047 7.926 13.813c1.566 2.73-.392 6.14-3.523 6.14H4.074C.942 23-1.015 19.59.55 16.86L8.477 3.047c1.566-2.73 5.48-2.73 7.046 0Zm-3.495 13.458a1.528 1.528 0 1 1 0 3.056 1.528 1.528 0 0 1 0-3.056Zm0-1.944c.568 0 1.029-.46 1.029-1.028V5.528a1.028 1.028 0 0 0-2.057 0v8.005c0 .567.46 1.028 1.029 1.028Z"
                                fill={
                                  Object {
                                    "type": 2,
                                  }
                                }
                                fillRule={0}
                                propList={
                                  Array [
                                    "fill",
                                    "fillRule",
                                  ]
                                }
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                          <View
                            style={
                              Object {
                                "width": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              allowFontScaling={false}
                              color="warning-850"
                              defaultColor="black"
                              defaultWeight="Bold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#614C15",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Expires on 21/03/2024 at 10:33
                            </Text>
                            <View
                              style={
                                Object {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              ellipsizeMode="tail"
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "fontFamily": "Titillium Web",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "700",
                                  },
                                  Object {
                                    "color": "#614C15",
                                  },
                                ]
                              }
                            >
                              Add reminder
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSModalScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
