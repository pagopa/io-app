// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageDetailsFooter component should match the snapshot when the service's contact details are defined 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  DUMMY_ROUTE
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 24,
                            },
                            Object {
                              "backgroundColor": "#F4F5F8",
                              "marginBottom": "-75%",
                              "paddingBottom": "75%",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "height": 16,
                            }
                          }
                        />
                        <View
                          accessibilityLabel="Contact the sender"
                          accessibilityRole="button"
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                },
                                Object {
                                  "backgroundColor": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  },
                                  Object {
                                    "transform": Array [
                                      Object {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "marginRight": 16,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  color={4278219750}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0073E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor={4278219750}
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup>
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M5 0C2.23858 0 0 2.23858 0 5v10c0 2.7614 2.23858 5 5 5h2.17157c.26522 0 .51957.1054.70711.2929l2.65842 2.6584c.8181.8181 2.1575.7735 2.9193-.0972l2.1986-2.5126A.99985.99985 0 0 1 16.4075 20H19c2.7614 0 5-2.2386 5-5V5c0-2.76142-2.2386-5-5-5H5ZM2 5c0-1.65685 1.34315-3 3-3h14c1.6569 0 3 1.34315 3 3v10c0 1.6569-1.3431 3-3 3h-2.5925c-.8651 0-1.688.3734-2.2577 1.0245l-2.1985 2.5126-2.65841-2.6584A3.00006 3.00006 0 0 0 7.17157 18H5c-1.65685 0-3-1.3431-3-3V5Zm4 8c-.55228 0-1 .4477-1 1s.44772 1 1 1h6.0269c.5523 0 1-.4477 1-1s-.4477-1-1-1H6ZM5 5.99808C5 5.44686 5.44686 5 5.99808 5H18.0019c.5512 0 .9981.44686.9981.99808 0 .55123-.4469.99808-.9981.99808H5.99808C5.44686 6.99616 5 6.54931 5 5.99808ZM5.99808 9C5.44686 9 5 9.44686 5 9.99808s.44686.99812.99808.99812H18.0019c.5512 0 .9981-.4469.9981-.99812S18.5531 9 18.0019 9H5.99808Z"
                                      fill={
                                        Array [
                                          2,
                                        ]
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "fontFamily": "Titillium Web",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                        "lineHeight": 20,
                                      },
                                      Object {
                                        "color": "#0073E6",
                                      },
                                    ]
                                  }
                                >
                                  Contact the sender
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          accessibilityLabel="Show more data"
                          accessibilityRole="button"
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                },
                                Object {
                                  "backgroundColor": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  },
                                  Object {
                                    "transform": Array [
                                      Object {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "marginRight": 16,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  color={4278219750}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0073E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor={4278219750}
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup>
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                      fill={
                                        Array [
                                          2,
                                        ]
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "fontFamily": "Titillium Web",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                        "lineHeight": 20,
                                      },
                                      Object {
                                        "color": "#0073E6",
                                      },
                                    ]
                                  }
                                >
                                  Show more data
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageDetailsFooter component should match the snapshot when the service's contact details are not defined 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  DUMMY_ROUTE
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "paddingHorizontal": 24,
                            },
                            Object {
                              "backgroundColor": "#F4F5F8",
                              "marginBottom": "-75%",
                              "paddingBottom": "75%",
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "height": 16,
                            }
                          }
                        />
                        <View
                          accessibilityLabel="Show more data"
                          accessibilityRole="button"
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                },
                                Object {
                                  "backgroundColor": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  },
                                  Object {
                                    "transform": Array [
                                      Object {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "marginRight": 16,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  color={4278219750}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0073E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor={4278219750}
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup>
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                      fill={
                                        Array [
                                          2,
                                        ]
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "fontFamily": "Titillium Web",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                        "lineHeight": 20,
                                      },
                                      Object {
                                        "color": "#0073E6",
                                      },
                                    ]
                                  }
                                >
                                  Show more data
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
