// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShowMoreListItem should match snapshot, no data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            />
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, one section, no items 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, one section, one item, no icon 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={3}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 1"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 1
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 1
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, one section, one item, with icon 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={4}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 1"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 1
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 1
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, one section, two items, no icon 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={5}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 1"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 1
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 1
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "backgroundColor": "#D2D6E3",
                                    "height": 0.5,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="accessibiliy label 2"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 2
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 2
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, one section, two items, with icon 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={6}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 1"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 1
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 1
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "backgroundColor": "#D2D6E3",
                                    "height": 0.5,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="accessibiliy label 2"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 2
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 2
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, three sections, different item count 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={8}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 1"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 1
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 1
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 2 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 2 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 2"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 2
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 2
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "backgroundColor": "#D2D6E3",
                                    "height": 0.5,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="accessibiliy label 3"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 3
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 3
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 3 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 3 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 4"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 4
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 4
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "backgroundColor": "#D2D6E3",
                                    "height": 0.5,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="accessibiliy label 5"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 5
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 5
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "backgroundColor": "#D2D6E3",
                                    "height": 0.5,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="accessibiliy label 6"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 6
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 6
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ShowMoreListItem should match snapshot, two sections, different item count 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={7}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Show more data"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="show-more-data-action"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "color": "#0B3EE3",
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              tintColor="#0B3EE3"
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                color="#0B3EE3"
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M23.0692 1H16.1192C14.4002 1 12.9076 1.55894 12.0012 2.43149C11.0924 1.55894 9.59977 1 7.88084 1H0.928523C0.415514 1 0 1.41429 0 1.92578V20.3349C0 20.8464 0.415514 21 0.928523 21H7.88084C9.70655 21 11 21.5454 11 22.2999C11 22.8114 11.4858 23 11.9988 23C12.5118 23 13 22.8114 13 22.2999C13 21.5454 14.2911 21 16.1168 21H23.0692C23.5822 21 23.9977 20.8464 23.9977 20.3349V1.92578C23.9977 1.41429 23.5822 1 23.0692 1ZM11 19.5C10.1365 19.0244 9.10185 19 7.882 19H2.25C2.11193 19 2 18.8881 2 18.75V3.25C2 3.11193 2.11193 3 2.25 3H4.86894H7.88084C9.70655 3 11.0703 3.69633 11.0703 4.45084L11 12.309V19.5ZM22 18.75C22 18.8881 21.8881 19 21.75 19H16.1192C14.8982 19 13.8635 19.0244 13 19.5V12.3096V4.45084C13 3.69633 14.2935 3 16.1192 3H21.75C21.8881 3 22 3.11193 22 3.25V18.75ZM15 6C15 5.44772 15.4477 5 16 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H16C15.4477 7 15 6.55228 15 6ZM16 8C15.4477 8 15 8.44772 15 9C15 9.55229 15.4477 10 16 10H19C19.5523 10 20 9.55229 20 9C20 8.44772 19.5523 8 19 8H16Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Show more data
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        onDismiss={[Function]}
                        snapPoints={
                          [
                            10,
                          ]
                        }
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 1 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 1 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 1"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 1
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 1
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View
                                      accessibilityLabel="Section 2 title"
                                      accessibilityRole="header"
                                      accessible={true}
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        role="heading"
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        Section 2 title
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                              <View
                                accessibilityLabel="accessibiliy label 2"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 2
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 2
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "backgroundColor": "#D2D6E3",
                                    "height": 0.5,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="accessibiliy label 3"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": undefined,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <View
                                  accessibilityElementsHidden={true}
                                  importantForAccessibility="no-hide-descendants"
                                  style={
                                    [
                                      {
                                        "marginHorizontal": -24,
                                        "paddingHorizontal": 24,
                                        "paddingVertical": 12,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                      },
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "space-between",
                                        },
                                        {
                                          "columnGap": 18,
                                        },
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="footnote"
                                        maxFontSizeMultiplier={1.5}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#555C70",
                                              "fontFamily": "Titillio",
                                              "fontSize": 14,
                                              "fontStyle": "normal",
                                              "fontWeight": "400",
                                              "lineHeight": 21,
                                            },
                                          ]
                                        }
                                      >
                                        label 3
                                      </Text>
                                      <Text
                                        allowFontScaling={true}
                                        dynamicTypeRamp="headline"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={2}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0B3EE3",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 24,
                                            },
                                          ]
                                        }
                                      >
                                        value 3
                                      </Text>
                                    </View>
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      bbHeight={36}
                                      bbWidth={36}
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "color": "#0B3EE3",
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      tintColor="#0B3EE3"
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        color="#0B3EE3"
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          clipRule={0}
                                          d="M12 18h8a2 2 0 0 0 2-2V9h-4a3 3 0 0 1-3-3V2h-3a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2Zm9.332-11.987a2 2 0 0 1 .603.987H18a1 1 0 0 1-1-1V2.227a2 2 0 0 1 .406.281l3.926 3.505ZM14 20h-2a4 4 0 0 1-4-4V6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2Zm2 0h4a4 4 0 0 0 4-4V7.505a4 4 0 0 0-1.336-2.984l-3.926-3.505A4 4 0 0 0 16.074 0H12a4 4 0 0 0-4 4H4a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          fillRule={0}
                                          propList={
                                            [
                                              "fill",
                                              "fillRule",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
