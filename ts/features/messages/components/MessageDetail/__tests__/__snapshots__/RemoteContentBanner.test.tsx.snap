// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RemoteContentBanner Should match snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGE_DETAIL
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "height": 16,
                          }
                        }
                      />
                      <View
                        accessible={false}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignContent": "center",
                                "alignItems": "flex-start",
                                "borderCurve": "continuous",
                                "borderRadius": 8,
                                "flexDirection": "row",
                              },
                              Object {
                                "backgroundColor": "#F4F5F8",
                                "paddingHorizontal": 16,
                                "paddingVertical": 16,
                              },
                              Object {
                                "transform": Array [
                                  Object {
                                    "scale": undefined,
                                  },
                                ],
                              },
                            ]
                          }
                        >
                          <View
                            accessibilityRole="button"
                            accessible={true}
                            style={
                              Array [
                                Object {
                                  "flex": 1,
                                },
                                Object {
                                  "alignSelf": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="blue"
                              defaultWeight="Bold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 14,
                                  "lineHeight": 21,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              This is a dynamic message: its content may change over time to give you up-to-date information.
                            </Text>
                            <View
                              style={
                                Object {
                                  "height": 8,
                                }
                              }
                            />
                            <View
                              pointerEvents="none"
                            >
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="Learn more"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={
                                  Object {
                                    "bottom": 14,
                                    "left": 24,
                                    "right": 24,
                                    "top": 14,
                                  }
                                }
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                onTouchEnd={[Function]}
                                style={
                                  Object {
                                    "alignSelf": "flex-start",
                                  }
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "elevation": 0,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "textAlignVertical": "center",
                                      },
                                      false,
                                      Object {},
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    accessibilityElementsHidden={true}
                                    accessible={false}
                                    allowFontScaling={false}
                                    ellipsizeMode="tail"
                                    importantForAccessibility="no-hide-descendants"
                                    maxFontSizeMultiplier={1.3}
                                    numberOfLines={1}
                                    style={
                                      Array [
                                        Object {
                                          "fontFamily": "Titillium Web",
                                          "fontSize": 16,
                                          "fontStyle": "normal",
                                          "fontWeight": "700",
                                        },
                                        Object {
                                          "color": "#0073E6",
                                        },
                                        Object {
                                          "color": undefined,
                                        },
                                      ]
                                    }
                                  >
                                    Learn more
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Array [
                                Object {
                                  "marginRight": -16,
                                },
                                Object {
                                  "alignSelf": "center",
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={80}
                              bbWidth={80}
                              color="#00C5CA"
                              focusable={false}
                              height={80}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {
                                    "flex": 0,
                                    "height": 80,
                                    "width": 80,
                                  },
                                ]
                              }
                              tintColor="#00C5CA"
                              vbHeight={240}
                              vbWidth={240}
                              width={80}
                            >
                              <RNSVGGroup
                                fill={
                                  Object {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  d="M158.74 102.76L154.92 109.53C154.92 109.53 151.44 116.1 150.97 116.75C150.5 117.4 146.6 122.24 146.04 122.53C145.48 122.82 140.25 123.82 140.25 123.82L137.19 121.34L133.83 117.02V110L137.17 98.4L145.92 77.83L148.42 73.58H30.69C24.23 73.58 19 78.81 19 85.27V153.36C19 160.3 24.64 165.93 31.58 165.9L49.41 165.84L94.69 165.91L138.98 194.18C142.84 196.65 147.65 192.84 146.12 188.51L138.16 165.9H149.58C156.04 165.9 161.27 160.67 161.27 154.21V106.02L158.74 102.77V102.76Z"
                                  fill={
                                    Object {
                                      "payload": 4289392367,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M141.74 125.98C140.55 125.98 139.44 125.74 138.47 125.4C133.1 123.52 130.01 117.78 131.29 112.05C133.67 101.39 141.13 74.61 158.9 56.2C163.96 50.96 170.51 47.44 177.85 46.02C187.61 44.12 198.85 45.23 213.08 46.63C221.07 47.42 230.12 48.31 240.09 48.74L239.92 52.74C229.85 52.3 220.73 51.41 212.69 50.62C198.79 49.25 187.8 48.17 178.62 49.95C172.09 51.22 166.27 54.34 161.79 58.99C144.72 76.67 137.51 102.61 135.21 112.94C134.37 116.69 136.35 120.43 139.81 121.64C140.97 122.05 144.49 123.28 148.62 116.8C157.07 103.53 159.96 89.71 159.99 89.57L163.91 90.37C163.79 90.96 160.86 105.03 151.99 118.95C148.51 124.41 144.85 126 141.76 126L141.74 125.98Z"
                                  fill={
                                    Object {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M181.09 98.88C180.51 98.88 179.9 98.81 179.27 98.66C175 97.65 170.36 93.37 165.5 85.93C162.01 80.6 159.69 75.61 159.59 75.4L163.22 73.72C165.69 79.04 173.55 93.19 180.19 94.76C181.82 95.15 182.4 94.54 182.8 93.83C184.8 90.22 182.57 79.76 177.92 75.15L180.73 72.31C186.44 77.97 189.36 90.25 186.3 95.77C185.18 97.79 183.33 98.87 181.1 98.87L181.09 98.88Z"
                                  fill={
                                    Object {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M184.57 81.11L181.8 78.23C182.11 77.93 189.58 70.82 196.53 72.36L195.66 76.27C191.64 75.38 186.29 79.47 184.57 81.12V81.11Z"
                                  fill={
                                    Object {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M170.17 113.96C166.34 113.96 162.3 112.33 159.65 109.54C156.99 106.75 156.11 103.22 157.16 99.61L161 100.72C160.19 103.53 161.39 105.56 162.55 106.78C164.87 109.21 168.97 110.49 172.1 109.74C176.14 108.78 177.55 99.7 177.72 96.6L181.71 96.82C181.63 98.35 180.67 111.81 173.02 113.64C172.1 113.86 171.14 113.97 170.16 113.97L170.17 113.96Z"
                                  fill={
                                    Object {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M178.01 111.1C176.84 111.1 176.09 111.04 175.97 111.03L176.32 107.05C176.42 107.05 186.25 107.84 191.97 102.9C194.48 100.73 195.8 97.84 196.03 94.05C196.25 90.23 195.66 87.66 194.39 87C192.46 86 188.29 88.45 186.68 89.72L184.2 86.58C184.94 86 191.51 80.99 196.24 83.46C199.08 84.94 200.36 88.59 200.02 94.29C199.73 99.15 197.9 103.07 194.57 105.94C189.27 110.51 181.63 111.1 178 111.1H178.01Z"
                                  fill={
                                    Object {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M227.23 97.03C208.48 97.03 198.041 94.16 197.521 94.01L198.601 90.16C198.751 90.2 213.801 94.32 239.861 92.61L240.12 96.6C235.47 96.91 231.16 97.03 227.23 97.03Z"
                                  fill={
                                    Object {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M40.0401 152.32C43.7459 152.32 46.7501 149.316 46.7501 145.61C46.7501 141.904 43.7459 138.9 40.0401 138.9C36.3342 138.9 33.3301 141.904 33.3301 145.61C33.3301 149.316 36.3342 152.32 40.0401 152.32Z"
                                  fill={
                                    Object {
                                      "payload": 4278240714,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M66.1202 152.32C69.826 152.32 72.8302 149.316 72.8302 145.61C72.8302 141.904 69.826 138.9 66.1202 138.9C62.4143 138.9 59.4102 141.904 59.4102 145.61C59.4102 149.316 62.4143 152.32 66.1202 152.32Z"
                                  fill={
                                    Object {
                                      "payload": 4278240714,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M91.1202 152.32C94.826 152.32 97.8302 149.316 97.8302 145.61C97.8302 141.904 94.826 138.9 91.1202 138.9C87.4143 138.9 84.4102 141.904 84.4102 145.61C84.4102 149.316 87.4143 152.32 91.1202 152.32Z"
                                  fill={
                                    Object {
                                      "payload": 4278240714,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessibilityPositionChangeAnnouncement=""
                        accessible={false}
                        backdropComponent={[Function]}
                        enableDismissOnClose={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        handleComponentAccessibility={
                          Object {
                            "accessible": false,
                          }
                        }
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        snapPoints={
                          Array [
                            1,
                          ]
                        }
                        style={
                          Object {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          style={
                            Object {
                              "flex": 1,
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                            >
                              <Text
                                allowFontScaling={false}
                                color="bluegrey"
                                defaultColor="bluegrey"
                                defaultWeight="Regular"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    },
                                    Object {
                                      "color": "#475A6D",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                <Text
                                  allowFontScaling={false}
                                  color="bluegrey"
                                  defaultColor="bluegrey"
                                  defaultWeight="Regular"
                                  font="TitilliumWeb"
                                  fontStyle={
                                    Object {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      },
                                      Object {
                                        "color": "#475A6D",
                                        "fontFamily": "Titillium Web",
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                      },
                                    ]
                                  }
                                  weight="Regular"
                                >
                                  It's a message that the sender can edit 
                                </Text>
                                <Text
                                  allowFontScaling={false}
                                  color="bluegrey"
                                  defaultColor="bluegrey"
                                  defaultWeight="Regular"
                                  font="TitilliumWeb"
                                  fontStyle={
                                    Object {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      },
                                      Object {
                                        "color": "#475A6D",
                                        "fontFamily": "Titillium Web",
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                      },
                                    ]
                                  }
                                  weight="SemiBold"
                                >
                                  after you've received it
                                </Text>
                                <Text
                                  allowFontScaling={false}
                                  color="bluegrey"
                                  defaultColor="bluegrey"
                                  defaultWeight="Regular"
                                  font="TitilliumWeb"
                                  fontStyle={
                                    Object {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      },
                                      Object {
                                        "color": "#475A6D",
                                        "fontFamily": "Titillium Web",
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                      },
                                    ]
                                  }
                                  weight="Regular"
                                >
                                  . This way, the information it includes will always be up-to-date.

The sender can edit the information in a dynamic message only 
                                </Text>
                                <Text
                                  allowFontScaling={false}
                                  color="bluegrey"
                                  defaultColor="bluegrey"
                                  defaultWeight="Regular"
                                  font="TitilliumWeb"
                                  fontStyle={
                                    Object {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      },
                                      Object {
                                        "color": "#475A6D",
                                        "fontFamily": "Titillium Web",
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                      },
                                    ]
                                  }
                                  weight="SemiBold"
                                >
                                  specific cases
                                </Text>
                                <Text
                                  allowFontScaling={false}
                                  color="bluegrey"
                                  defaultColor="bluegrey"
                                  defaultWeight="Regular"
                                  font="TitilliumWeb"
                                  fontStyle={
                                    Object {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    }
                                  }
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      },
                                      Object {
                                        "color": "#475A6D",
                                        "fontFamily": "Titillium Web",
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                      },
                                    ]
                                  }
                                  weight="Regular"
                                >
                                  . For example, to change outdated information or replace an attachment that is no longer valid.

If the sender needs to share new information or important updates with you, you'll receive a new message.
                                </Text>
                              </Text>
                            </View>
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
