// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmptyList should match snapshot, ARCHIVE category, pot.none 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={19}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={20}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your archive is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Hold on a message to move it to the archive. You can also archive multiple messages at the same time. Archived messages will not be deleted and will be available in search results.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.noneError 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={23}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={24}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="m163.7 156.28-8.51-5.4-3.63-6.05 2.33-3.93 4.14-5.57-5.33-6.74-.55-5.22 7.37-2.49-1.05-4.44 3.79-2.49s9.52 1.63 9.77 1.63c.2 0 17.76 13.61 24.84 19.11 3.66-5.07 8.6-15.33 8.6-29.28 0-8.14-2.04-16.16-5.93-23.34-3.89-7.18-9.52-13.29-16.39-17.8-6.86-4.51-14.75-7.27-22.96-8.04-4.96-.47-9.94-.2-14.79.79-6.31 1.28-11.72 5.07-16.46 9.42l-15 13.78 17 28.16-24.5 24.7 15 29.15-21.4996 23.71 9.9996 24.21 57.96-49.85-4.21-4.02h.01Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M84.1001 58.86c6.14 2.27 11.78 5.73 16.5799 10.17l-5.0399 9.55 20.4699 30.29-20.4699 24.83 16.9699 27.31-16.9699 24.82 9.4899 21.35-72.4499-65.43c-4.8-4.44-8.68-9.78-11.4-15.71-2.73-5.93-4.25-12.33-4.49-18.85-.24-6.52.82-13.01 3.1-19.13 2.29-6.11 5.76-11.71 10.23-16.49 4.46-4.77 9.83-8.63 15.79-11.34 5.96-2.71 12.4-4.23 18.95-4.47 6.55-.24 13.09.81 19.23 3.09l.01.01Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M228.62 188.2c-6.57-23.39-19.88-61.6-27.59-64.53l1.42-3.74c12.13 4.61 28.23 60.79 30.03 67.19l-3.85 1.08h-.01ZM179.01 138.19c-16.4-8.82-23.68-15.46-22.92-20.87.47-3.31 3.83-4.9 5.75-5.32 10.67-2.24 33.76 18.83 36.36 21.24l-2.72 2.93c-9.22-8.56-26.31-21.63-32.8-20.26 0 0-2.44.62-2.62 1.97-.12.87.34 5.74 20.85 16.78l-1.89 3.52-.01.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M174.17 150.49c-23.37-14.99-24.79-21.56-23.82-25.21 1.3-4.9 8.2-5.39 8.98-5.43l.21 3.99c-1.55.09-4.89.81-5.33 2.47-.35 1.33.21 6.76 22.12 20.81l-2.16 3.37Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M187.81 216.85c-1.08-4.01-2.06-8.13-3.09-12.5-4.67-19.74-9.51-40.15-23.38-47.08-7.43-3.71-11.2-7.79-11.19-12.11 0-5.82 6.88-9.29 7.17-9.44l1.78 3.58c-1.38.69-4.96 3.1-4.96 5.87 0 2.6 3.19 5.63 8.98 8.52 15.54 7.77 20.59 29.11 25.48 49.74 1.03 4.34 2 8.44 3.06 12.39l-3.86 1.04.01-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M30.7095 64.21c-.24 0-.48-.07-.69-.21L8.52952 49.25c-.56-.38-.7-1.14-.32-1.7.38-.56 1.14-.69 1.69-.32L31.3895 61.98c.56.38.7 1.14.32 1.7-.24.34-.62.53-1.01.53h.01ZM40.0601 55.47c-.54 0-1.04-.37-1.18-.92l-7.63-30.03c-.17-.65.23-1.32.88-1.48.65-.16 1.32.23 1.48.88l7.63 30.03c.17.65-.23 1.32-.88 1.48-.1.03-.2.04-.3.04ZM77.7702 174.8c-.37 0-.74-.14-1.03-.41l-38.61-36.71c-7.1-6.75-12.09-16.59-12.72-25.08-3.29-44.4 36.91-48.46 37.32-48.5.83-.07 1.55.54 1.62 1.36.07.82-.54 1.55-1.36 1.63-1.54.14-37.67 3.87-34.59 45.29.58 7.79 5.21 16.87 11.8 23.13l38.61 36.71c.6.57.62 1.52.05 2.12-.29.31-.69.47-1.09.47v-.01Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Loading messages has failed
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Retry"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                  testID="home_emptyList_retry"
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderRadius": 4,
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "paddingHorizontal": 16,
                                          "textAlignVertical": "center",
                                        },
                                        {
                                          "overflow": "hidden",
                                        },
                                        false,
                                        {
                                          "height": 40,
                                        },
                                        {
                                          "backgroundColor": "#0073E6",
                                        },
                                        {
                                          "backgroundColor": undefined,
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={false}
                                        color="white"
                                        defaultColor="white"
                                        defaultWeight="Bold"
                                        ellipsizeMode="tail"
                                        font="TitilliumSansPro"
                                        fontStyle={
                                          {
                                            "fontSize": 16,
                                          }
                                        }
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.3}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {
                                              "alignSelf": "center",
                                            },
                                            {
                                              "fontSize": 16,
                                            },
                                            {
                                              "color": "#FFFFFF",
                                              "fontFamily": "Titillium Sans Pro",
                                              "fontStyle": "normal",
                                              "fontWeight": "700",
                                            },
                                          ]
                                        }
                                        weight="Bold"
                                      >
                                        Retry
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.noneLoading 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={21}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.noneUpdating 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={22}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.some, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={25}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={26}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your archive is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Hold on a message to move it to the archive. You can also archive multiple messages at the same time. Archived messages will not be deleted and will be available in search results.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.some, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={27}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.someError, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={34}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={35}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your archive is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Hold on a message to move it to the archive. You can also archive multiple messages at the same time. Archived messages will not be deleted and will be available in search results.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.someError, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={36}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.someLoading, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={28}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={29}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your archive is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Hold on a message to move it to the archive. You can also archive multiple messages at the same time. Archived messages will not be deleted and will be available in search results.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.someLoading, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={30}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.someUpdating, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={31}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={32}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your archive is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Hold on a message to move it to the archive. You can also archive multiple messages at the same time. Archived messages will not be deleted and will be available in search results.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, ARCHIVE category, pot.someUpdating, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={33}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.none 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={2}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your message list is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Refresh to check for any new messages.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.noneError 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={5}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={6}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="m163.7 156.28-8.51-5.4-3.63-6.05 2.33-3.93 4.14-5.57-5.33-6.74-.55-5.22 7.37-2.49-1.05-4.44 3.79-2.49s9.52 1.63 9.77 1.63c.2 0 17.76 13.61 24.84 19.11 3.66-5.07 8.6-15.33 8.6-29.28 0-8.14-2.04-16.16-5.93-23.34-3.89-7.18-9.52-13.29-16.39-17.8-6.86-4.51-14.75-7.27-22.96-8.04-4.96-.47-9.94-.2-14.79.79-6.31 1.28-11.72 5.07-16.46 9.42l-15 13.78 17 28.16-24.5 24.7 15 29.15-21.4996 23.71 9.9996 24.21 57.96-49.85-4.21-4.02h.01Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M84.1001 58.86c6.14 2.27 11.78 5.73 16.5799 10.17l-5.0399 9.55 20.4699 30.29-20.4699 24.83 16.9699 27.31-16.9699 24.82 9.4899 21.35-72.4499-65.43c-4.8-4.44-8.68-9.78-11.4-15.71-2.73-5.93-4.25-12.33-4.49-18.85-.24-6.52.82-13.01 3.1-19.13 2.29-6.11 5.76-11.71 10.23-16.49 4.46-4.77 9.83-8.63 15.79-11.34 5.96-2.71 12.4-4.23 18.95-4.47 6.55-.24 13.09.81 19.23 3.09l.01.01Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M228.62 188.2c-6.57-23.39-19.88-61.6-27.59-64.53l1.42-3.74c12.13 4.61 28.23 60.79 30.03 67.19l-3.85 1.08h-.01ZM179.01 138.19c-16.4-8.82-23.68-15.46-22.92-20.87.47-3.31 3.83-4.9 5.75-5.32 10.67-2.24 33.76 18.83 36.36 21.24l-2.72 2.93c-9.22-8.56-26.31-21.63-32.8-20.26 0 0-2.44.62-2.62 1.97-.12.87.34 5.74 20.85 16.78l-1.89 3.52-.01.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M174.17 150.49c-23.37-14.99-24.79-21.56-23.82-25.21 1.3-4.9 8.2-5.39 8.98-5.43l.21 3.99c-1.55.09-4.89.81-5.33 2.47-.35 1.33.21 6.76 22.12 20.81l-2.16 3.37Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M187.81 216.85c-1.08-4.01-2.06-8.13-3.09-12.5-4.67-19.74-9.51-40.15-23.38-47.08-7.43-3.71-11.2-7.79-11.19-12.11 0-5.82 6.88-9.29 7.17-9.44l1.78 3.58c-1.38.69-4.96 3.1-4.96 5.87 0 2.6 3.19 5.63 8.98 8.52 15.54 7.77 20.59 29.11 25.48 49.74 1.03 4.34 2 8.44 3.06 12.39l-3.86 1.04.01-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M30.7095 64.21c-.24 0-.48-.07-.69-.21L8.52952 49.25c-.56-.38-.7-1.14-.32-1.7.38-.56 1.14-.69 1.69-.32L31.3895 61.98c.56.38.7 1.14.32 1.7-.24.34-.62.53-1.01.53h.01ZM40.0601 55.47c-.54 0-1.04-.37-1.18-.92l-7.63-30.03c-.17-.65.23-1.32.88-1.48.65-.16 1.32.23 1.48.88l7.63 30.03c.17.65-.23 1.32-.88 1.48-.1.03-.2.04-.3.04ZM77.7702 174.8c-.37 0-.74-.14-1.03-.41l-38.61-36.71c-7.1-6.75-12.09-16.59-12.72-25.08-3.29-44.4 36.91-48.46 37.32-48.5.83-.07 1.55.54 1.62 1.36.07.82-.54 1.55-1.36 1.63-1.54.14-37.67 3.87-34.59 45.29.58 7.79 5.21 16.87 11.8 23.13l38.61 36.71c.6.57.62 1.52.05 2.12-.29.31-.69.47-1.09.47v-.01Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Loading messages has failed
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Retry"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                  testID="home_emptyList_retry"
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderRadius": 4,
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "paddingHorizontal": 16,
                                          "textAlignVertical": "center",
                                        },
                                        {
                                          "overflow": "hidden",
                                        },
                                        false,
                                        {
                                          "height": 40,
                                        },
                                        {
                                          "backgroundColor": "#0073E6",
                                        },
                                        {
                                          "backgroundColor": undefined,
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={false}
                                        color="white"
                                        defaultColor="white"
                                        defaultWeight="Bold"
                                        ellipsizeMode="tail"
                                        font="TitilliumSansPro"
                                        fontStyle={
                                          {
                                            "fontSize": 16,
                                          }
                                        }
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.3}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {
                                              "alignSelf": "center",
                                            },
                                            {
                                              "fontSize": 16,
                                            },
                                            {
                                              "color": "#FFFFFF",
                                              "fontFamily": "Titillium Sans Pro",
                                              "fontStyle": "normal",
                                              "fontWeight": "700",
                                            },
                                          ]
                                        }
                                        weight="Bold"
                                      >
                                        Retry
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.noneLoading 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={3}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.noneUpdating 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={4}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.some, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={7}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={8}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your message list is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Refresh to check for any new messages.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.some, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={9}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.someError, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={16}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={17}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your message list is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Refresh to check for any new messages.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.someError, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={18}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.someLoading, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={10}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={11}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your message list is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Refresh to check for any new messages.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.someLoading, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={12}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.someUpdating, empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={13}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={14}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M102.76 55c27.83 0 50.39 22.56 50.39 50.39 0 1.8-.1 3.58-.28 5.33l-3.63-2.63-3.97-1.84s-5.58.69-6.49 0c-.91-.69-3.36.07-3.68.25-.32.18-3.22 3.07-3.22 3.07l-1.28 3.54v3.94l1.28 2.9v1.89l-5.56-1.38s-.81-.19-2.71-.63c-1.89-.44-7.77-.02-7.96-.87-.19-.85-.1-.92-1.53-1.1-1.43-.17-4.95-.81-4.95-.81l-2.77-.35-2.72-.24s-3.41.83-3.63.98c-.2299.15-2.6699 6.32-2.6699 6.32v1.98l-.93 1.54-2.44 1.36-3.35 3.73.43 8.12 4.02 4.73-4.02 5.58.99 3.82c-22.7-4.9-39.71-25.08-39.71-49.25 0-27.83 22.56-50.39 50.3899-50.39V55Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M202.651 164.54c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.06-2.06.29-2.85.99-.8004.72-1.2704 1.72-1.3204 2.8-.09 2.07 1.3904 3.83 3.4304 4.11 9.84 1.33 22.46 3.45 26.75 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.1104-.55-7.0804-4.1-6.9004-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.6404-2.14 5.7704-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.37 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M122.41 150.3c-2.3-1.73-10.9-2.99-22.9898-3.37-5.84-.18-10.47-5.09-10.32-10.94.11-4.47 3.04-8.44 7.28-9.87l2.11-.71 1.27 3.79-2.11.71c-2.66.89-4.49 3.37-4.55 6.17-.09 3.66 2.8 6.73 6.45 6.85 13.6498.43 22.1598 1.83 25.2698 4.17l-2.4 3.2h-.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M162.49 209.47c-16.99-25.12-39-41.13-65.4198-47.6l-.51-.12c-2.85-.7-5.15-2.77-6.15-5.53-1.04-2.86-.5-6.12 1.4-8.5l3.29-4.1 3.12 2.5-3.29 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8 2.63 3.35 3.02l.5.12c27.4098 6.71 50.2198 23.28 67.7798 49.25l-3.31 2.24v-.02ZM142.327 127.059l-2.585 3.052 8.021 6.792 2.585-3.052-8.021-6.792Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M150.6 155.74c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.38 1.58 25.42l-3.46 2-.01.01ZM130.063 127.83l-12.575 27.227 3.632 1.677 12.574-27.226-3.631-1.678Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M123.15 84.47c-.39 0-.79-.15-1.08-.46-.57-.6-.55-1.55.05-2.12l31.26-29.92c.6-.57 1.55-.55 2.12.05.57.6.55 1.55-.05 2.12l-31.26 29.92c-.29.28-.66.42-1.04.42v-.01ZM106.62 75.54c-.82 0-1.49-.66-1.5-1.48l-.45-41.54c0-.83.66-1.51 1.48-1.52h.02c.82 0 1.49.66 1.5 1.48l.45 41.54c0 .83-.66 1.51-1.48 1.52h-.02ZM87.8601 82.24c-.39 0-.78-.15-1.07-.45l-26.8-27.47c-.58-.59-.57-1.54.03-2.12.59-.58 1.54-.57 2.12.03l26.8 27.47c.58.59.57 1.54-.03 2.12-.29.28-.67.43-1.05.43v-.01ZM82.0598 100.99c-.06 0-.12 0-.18-.01l-45.55-5.36c-.82-.1-1.41-.84-1.31-1.67.1-.82.84-1.41 1.66-1.31l45.56 5.36c.82.1 1.41.84 1.31 1.67-.09.76-.74 1.32-1.49 1.32Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              color="bluegreyDark"
                              defaultColor="bluegreyDark"
                              defaultWeight="Semibold"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 24,
                                  "lineHeight": 34,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 24,
                                    "lineHeight": 34,
                                  },
                                  {
                                    "color": "#17324D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="Semibold"
                            >
                              Your message list is empty.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="bluegrey"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumSansPro"
                              fontStyle={
                                {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                [
                                  {
                                    "textAlign": "center",
                                  },
                                  {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  {
                                    "color": "#475A6D",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Refresh to check for any new messages.
                            </Text>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`EmptyList should match snapshot, INBOX   category, pot.someUpdating, non-empty data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={15}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
