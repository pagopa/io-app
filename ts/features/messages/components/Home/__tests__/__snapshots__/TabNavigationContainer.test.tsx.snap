// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabNavigationContainer should match snapshot when shownCategory is ARCHIVE 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={3}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "paddingVertical": 8,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "flexGrow": 1,
                                "paddingHorizontal": 24,
                              },
                              {
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                          handlerTag={4}
                          handlerType="NativeViewGestureHandler"
                          horizontal={true}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          showsHorizontalScrollIndicator={false}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "flexBasis": 100,
                                    "flexGrow": 0,
                                    "flexShrink": 1,
                                  },
                                  {
                                    "marginEnd": 8,
                                  },
                                  false,
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Inbox"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": false,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                testID="home_tab_item_inbox"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "alignSelf": "flex-start",
                                        "borderCurve": "continuous",
                                        "borderRadius": 64,
                                        "borderWidth": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "paddingHorizontal": 16,
                                        "paddingVertical": 8,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                        "borderColor": "#BBC2D6",
                                        "transform": [
                                          {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    bbHeight={16}
                                    bbWidth={16}
                                    focusable={false}
                                    height={16}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      [
                                        {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        {
                                          "color": "#0E0F13",
                                        },
                                        {
                                          "flex": 0,
                                          "height": 16,
                                          "width": 16,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={16}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M23.4131 12.7803L19.9423 3.17603C19.6447 2.18079 18.8127 1.51262 17.8695 1.51262H6.13049C5.18734 1.51262 4.35528 2.18079 4.05767 3.17603L0.599465 12.7406L0.58689 12.7803C0.51563 13.0233 0.48 13.2756 0.48 13.5326V20.0508C0.48 21.3941 1.46087 22.4875 2.666 22.4875H21.334C22.5391 22.4875 23.52 21.3941 23.52 20.0508V13.5326C23.52 13.278 23.4844 13.0233 23.4131 12.7803ZM4.83524 3.52414L4.84781 3.48442C5.02806 2.86297 5.54364 2.44478 6.13049 2.44478H17.8695C18.4564 2.44478 18.9698 2.86297 19.1522 3.48442L22.4951 12.7523H17.1716C16.3332 12.7523 15.5808 13.2733 15.2098 14.112L14.8242 14.9834C14.5957 15.4997 14.1326 15.8221 13.6149 15.8221H10.3851C9.86744 15.8221 9.40425 15.4997 9.1758 14.9834L8.79016 14.112C8.41919 13.2733 7.66887 12.7523 6.82842 12.7523H1.50698L4.83524 3.52414ZM2.666 21.553C1.92406 21.553 1.31835 20.8801 1.31835 20.0508V13.6868H6.83051C7.3482 13.6868 7.81139 14.0092 8.03984 14.5255L8.42548 15.3969C8.79645 16.2357 9.54677 16.7566 10.3872 16.7566H13.617C14.4553 16.7566 15.2077 16.2357 15.5787 15.3969L15.9644 14.5255C16.1928 14.0092 16.656 13.6868 17.1737 13.6868H22.6858V20.0508C22.6858 20.8778 22.0822 21.553 21.3382 21.553H2.666Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          [
                                            "fill",
                                          ]
                                        }
                                      />
                                      <RNSVGPath
                                        clipRule={0}
                                        d="M23.8665 12.6113L23.8712 12.6271C23.9573 12.9208 24 13.2272 24 13.5326V20.0508C24 21.6562 22.8235 23 21.334 23H2.666C1.17652 23 0 21.6562 0 20.0508V13.5326C0 13.2246 0.0427558 12.9206 0.128825 12.6271L0.132057 12.6161L0.148009 12.5661L3.60498 3.0049C3.96675 1.81659 4.97263 1 6.13049 1H17.8695C19.0274 1 20.0333 1.81661 20.395 3.00493L23.8665 12.6113ZM19.9423 3.17603L23.4131 12.7803C23.4844 13.0233 23.52 13.278 23.52 13.5326V20.0508C23.52 21.3941 22.5391 22.4875 21.334 22.4875H2.666C1.46087 22.4875 0.48 21.3941 0.48 20.0508V13.5326C0.48 13.2756 0.51563 13.0233 0.58689 12.7803L0.599465 12.7406L4.05767 3.17603C4.35528 2.18079 5.18734 1.51262 6.13049 1.51262H17.8695C18.8127 1.51262 19.6447 2.18079 19.9423 3.17603ZM4.84781 3.48442L4.83524 3.52414L1.50698 12.7523H6.82842C7.66887 12.7523 8.41919 13.2733 8.79016 14.112L9.1758 14.9834C9.40425 15.4997 9.86744 15.8221 10.3851 15.8221H13.6149C14.1326 15.8221 14.5957 15.4997 14.8242 14.9834L15.2098 14.112C15.5808 13.2733 16.3332 12.7523 17.1716 12.7523H22.4951L19.1522 3.48442C18.9698 2.86297 18.4564 2.44478 17.8695 2.44478H6.13049C5.54364 2.44478 5.02806 2.86297 4.84781 3.48442ZM8.03984 14.5255L8.42548 15.3969C8.79645 16.2357 9.54677 16.7566 10.3872 16.7566H13.617C14.4553 16.7566 15.2077 16.2357 15.5787 15.3969L15.9644 14.5255C16.1928 14.0092 16.656 13.6868 17.1737 13.6868H22.6858V20.0508C22.6858 20.8778 22.0822 21.553 21.3382 21.553H2.666C1.92406 21.553 1.31835 20.8801 1.31835 20.0508V13.6868H6.83051C7.3482 13.6868 7.81139 14.0092 8.03984 14.5255ZM1.79835 14.1993H6.83051C7.15368 14.1993 7.45285 14.3986 7.60583 14.7444L7.99145 15.6158C8.43808 16.6255 9.3527 17.2691 10.3872 17.2691H13.617C14.6492 17.2691 15.566 16.6258 16.0127 15.6158L16.3983 14.7444C16.5513 14.3987 16.8505 14.1993 17.1737 14.1993H22.2058V20.0508C22.2058 20.6163 21.7974 21.0404 21.3382 21.0404H2.666C2.20793 21.0404 1.79835 20.6175 1.79835 20.0508V14.1993ZM21.7959 12.2397L18.6987 3.65322L18.6941 3.63756C18.5706 3.21652 18.2337 2.95722 17.8695 2.95722H6.13049C5.76519 2.95722 5.42769 3.21752 5.30633 3.63596L5.30268 3.64853L5.28676 3.69829L2.20619 12.2397H6.82842C7.86297 12.2397 8.77758 12.8833 9.22419 13.8931L9.60979 14.7644C9.76278 15.1102 10.062 15.3096 10.3851 15.3096H13.6149C13.938 15.3096 14.2372 15.1102 14.3902 14.7644L14.7758 13.8931C15.2225 12.8831 16.1394 12.2397 17.1716 12.2397H21.7959Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        fillRule={0}
                                        propList={
                                          [
                                            "fill",
                                            "fillRule",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                  <View
                                    style={
                                      {
                                        "width": 4,
                                      }
                                    }
                                  />
                                  <Text
                                    allowFontScaling={false}
                                    dynamicTypeRamp="footnote"
                                    maxFontSizeMultiplier={1.25}
                                    style={
                                      [
                                        {},
                                        {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Sans Pro",
                                          "fontSize": 14,
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                          "lineHeight": 21,
                                        },
                                      ]
                                    }
                                  >
                                    Inbox
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "flexBasis": 100,
                                    "flexGrow": 0,
                                    "flexShrink": 1,
                                  },
                                  {
                                    "marginEnd": 0,
                                  },
                                  false,
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Archived"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": true,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                testID="home_tab_item_archive"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "alignSelf": "flex-start",
                                        "borderCurve": "continuous",
                                        "borderRadius": 64,
                                        "borderWidth": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "paddingHorizontal": 16,
                                        "paddingVertical": 8,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                        "borderColor": undefined,
                                        "transform": [
                                          {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    bbHeight={16}
                                    bbWidth={16}
                                    focusable={false}
                                    height={16}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      [
                                        {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        {
                                          "color": "#0073E6",
                                        },
                                        {
                                          "flex": 0,
                                          "height": 16,
                                          "width": 16,
                                        },
                                      ]
                                    }
                                    tintColor="#0073E6"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={16}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        clipRule={0}
                                        d="M2 2C0.895431 2 0 2.89543 0 4V6C0 7.10457 0.89543 8 2 8H22C23.1046 8 24 7.10457 24 6V4C24 2.89543 23.1046 2 22 2H2ZM2 8H22V20C22 22.2091 20.2091 24 18 24H6C3.79086 24 2 22.2091 2 20L2 8ZM8 13C8 12.4477 8.44772 12 9 12H15C15.5523 12 16 12.4477 16 13C16 13.5523 15.5523 14 15 14H9C8.44772 14 8 13.5523 8 13Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        fillRule={0}
                                        propList={
                                          [
                                            "fill",
                                            "fillRule",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                  <View
                                    style={
                                      {
                                        "width": 4,
                                      }
                                    }
                                  />
                                  <Text
                                    allowFontScaling={false}
                                    dynamicTypeRamp="footnote"
                                    maxFontSizeMultiplier={1.25}
                                    style={
                                      [
                                        {},
                                        {
                                          "color": "#0073E6",
                                          "fontFamily": "Titillium Sans Pro",
                                          "fontSize": 14,
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                          "lineHeight": 21,
                                        },
                                      ]
                                    }
                                  >
                                    Archived
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`TabNavigationContainer should match snapshot when shownCategory is INBOX 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  MESSAGES_HOME
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "paddingVertical": 8,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "flexGrow": 1,
                                "paddingHorizontal": 24,
                              },
                              {
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                          handlerTag={2}
                          handlerType="NativeViewGestureHandler"
                          horizontal={true}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          showsHorizontalScrollIndicator={false}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "flexBasis": 100,
                                    "flexGrow": 0,
                                    "flexShrink": 1,
                                  },
                                  {
                                    "marginEnd": 8,
                                  },
                                  false,
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Inbox"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": true,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                testID="home_tab_item_inbox"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "alignSelf": "flex-start",
                                        "borderCurve": "continuous",
                                        "borderRadius": 64,
                                        "borderWidth": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "paddingHorizontal": 16,
                                        "paddingVertical": 8,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                        "borderColor": undefined,
                                        "transform": [
                                          {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    bbHeight={16}
                                    bbWidth={16}
                                    focusable={false}
                                    height={16}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      [
                                        {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        {
                                          "color": "#0073E6",
                                        },
                                        {
                                          "flex": 0,
                                          "height": 16,
                                          "width": 16,
                                        },
                                      ]
                                    }
                                    tintColor="#0073E6"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={16}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M23.4131 12.7803L19.9423 3.17603C19.6447 2.18079 18.8127 1.51262 17.8695 1.51262H6.13049C5.18734 1.51262 4.35528 2.18079 4.05767 3.17603L0.599465 12.7406L0.58689 12.7803C0.51563 13.0233 0.48 13.2756 0.48 13.5326V20.0508C0.48 21.3941 1.46087 22.4875 2.666 22.4875H21.334C22.5391 22.4875 23.52 21.3941 23.52 20.0508V13.5326C23.52 13.278 23.4844 13.0233 23.4131 12.7803ZM4.83524 3.52414L4.84781 3.48442C5.02806 2.86297 5.54364 2.44478 6.13049 2.44478H17.8695C18.4564 2.44478 18.9698 2.86297 19.1522 3.48442L22.4951 12.7523H17.1716C16.3332 12.7523 15.5808 13.2733 15.2098 14.112L14.8242 14.9834C14.5957 15.4997 14.1326 15.8221 13.6149 15.8221H10.3851C9.86744 15.8221 9.40425 15.4997 9.1758 14.9834L8.79016 14.112C8.41919 13.2733 7.66887 12.7523 6.82842 12.7523H1.50698L4.83524 3.52414ZM2.666 21.553C1.92406 21.553 1.31835 20.8801 1.31835 20.0508V13.6868H6.83051C7.3482 13.6868 7.81139 14.0092 8.03984 14.5255L8.42548 15.3969C8.79645 16.2357 9.54677 16.7566 10.3872 16.7566H13.617C14.4553 16.7566 15.2077 16.2357 15.5787 15.3969L15.9644 14.5255C16.1928 14.0092 16.656 13.6868 17.1737 13.6868H22.6858V20.0508C22.6858 20.8778 22.0822 21.553 21.3382 21.553H2.666Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          [
                                            "fill",
                                          ]
                                        }
                                      />
                                      <RNSVGPath
                                        clipRule={0}
                                        d="M23.8665 12.6113L23.8712 12.6271C23.9573 12.9208 24 13.2272 24 13.5326V20.0508C24 21.6562 22.8235 23 21.334 23H2.666C1.17652 23 0 21.6562 0 20.0508V13.5326C0 13.2246 0.0427558 12.9206 0.128825 12.6271L0.132057 12.6161L0.148009 12.5661L3.60498 3.0049C3.96675 1.81659 4.97263 1 6.13049 1H17.8695C19.0274 1 20.0333 1.81661 20.395 3.00493L23.8665 12.6113ZM19.9423 3.17603L23.4131 12.7803C23.4844 13.0233 23.52 13.278 23.52 13.5326V20.0508C23.52 21.3941 22.5391 22.4875 21.334 22.4875H2.666C1.46087 22.4875 0.48 21.3941 0.48 20.0508V13.5326C0.48 13.2756 0.51563 13.0233 0.58689 12.7803L0.599465 12.7406L4.05767 3.17603C4.35528 2.18079 5.18734 1.51262 6.13049 1.51262H17.8695C18.8127 1.51262 19.6447 2.18079 19.9423 3.17603ZM4.84781 3.48442L4.83524 3.52414L1.50698 12.7523H6.82842C7.66887 12.7523 8.41919 13.2733 8.79016 14.112L9.1758 14.9834C9.40425 15.4997 9.86744 15.8221 10.3851 15.8221H13.6149C14.1326 15.8221 14.5957 15.4997 14.8242 14.9834L15.2098 14.112C15.5808 13.2733 16.3332 12.7523 17.1716 12.7523H22.4951L19.1522 3.48442C18.9698 2.86297 18.4564 2.44478 17.8695 2.44478H6.13049C5.54364 2.44478 5.02806 2.86297 4.84781 3.48442ZM8.03984 14.5255L8.42548 15.3969C8.79645 16.2357 9.54677 16.7566 10.3872 16.7566H13.617C14.4553 16.7566 15.2077 16.2357 15.5787 15.3969L15.9644 14.5255C16.1928 14.0092 16.656 13.6868 17.1737 13.6868H22.6858V20.0508C22.6858 20.8778 22.0822 21.553 21.3382 21.553H2.666C1.92406 21.553 1.31835 20.8801 1.31835 20.0508V13.6868H6.83051C7.3482 13.6868 7.81139 14.0092 8.03984 14.5255ZM1.79835 14.1993H6.83051C7.15368 14.1993 7.45285 14.3986 7.60583 14.7444L7.99145 15.6158C8.43808 16.6255 9.3527 17.2691 10.3872 17.2691H13.617C14.6492 17.2691 15.566 16.6258 16.0127 15.6158L16.3983 14.7444C16.5513 14.3987 16.8505 14.1993 17.1737 14.1993H22.2058V20.0508C22.2058 20.6163 21.7974 21.0404 21.3382 21.0404H2.666C2.20793 21.0404 1.79835 20.6175 1.79835 20.0508V14.1993ZM21.7959 12.2397L18.6987 3.65322L18.6941 3.63756C18.5706 3.21652 18.2337 2.95722 17.8695 2.95722H6.13049C5.76519 2.95722 5.42769 3.21752 5.30633 3.63596L5.30268 3.64853L5.28676 3.69829L2.20619 12.2397H6.82842C7.86297 12.2397 8.77758 12.8833 9.22419 13.8931L9.60979 14.7644C9.76278 15.1102 10.062 15.3096 10.3851 15.3096H13.6149C13.938 15.3096 14.2372 15.1102 14.3902 14.7644L14.7758 13.8931C15.2225 12.8831 16.1394 12.2397 17.1716 12.2397H21.7959Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        fillRule={0}
                                        propList={
                                          [
                                            "fill",
                                            "fillRule",
                                          ]
                                        }
                                      />
                                      <RNSVGPath
                                        d="M7 13H1L4 4L5 2.5L6 2H19L23 13H19L16.5 13.5L14.5 15.5L13.5 16H10.5L9 15.5L8.5 14.5L7 13Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                  <View
                                    style={
                                      {
                                        "width": 4,
                                      }
                                    }
                                  />
                                  <Text
                                    allowFontScaling={false}
                                    dynamicTypeRamp="footnote"
                                    maxFontSizeMultiplier={1.25}
                                    style={
                                      [
                                        {},
                                        {
                                          "color": "#0073E6",
                                          "fontFamily": "Titillium Sans Pro",
                                          "fontSize": 14,
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                          "lineHeight": 21,
                                        },
                                      ]
                                    }
                                  >
                                    Inbox
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "flexBasis": 100,
                                    "flexGrow": 0,
                                    "flexShrink": 1,
                                  },
                                  {
                                    "marginEnd": 0,
                                  },
                                  false,
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Archived"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": false,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                testID="home_tab_item_archive"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "alignSelf": "flex-start",
                                        "borderCurve": "continuous",
                                        "borderRadius": 64,
                                        "borderWidth": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "paddingHorizontal": 16,
                                        "paddingVertical": 8,
                                      },
                                      {
                                        "backgroundColor": undefined,
                                        "borderColor": "#BBC2D6",
                                        "transform": [
                                          {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    bbHeight={16}
                                    bbWidth={16}
                                    focusable={false}
                                    height={16}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      [
                                        {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        {
                                          "color": "#0E0F13",
                                        },
                                        {
                                          "flex": 0,
                                          "height": 16,
                                          "width": 16,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={16}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        clipRule={0}
                                        d="M0 4c0-1.65685 1.34315-3 3-3h18c1.6569 0 3 1.34315 3 3v2c0 1.30622-.8348 2.41746-2 2.82929V18c0 2.7614-2.2386 5-5 5H7c-2.76142 0-5-2.2386-5-5V8.82929C.8348 8.41746 0 7.30622 0 6V4Zm4 5h16v9c0 1.6569-1.3431 3-3 3H7c-1.65685 0-3-1.3431-3-3V9Zm18-3c0 .55228-.4477 1-1 1H3c-.55228 0-1-.44771-1-1V4c0-.55228.44772-1 1-1h18c.5523 0 1 .44771 1 1v2ZM9 11c-.55229 0-1 .4477-1 1s.44771 1 1 1h6c.5523 0 1-.4477 1-1s-.4477-1-1-1H9Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        fillRule={0}
                                        propList={
                                          [
                                            "fill",
                                            "fillRule",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                  <View
                                    style={
                                      {
                                        "width": 4,
                                      }
                                    }
                                  />
                                  <Text
                                    allowFontScaling={false}
                                    dynamicTypeRamp="footnote"
                                    maxFontSizeMultiplier={1.25}
                                    style={
                                      [
                                        {},
                                        {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Sans Pro",
                                          "fontSize": 14,
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                          "lineHeight": 21,
                                        },
                                      ]
                                    }
                                  >
                                    Archived
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
