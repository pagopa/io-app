// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              9999  8888  7777  6666  55
                            </View>
                            <View>
                              999988887777666655
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, empty payments, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              9999  8888  7777  6666  55
                            </View>
                            <View>
                              999988887777666655
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, multiple payments, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              9999  8888  7777  6666  55
                            </View>
                            <View>
                              999988887777666655
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, one payment, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              9999  8888  7777  6666  55
                            </View>
                            <View>
                              999988887777666655
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, all handled-status items history, undefined payments, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          <View>
                            Mock TimelineListItem at 0
                          </View>
                          <View>
                            Thu Feb 01 2024 01:10:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            VIEWED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 1
                          </View>
                          <View>
                            Sun Mar 03 2024 03:15:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            EFFECTIVE_DATE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 2
                          </View>
                          <View>
                            Sun Apr 07 2024 05:20:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            UNREACHABLE
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 3
                          </View>
                          <View>
                            Fri May 10 2024 07:25:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            CANCELLED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 4
                          </View>
                          <View>
                            Thu Jun 13 2024 09:30:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            IN_VALIDATION
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 5
                          </View>
                          <View>
                            Thu Jul 18 2024 11:35:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            ACCEPTED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 6
                          </View>
                          <View>
                            Tue Aug 20 2024 13:40:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            REFUSED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 7
                          </View>
                          <View>
                            Mon Sep 23 2024 15:45:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERING
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 8
                          </View>
                          <View>
                            Fri Oct 25 2024 17:50:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            DELIVERED
                          </View>
                        </View>
                        <View>
                          <View>
                            Mock TimelineListItem at 9
                          </View>
                          <View>
                            Thu Nov 28 2024 19:55:00 GMT+0000 (Coordinated Universal Time)
                          </View>
                          <View>
                            PAID
                          </View>
                        </View>
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  55
                            </View>
                            <View>
                              111122223333444455
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, empty payments, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  55
                            </View>
                            <View>
                              111122223333444455
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, multiple payments, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 3
                          </View>
                          <View>
                            pagoPA notice 2
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  01
                            </View>
                            <View>
                              111122223333444401
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 4
                          </View>
                          <View>
                            pagoPA notice 3
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  02
                            </View>
                            <View>
                              111122223333444402
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  55
                            </View>
                            <View>
                              111122223333444455
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, one payment, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  00
                            </View>
                            <View>
                              111122223333444400
                            </View>
                          </View>
                          <View>
                            <View>
                              item at 1
                            </View>
                            <View>
                              Payee fiscal code, copy
                            </View>
                            <View>
                              entityCode
                            </View>
                            <View>
                              Payee fiscal code
                            </View>
                            <View>
                              01234567890
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 2
                          </View>
                          <View>
                            pagoPA notice 1
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Notice code, copy
                            </View>
                            <View>
                              docPaymentCode
                            </View>
                            <View>
                              Notice code
                            </View>
                            <View>
                              1111  2222  3333  4444  55
                            </View>
                            <View>
                              111122223333444455
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, not cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, not cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, not cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, undefined cancelled, empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, undefined cancelled, non-empty paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`MessageBottomMenu should match snapshot, no history, undefined payments, undefined cancelled, undefined paid notice codes 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "marginBottom": "-95%",
                              "paddingBottom": "95%",
                              "paddingHorizontal": 24,
                              "paddingTop": 24,
                            },
                            {
                              "backgroundColor": "#F4F5F8",
                            },
                          ]
                        }
                      >
                        <View>
                          Mock ShowMoreListItem
                        </View>
                        <View>
                          <View>
                            View at 0
                          </View>
                          <View>
                            Notifica
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              Codice IUN, copia
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Codice IUN
                            </View>
                            <View>
                              randomIUN
                            </View>
                          </View>
                        </View>
                        <View>
                          <View>
                            View at 1
                          </View>
                          <View>
                            Message
                          </View>
                          <View>
                            <View>
                              item at 0
                            </View>
                            <View>
                              ID messaggio, copy
                            </View>
                            <View>
                              docPaymentTitle
                            </View>
                            <View>
                              Message ID
                            </View>
                            <View>
                              01HVPB9XYZMWNEPTDKZJ8ZJV28
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
