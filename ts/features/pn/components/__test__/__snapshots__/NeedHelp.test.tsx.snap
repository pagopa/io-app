// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NeedHelp NeedHelp Component Should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            false,
          ]
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                [
                  {
                    "flex": 1,
                    "shadowOffset": {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  },
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "shadowColor": "rgb(216, 216, 216)",
                  },
                  [
                    {},
                    false,
                  ],
                ]
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              [
                {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                },
              ]
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    [
                      {
                        "fontSize": 17,
                        "fontWeight": "600",
                      },
                      {
                        "color": "rgb(28, 28, 30)",
                      },
                      undefined,
                    ]
                  }
                >
                  PN_ROUTES_MESSAGE_DETAILS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityLabel="Serve aiuto?"
                        accessibilityRole="button"
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onTouchEnd={[Function]}
                        testID="needHelp-listitem"
                      >
                        <View
                          accessibilityElementsHidden={true}
                          importantForAccessibility="no-hide-descendants"
                          style={
                            [
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              },
                              {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                },
                                {
                                  "columnGap": 18,
                                },
                                {
                                  "transform": [
                                    {
                                      "scale": undefined,
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <RNSVGSvgView
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessible={false}
                              align="xMidYMid"
                              bbHeight={36}
                              bbWidth={36}
                              color="#0B3EE3"
                              focusable={false}
                              height={36}
                              importantForAccessibility="no-hide-descendants"
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "flex": 0,
                                    "height": 36,
                                    "width": 36,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={36}
                            >
                              <RNSVGGroup
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M5 0C2.23858 0 0 2.23858 0 5v10c0 2.7614 2.23858 5 5 5h2.17157c.26522 0 .51957.1054.70711.2929l2.65842 2.6584c.8181.8181 2.1575.7735 2.9193-.0972l2.1986-2.5126A.99985.99985 0 0 1 16.4075 20H19c2.7614 0 5-2.2386 5-5V5c0-2.76142-2.2386-5-5-5H5ZM2 5c0-1.65685 1.34315-3 3-3h14c1.6569 0 3 1.34315 3 3v10c0 1.6569-1.3431 3-3 3h-2.5925c-.8651 0-1.688.3734-2.2577 1.0245l-2.1985 2.5126-2.65841-2.6584A3.00006 3.00006 0 0 0 7.17157 18H5c-1.65685 0-3-1.3431-3-3V5Zm4 8c-.55228 0-1 .4477-1 1s.44772 1 1 1h6.0269c.5523 0 1-.4477 1-1s-.4477-1-1-1H6ZM5 5.99808C5 5.44686 5.44686 5 5.99808 5H18.0019c.5512 0 .9981.44686.9981.99808 0 .55123-.4469.99808-.9981.99808H5.99808C5.44686 6.99616 5 6.54931 5 5.99808ZM5.99808 9C5.44686 9 5 9.44686 5 9.99808s.44686.99812.99808.99812H18.0019c.5512 0 .9981-.4469.9981-.99812S18.5531 9 18.0019 9H5.99808Z"
                                  fill={
                                    {
                                      "type": 2,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                }
                              }
                            >
                              <Text
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0B3EE3",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": 20,
                                    },
                                  ]
                                }
                              >
                                Serve aiuto?
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Modal
                        accessible={false}
                        backdropComponent={[Function]}
                        backgroundStyle={
                          {
                            "backgroundColor": "#FFFFFF",
                          }
                        }
                        enableDismissOnClose={true}
                        enableDynamicSizing={true}
                        footerComponent={[Function]}
                        handleComponent={[Function]}
                        hardwareAccelerated={false}
                        importantForAccessibility="yes"
                        maxDynamicContentSize={1334}
                        onDismiss={[Function]}
                        style={
                          {
                            "borderCurve": "continuous",
                            "borderTopLeftRadius": 24,
                            "borderTopRightRadius": 24,
                            "overflow": "hidden",
                          }
                        }
                        visible={true}
                      >
                        <RCTScrollView
                          overScrollMode="never"
                          style={
                            {
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View>
                            <View>
                              <Text
                                allowFontScaling={true}
                                dynamicTypeRamp="body"
                                maxFontSizeMultiplier={1.5}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#555C70",
                                      "fontFamily": "Titillio",
                                      "fontSize": 16,
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                      "lineHeight": 24,
                                    },
                                  ]
                                }
                              >
                                Per qualsiasi dubbio sul contenuto della notifica SEND, contatta l'ente che te l'ha inviata. I contatti generalmente sono riportati negli allegati alla notifica.

Se hai bisogno di supporto su SEND, consulta le risorse di assistenza
                              </Text>
                              <View
                                style={
                                  {
                                    "height": 16,
                                  }
                                }
                              />
                              <View
                                accessibilityLabel="Vai al centro assistenza"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": false,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={
                                  {
                                    "bottom": 14,
                                    "left": 24,
                                    "right": 24,
                                    "top": 14,
                                  }
                                }
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  {
                                    "alignSelf": "flex-start",
                                  }
                                }
                                testID="needHelp-bottomsheet-action"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "borderCurve": "continuous",
                                        "elevation": 0,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "overflow": "hidden",
                                        "textAlignVertical": "center",
                                      },
                                      false,
                                      {},
                                      {
                                        "paddingHorizontal": 0,
                                      },
                                      {
                                        "backgroundColor": "transparent",
                                        "borderColor": "#0B3EE3",
                                        "borderRadius": 8,
                                        "borderWidth": 0,
                                        "height": undefined,
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                        },
                                        {
                                          "columnGap": 8,
                                        },
                                        false,
                                      ]
                                    }
                                  >
                                    <RNSVGSvgView
                                      accessibilityElementsHidden={true}
                                      accessibilityLabel=""
                                      accessible={false}
                                      align="xMidYMid"
                                      animatedProps={
                                        {
                                          "color": undefined,
                                        }
                                      }
                                      bbHeight={36}
                                      bbWidth={36}
                                      color="#555C70"
                                      focusable={false}
                                      height={36}
                                      importantForAccessibility="no-hide-descendants"
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "flex": 0,
                                            "height": 36,
                                            "width": 36,
                                          },
                                        ]
                                      }
                                      vbHeight={24}
                                      vbWidth={24}
                                      width={36}
                                    >
                                      <RNSVGGroup
                                        fill={
                                          {
                                            "payload": 4278190080,
                                            "type": 0,
                                          }
                                        }
                                      >
                                        <RNSVGPath
                                          d="M12 0a12 12 0 1 0 12 12A12.013 12.013 0 0 0 12 0Zm8.647 7h-3.221a19.674 19.674 0 0 0-2.821-4.644A10.031 10.031 0 0 1 20.647 7ZM16.5 12a10.21 10.21 0 0 1-.476 3H7.976a10.211 10.211 0 0 1-.476-3 10.21 10.21 0 0 1 .476-3h8.048c.307.97.468 1.982.476 3Zm-7.722 5h6.444A19.615 19.615 0 0 1 12 21.588 19.572 19.572 0 0 1 8.778 17Zm0-10A19.615 19.615 0 0 1 12 2.412 19.57 19.57 0 0 1 15.222 7H8.778ZM9.4 2.356A19.676 19.676 0 0 0 6.574 7H3.353A10.03 10.03 0 0 1 9.4 2.356ZM2.461 9H5.9c-.26.98-.394 1.987-.4 3 .006 1.013.14 2.02.4 3H2.461a9.992 9.992 0 0 1 0-6Zm.892 8h3.221A19.676 19.676 0 0 0 9.4 21.644 10.031 10.031 0 0 1 3.353 17Zm11.252 4.644c1.15-1.41 2.1-2.973 2.821-4.644h3.221a10.031 10.031 0 0 1-6.042 4.644ZM21.539 15H18.1c.26-.98.394-1.987.4-3a12.02 12.02 0 0 0-.4-3h3.437a9.991 9.991 0 0 1 0 6h.002Z"
                                          fill={
                                            {
                                              "type": 2,
                                            }
                                          }
                                          propList={
                                            [
                                              "fill",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                    <Text
                                      accessibilityElementsHidden={true}
                                      accessible={false}
                                      allowFontScaling={true}
                                      ellipsizeMode="tail"
                                      importantForAccessibility="no-hide-descendants"
                                      maxFontSizeMultiplier={1.5}
                                      numberOfLines={1}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillio",
                                            "fontSize": 16,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": 20,
                                          },
                                          [
                                            {
                                              "textAlign": "auto",
                                            },
                                            {
                                              "color": "#0B3EE3",
                                            },
                                            {
                                              "color": undefined,
                                            },
                                          ],
                                        ]
                                      }
                                    >
                                      Vai al centro assistenza
                                    </Text>
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "height": 32,
                                  }
                                }
                              />
                            </View>
                            <View
                              style={
                                {
                                  "height": 0,
                                }
                              }
                            />
                          </View>
                        </RCTScrollView>
                      </Modal>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
