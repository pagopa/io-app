// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendQrScanPushEngagementScreen should match snapshot and track analytics event 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "off",
                            "right": "off",
                            "top": "off",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                          }
                        }
                      >
                        <RCTScrollView
                          alwaysBounceVertical={false}
                          centerContent={true}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flexGrow": 1,
                                "justifyContent": "center",
                                "padding": 24,
                              },
                              false,
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                fill="none"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={null}
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                >
                                  <RNSVGPath
                                    d="M207.289 180.45c-.11-.13-10.98-13.21-23.59-26.68-20.84-22.26-30.19-28.43-34.36-29.69-5.3-1.6-9.25-.7-11.14 2.51-1.96 3.35-1.13 8.07.92 10.06.66.63.8 1.63.35 2.42-.45.79-1.38 1.18-2.26.94-.18-.05-18.54-4.97-29.01-5.63-1.05-.07-2.06.29-2.85.99-.81.72-1.27 1.72-1.32 2.8-.09 2.07 1.39 3.83 3.43 4.11 9.84 1.33 22.46 3.45 26.74 6.03l-2.06 3.43c-2.84-1.71-12.03-3.71-25.22-5.49-4.11-.55-7.0795-4.1-6.9-8.25.1-2.17 1.04-4.16 2.65-5.6 1.59-1.43 3.64-2.14 5.77-2.01 7.67.48 18.97 3.05 25.23 4.59-1.02-3.37-.72-7.38 1.07-10.42 1.36-2.31 5.61-7.36 15.74-4.31 15.87 4.78 58.09 55.48 59.88 57.64l-3.08 2.55.01.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M127.05 166.22c-2.31-1.73-10.9-2.99-22.99-3.37-5.8401-.18-10.4701-5.09-10.3201-10.95.11-4.48 3.04-8.44 7.2801-9.87l2.11-.71 1.27 3.79-2.11.71c-2.6601.89-4.4901 3.37-4.5601 6.17-.09 3.66 2.8001 6.73 6.4501 6.85 13.65.43 22.16 1.83 25.27 4.17l-2.4 3.2v.01Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M167.13 225.39c-16.99-25.12-39-41.13-65.42-47.6l-.51-.12c-2.8501-.7-5.1501-2.77-6.1501-5.53-1.04-2.87-.5-6.12 1.4-8.5l3.29-4.1 3.1201 2.5-3.2901 4.1c-1.04 1.3-1.33 3.07-.76 4.64.55 1.51 1.8001 2.63 3.3501 3.01l.5.12c27.41 6.71 50.22 23.28 67.78 49.25l-3.31 2.24v-.01ZM146.973 142.998l-2.585 3.052 8.019 6.794 2.585-3.052-8.019-6.794Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M155.239 171.66c-6.01-10.42-2.18-27.59-2.01-28.32l3.9.89c-.04.16-3.65 16.37 1.58 25.42l-3.46 2-.01.01ZM134.705 143.744l-12.57 27.229 3.631 1.676 12.57-27.229-3.631-1.676Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="m120.07 94.01-2.26-.76c-1.82-.61-3.16-2.16-3.51-4.05l-5.86-31.77c-3.39-18.38-18.8304-31.44-36.6605-32.65-.02-.51-.03-1.02-.1299-1.53-1-5.47-6.2601-9.09-11.7401-8.08-5.47 1.01-9.09 6.27-8.08 11.74.1.52.26 1 .43 1.48-16.22 7.49-25.98 25.2-22.59 43.58l5.86 31.77c.35 1.89-.35 3.82-1.83 5.04l-1.84 1.52c-2.89 2.39-2.45 6.95.86 8.73 1.06.57 2.28.76 3.47.55l19.16-3.54c2.07 11.24 14.93 18.29 26.18 16.22 11.24-2.07 20.7405-13.25 18.6605-24.49l19.16-3.54c1.18-.22 2.26-.84 3.05-1.75 2.45-2.84 1.24-7.26-2.32-8.46l-.01-.01Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M37.7898 115.66c-.83 0-1.56-.59-1.72-1.43-.18-.95.45-1.86 1.4-2.04L114.31 98.01c.95-.17 1.86.45 2.04 1.4.18.95-.45 1.86-1.4 2.04l-76.8402 14.18c-.11.02-.21.03-.32.03Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M94.7698 103.39c1.83 9.92-4.73 19.45-14.65 21.28-9.92 1.83-19.45-4.73-21.28-14.65"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                accessible={true}
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "borderCurve": "continuous",
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                    },
                                    {
                                      "borderRadius": 36,
                                      "paddingHorizontal": 12,
                                      "paddingVertical": 6,
                                    },
                                    {
                                      "backgroundColor": "#DBF9FA",
                                    },
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={true}
                                  ellipsizeMode="tail"
                                  maxFontSizeMultiplier={1.5}
                                  numberOfLines={1}
                                  style={
                                    [
                                      {},
                                      {
                                        "color": "#003B3D",
                                        "fontFamily": "Titillio",
                                        "fontSize": 12,
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                        "lineHeight": 16,
                                      },
                                      {
                                        "alignSelf": "center",
                                        "flexShrink": 1,
                                        "letterSpacing": 0.5,
                                        "textTransform": "uppercase",
                                      },
                                    ]
                                  }
                                >
                                  Consigliato
                                </Text>
                              </View>
                              <View
                                style={
                                  {
                                    "height": 8,
                                  }
                                }
                              />
                            </View>
                            <Text
                              accessibilityRole="header"
                              allowFontScaling={true}
                              dynamicTypeRamp="title2"
                              maxFontSizeMultiplier={1.5}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillio",
                                    "fontSize": 22,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 33,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Non perderti i messaggi importanti
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={true}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.5}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillio",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Attiva le notifiche push: se leggi subito le comunicazioni a valore legale, potresti risparmiare sui costi di raccomandata.
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Attiva notifiche push"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "auto",
                                      "flexShrink": 1,
                                    }
                                  }
                                  testID="engagement-cta"
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderCurve": "continuous",
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "overflow": "hidden",
                                          "textAlignVertical": "center",
                                        },
                                        false,
                                        {
                                          "backgroundColor": undefined,
                                        },
                                        {
                                          "paddingHorizontal": 24,
                                        },
                                        {
                                          "backgroundColor": "#0B3EE3",
                                          "borderColor": "#FFFFFF",
                                          "borderRadius": 8,
                                          "borderWidth": 0,
                                          "height": 48,
                                        },
                                        {},
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          {
                                            "columnGap": 8,
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={true}
                                        ellipsizeMode="tail"
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0E0F13",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": undefined,
                                            },
                                            [
                                              {
                                                "textAlign": "auto",
                                              },
                                              {
                                                "color": "#FFFFFF",
                                              },
                                              {
                                                "color": undefined,
                                              },
                                            ],
                                          ]
                                        }
                                      >
                                        Attiva notifiche push
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            [
                              {
                                "borderBottomWidth": 1,
                                "borderColor": "rgba(210,214,227,0)",
                              },
                              {},
                              {
                                "backgroundColor": "#FFFFFF",
                              },
                              {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": "transparent",
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "marginTop": 0,
                                },
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                {
                                  "width": 32,
                                }
                              }
                            />
                            <View
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessibilityRole="header"
                              accessible={false}
                              importantForAccessibility="yes"
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                numberOfLines={1}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0E0F13",
                                      "fontFamily": "Titillio",
                                      "fontSize": 14,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": undefined,
                                    },
                                    [
                                      {
                                        "color": "#0E0F13",
                                        "textAlign": "center",
                                      },
                                      {
                                        "opacity": 1,
                                      },
                                    ],
                                  ]
                                }
                              />
                            </View>
                            <View
                              style={
                                {
                                  "display": "flex",
                                  "flexDirection": "row",
                                  "flexShrink": 0,
                                  "gap": 24,
                                }
                              }
                            >
                              <View
                                accessibilityLabel="Close"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                testID="header-close"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "justifyContent": "center",
                                      },
                                      {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      false,
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={36}
                                    bbWidth={36}
                                    color="#0E0F13"
                                    focusable={false}
                                    height={36}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      [
                                        {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        {
                                          "flex": 0,
                                          "height": 36,
                                          "width": 36,
                                        },
                                      ]
                                    }
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={36}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        clipRule={0}
                                        d="M19.7071 5.70711c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0L12 10.5858 5.70711 4.29289c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422L10.5858 12l-6.29291 6.2929c-.39052.3905-.39052 1.0237 0 1.4142.39053.3905 1.02369.3905 1.41422 0L12 13.4142l6.2929 6.2929c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L13.4142 12l6.2929-6.29289Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        fillRule={0}
                                        propList={
                                          [
                                            "fill",
                                            "fillRule",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            [
              {
                "height": 44,
              },
              {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ],
          ]
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`SendQrScanPushEngagementScreen should render a blank page when told to do so by the logic hook 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents={
            [
              1,
            ]
          }
          sheetCornerRadius={-1}
          sheetElevation={24}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetInitialDetent={0}
          sheetLargestUndimmedDetent={-1}
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              {
                "zIndex": undefined,
              },
            ]
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                  },
                  undefined,
                  null,
                ]
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    />
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            [
                              {
                                "borderBottomWidth": 1,
                                "borderColor": "rgba(210,214,227,0)",
                              },
                              {},
                              {
                                "backgroundColor": "#FFFFFF",
                              },
                              {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": "transparent",
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "marginTop": 0,
                                },
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                {
                                  "width": 32,
                                }
                              }
                            />
                            <View
                              accessibilityElementsHidden={true}
                              accessibilityLabel=""
                              accessibilityRole="header"
                              accessible={false}
                              importantForAccessibility="yes"
                              style={
                                {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                allowFontScaling={true}
                                maxFontSizeMultiplier={1.5}
                                numberOfLines={1}
                                style={
                                  [
                                    {},
                                    {
                                      "color": "#0E0F13",
                                      "fontFamily": "Titillio",
                                      "fontSize": 14,
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                      "lineHeight": undefined,
                                    },
                                    [
                                      {
                                        "color": "#0E0F13",
                                        "textAlign": "center",
                                      },
                                      {
                                        "opacity": 1,
                                      },
                                    ],
                                  ]
                                }
                              />
                            </View>
                            <View
                              style={
                                {
                                  "display": "flex",
                                  "flexDirection": "row",
                                  "flexShrink": 0,
                                  "gap": 24,
                                }
                              }
                            >
                              <View
                                accessibilityLabel="Close"
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": false,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                testID="header-close"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "justifyContent": "center",
                                      },
                                      {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      false,
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={36}
                                    bbWidth={36}
                                    color="#0E0F13"
                                    focusable={false}
                                    height={36}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      [
                                        {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        {
                                          "flex": 0,
                                          "height": 36,
                                          "width": 36,
                                        },
                                      ]
                                    }
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={36}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        clipRule={0}
                                        d="M19.7071 5.70711c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0L12 10.5858 5.70711 4.29289c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422L10.5858 12l-6.29291 6.2929c-.39052.3905-.39052 1.0237 0 1.4142.39053.3905 1.02369.3905 1.41422 0L12 13.4142l6.2929 6.2929c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L13.4142 12l6.2929-6.29289Z"
                                        fill={
                                          {
                                            "type": 2,
                                          }
                                        }
                                        fillRule={0}
                                        propList={
                                          [
                                            "fill",
                                            "fillRule",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          [
            {
              "zIndex": 1,
            },
            [
              {
                "height": 44,
              },
              {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ],
          ]
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;
