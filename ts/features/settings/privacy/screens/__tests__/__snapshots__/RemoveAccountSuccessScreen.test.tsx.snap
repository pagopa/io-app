// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RemoveAccountSuccessScreen should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  PROFILE_REMOVE_ACCOUNT_SUCCESS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "additive",
                            "right": "additive",
                            "top": "additive",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={2}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M163.87 184.88L156.8 168.14C155.28 164.54 151.96 162.01 148.08 161.5L128.58 158.91C124.7 158.4 121.39 155.87 119.86 152.27L119.18 150.66L118.5 149.05C116.98 145.45 117.48 141.31 119.81 138.17L131.55 122.38C133.88 119.24 134.38 115.1 132.86 111.5L125.79 94.76C123.64 89.67 118.11 87.04 112.91 88.37L107.33 90.66L106.63 95.11C106.63 95.11 103.28 98 103.03 97.86C102.79 97.72 98.3396 97.78 98.3396 97.78L95.3296 95.65L64.7396 108.58C59.1296 110.95 56.4996 117.43 58.8696 123.04L65.9396 139.78C67.4596 143.38 70.7796 145.91 74.6596 146.42L94.1596 149.01C98.0396 149.52 101.35 152.05 102.88 155.65L103.56 157.26L104.24 158.87C105.76 162.47 105.26 166.61 102.93 169.75L91.1896 185.54C88.8596 188.68 88.3596 192.82 89.8796 196.42L96.9496 213.16C99.3196 218.77 105.8 221.4 111.41 219.03L142.51 205.89L157.99 199.35C163.6 196.98 166.23 190.5 163.86 184.89L163.87 184.88Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M99.8201 100.65C99.5001 100.65 99.1901 100.57 98.9001 100.43C98.4201 100.18 87.1601 94.23 86.9201 84.62C86.7501 77.94 91.9201 71.49 102.29 65.43C102.96 65.04 108.88 61.76 113.5 63.1L112.38 66.94C109.83 66.2 105.59 68.15 104.3 68.89C95.4401 74.07 90.8101 79.47 90.9301 84.51C91.0801 90.72 98.1201 95.34 100.19 96.56C101.31 96.34 102.33 96.04 103.22 95.65C104.26 95.21 104.99 94.32 105.24 93.21C105.5 92.03 105.17 90.78 104.35 89.87C102 87.25 101.12 84.77 101.74 82.5C102.37 80.17 104.52 78.41 108.12 77.26C124.63 71.98 132.28 77.67 135.78 83.38C137.46 86.11 137.16 88.44 136.61 89.91C134.73 94.96 127.35 97.44 126.52 97.7L125.31 93.89C126.95 93.36 131.85 91.25 132.87 88.51C133.09 87.91 133.28 86.95 132.38 85.48C128.37 78.95 120.62 77.47 109.34 81.08C107.21 81.76 105.84 82.67 105.6 83.56C105.37 84.4 106 85.73 107.33 87.21C109.01 89.08 109.69 91.65 109.15 94.09C108.62 96.47 107.04 98.39 104.8 99.35C103.42 99.94 101.86 100.38 100.15 100.65C100.05 100.67 99.9401 100.67 99.8401 100.67L99.8201 100.65Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M131.75 110.26L130.64 106.42C139.61 103.84 145.24 99.87 147.35 94.61C149.95 88.14 146.28 81.68 146.24 81.61C145.94 81.09 145.89 80.47 146.09 79.91C146.3 79.35 146.74 78.91 147.31 78.71L181.47 66.84L182.78 70.62L150.71 81.76C151.89 84.71 153.38 90.26 151.07 96.05C148.49 102.53 141.98 107.31 131.74 110.25L131.75 110.26Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M98.0297 68.82C93.2897 68.82 87.6397 68.27 83.9597 66.75C81.5897 65.78 80.0797 64.43 79.4897 62.75C78.6197 60.3 79.0397 57.78 80.6797 55.66C83.7897 51.62 90.8397 49.56 99.0697 50.27L98.7297 54.26C90.4797 53.55 85.5597 55.89 83.8497 58.11C83.0397 59.16 82.8497 60.24 83.2597 61.42C83.4297 61.89 84.0797 62.42 85.0597 62.88C90.5097 65.43 102.93 64.94 104.63 64.32L106.32 67.94C105.25 68.46 101.95 68.83 98.0397 68.83L98.0297 68.82Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M118.74 56.9C117.97 56.86 99.72 55.77 91.19 51.83C89.37 50.99 88.24 49.22 88.26 47.21C88.28 45.21 89.42 43.47 91.24 42.66C95.2 40.91 102.5 39.23 114.76 41.22C125.01 42.88 134.84 37.94 148.47 31.1C154.69 27.98 161.73 24.44 169.9 21.01L171.45 24.7C163.41 28.08 156.43 31.59 150.27 34.68C135.98 41.86 125.65 47.05 114.13 45.18C102.84 43.35 96.34 44.79 92.87 46.33C92.33 46.57 92.27 47.05 92.27 47.25C92.27 47.45 92.32 47.96 92.88 48.21C100.72 51.83 118.8 52.91 118.98 52.92L118.75 56.91L118.74 56.9Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M100.6 181.84L95.2902 189.35C94.1102 191.02 93.8702 193.18 94.6502 195.07L101.73 212.21C102.97 215.22 106.43 216.63 109.42 215.37L155.92 195.69C158.42 194.63 159.15 191.39 157.29 189.41C153.7 185.6 146.12 180.98 130.92 182.75C116.21 184.46 109.17 182.54 105.87 180.7C104.06 179.69 101.78 180.14 100.58 181.84H100.6Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              accessibilityRole="header"
                              allowFontScaling={true}
                              dynamicTypeRamp="title2"
                              maxFontSizeMultiplier={1.5}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillio",
                                    "fontSize": 22,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 33,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              We've taken over your request.
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={true}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.5}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillio",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              We've taken over your request and we will delete your account within 30 days. You can re-subscribe to the IO App at any time with SPID or CIE.
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Close"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "auto",
                                      "flexShrink": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderCurve": "continuous",
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "overflow": "hidden",
                                          "textAlignVertical": "center",
                                        },
                                        false,
                                        {
                                          "backgroundColor": undefined,
                                        },
                                        {
                                          "paddingHorizontal": 24,
                                        },
                                        {
                                          "backgroundColor": "#0B3EE3",
                                          "borderColor": "#FFFFFF",
                                          "borderRadius": 8,
                                          "borderWidth": 0,
                                          "height": 48,
                                        },
                                        {},
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          {
                                            "columnGap": 8,
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={true}
                                        ellipsizeMode="tail"
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.5}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#0E0F13",
                                              "fontFamily": "Titillio",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": undefined,
                                            },
                                            [
                                              {
                                                "textAlign": "auto",
                                              },
                                              {
                                                "color": "#FFFFFF",
                                              },
                                              {
                                                "color": undefined,
                                              },
                                            ],
                                          ]
                                        }
                                      >
                                        Close
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
