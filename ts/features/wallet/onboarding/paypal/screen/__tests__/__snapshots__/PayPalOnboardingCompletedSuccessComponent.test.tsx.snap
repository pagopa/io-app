// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PayPalOnboardingCompletedSuccessComponent should match the snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  N/A
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSModalScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                            "padding": 24,
                          }
                        }
                        testID="InfoScreenComponent"
                      >
                        <Image
                          resizeMode="contain"
                          source={
                            Object {
                              "testUri": "../../../img/pictograms/payment-completed.png",
                            }
                          }
                          style={
                            Object {
                              "height": 102,
                              "width": 102,
                            }
                          }
                          testID="rasterImage"
                        />
                        <View
                          style={
                            Object {
                              "height": 24,
                            }
                          }
                        />
                        <Text
                          accessible={true}
                          color="bluegreyDark"
                          defaultColor="bluegreyDark"
                          defaultWeight="Bold"
                          font="TitilliumWeb"
                          fontStyle={
                            Object {
                              "fontSize": 20,
                              "lineHeight": 24,
                            }
                          }
                          style={
                            Array [
                              Object {
                                "textAlign": "center",
                              },
                              Object {
                                "fontSize": 20,
                                "lineHeight": 24,
                              },
                              Object {
                                "color": "#17324D",
                                "fontFamily": "Titillium Web",
                                "fontStyle": "normal",
                                "fontWeight": "700",
                              },
                            ]
                          }
                          testID="infoScreenTitle"
                          weight="Bold"
                        >
                          Fatto!
                        </Text>
                        <View
                          style={
                            Object {
                              "height": 16,
                            }
                          }
                        />
                        <Text
                          color="bluegrey"
                          defaultColor="bluegrey"
                          defaultWeight="Regular"
                          font="TitilliumWeb"
                          fontStyle={
                            Object {
                              "fontSize": 16,
                              "lineHeight": 24,
                            }
                          }
                          style={
                            Array [
                              Object {
                                "textAlign": "center",
                              },
                              Object {
                                "fontSize": 16,
                                "lineHeight": 24,
                              },
                              Object {
                                "color": "#475A6D",
                                "fontFamily": "Titillium Web",
                                "fontStyle": "normal",
                                "fontWeight": "400",
                              },
                            ]
                          }
                          testID="infoScreenBody"
                          weight="Regular"
                        >
                          Ora puoi continuare con il pagamento.
                        </Text>
                      </View>
                      <View
                        pointerEvents="box-none"
                        style={
                          Object {
                            "marginTop": -50,
                            "overflow": "hidden",
                            "paddingTop": 50,
                          }
                        }
                        testID="FooterWithButtons"
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#FFFFFF",
                              "elevation": 20,
                              "paddingBottom": 16,
                              "paddingLeft": 24,
                              "paddingRight": 24,
                              "paddingTop": 16,
                              "shadowColor": "#0E0F13",
                              "shadowOffset": Object {
                                "height": 50,
                                "width": 0,
                              },
                              "shadowOpacity": 0.5,
                              "shadowRadius": 37,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "flexDirection": "row",
                              }
                            }
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": undefined,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              forwardedRef={[Function]}
                              hitSlop={
                                Object {
                                  "bottom": 4,
                                  "top": 4,
                                }
                              }
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignContent": "center",
                                  "alignItems": "center",
                                  "alignSelf": "flex-start",
                                  "backgroundColor": "#007aff",
                                  "borderBottomWidth": null,
                                  "borderColor": "#007aff",
                                  "borderLeftWidth": null,
                                  "borderRadius": 5,
                                  "borderRightWidth": null,
                                  "borderTopWidth": null,
                                  "borderWidth": undefined,
                                  "elevation": 2,
                                  "flex": 1,
                                  "flexDirection": "row",
                                  "height": 45,
                                  "justifyContent": "center",
                                  "opacity": 1,
                                  "paddingBottom": 6,
                                  "paddingTop": 6,
                                  "shadowColor": undefined,
                                  "shadowOffset": undefined,
                                  "shadowOpacity": undefined,
                                  "shadowRadius": undefined,
                                }
                              }
                              testID="primaryButtonId"
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#fff",
                                      "fontFamily": "System",
                                      "fontSize": 16.5,
                                      "marginLeft": 0,
                                      "marginRight": 0,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                    },
                                    undefined,
                                    Object {
                                      "color": "#FFFFFF",
                                    },
                                  ]
                                }
                                uppercase={false}
                              >
                                Continua
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSModalScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
