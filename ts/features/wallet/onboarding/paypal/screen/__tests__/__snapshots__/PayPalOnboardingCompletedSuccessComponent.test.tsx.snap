// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PayPalOnboardingCompletedSuccessComponent should match the snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                N/A
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "#FFFFFF",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          pointerEvents="box-none"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          />
                          <View
                            accessibilityElementsHidden={false}
                            closing={false}
                            gestureVelocityImpact={0.3}
                            importantForAccessibility="auto"
                            onClose={[Function]}
                            onGestureBegin={[Function]}
                            onGestureCanceled={[Function]}
                            onGestureEnd={[Function]}
                            onOpen={[Function]}
                            onTransition={[Function]}
                            pointerEvents="box-none"
                            style={
                              Array [
                                Object {
                                  "overflow": undefined,
                                },
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ]
                            }
                            transitionSpec={
                              Object {
                                "close": Object {
                                  "animation": "spring",
                                  "config": Object {
                                    "damping": 500,
                                    "mass": 3,
                                    "overshootClamping": true,
                                    "restDisplacementThreshold": 10,
                                    "restSpeedThreshold": 10,
                                    "stiffness": 1000,
                                  },
                                },
                                "open": Object {
                                  "animation": "spring",
                                  "config": Object {
                                    "damping": 500,
                                    "mass": 3,
                                    "overshootClamping": true,
                                    "restDisplacementThreshold": 10,
                                    "restSpeedThreshold": 10,
                                    "stiffness": 1000,
                                  },
                                },
                              }
                            }
                          >
                            <View
                              needsOffscreenAlphaCompositing={false}
                              pointerEvents="box-none"
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                collapsable={false}
                                forwardedRef={[Function]}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                style={
                                  Object {
                                    "flex": 1,
                                    "transform": Array [
                                      Object {
                                        "translateX": 0,
                                      },
                                      Object {
                                        "translateX": 0,
                                      },
                                    ],
                                  }
                                }
                              >
                                <View
                                  pointerEvents="none"
                                  style={
                                    Object {
                                      "backgroundColor": "#FFFFFF",
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "shadowColor": "#000",
                                      "shadowOffset": Object {
                                        "height": 1,
                                        "width": -1,
                                      },
                                      "shadowOpacity": 0.3,
                                      "shadowRadius": 5,
                                      "top": 0,
                                      "width": 3,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      },
                                      Array [
                                        Object {
                                          "backgroundColor": "#FFFFFF",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "column-reverse",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {},
                                            Object {
                                              "alignItems": "center",
                                              "flex": 1,
                                              "justifyContent": "center",
                                              "padding": 24,
                                            },
                                          ]
                                        }
                                        testID="InfoScreenComponent"
                                      >
                                        <Image
                                          resizeMode="contain"
                                          source={
                                            Object {
                                              "testUri": "../../../img/pictograms/payment-completed.png",
                                            }
                                          }
                                          style={
                                            Object {
                                              "height": 102,
                                              "width": 102,
                                            }
                                          }
                                          testID="rasterImage"
                                        />
                                        <View
                                          large={true}
                                          spacer={true}
                                          style={Object {}}
                                        />
                                        <Text
                                          accessible={true}
                                          color="bluegreyDark"
                                          defaultColor="bluegreyDark"
                                          defaultWeight="Bold"
                                          font="TitilliumWeb"
                                          fontStyle={
                                            Object {
                                              "fontSize": 20,
                                            }
                                          }
                                          style={
                                            Array [
                                              Object {
                                                "textAlign": "center",
                                              },
                                              Object {
                                                "fontSize": 20,
                                              },
                                              Object {
                                                "color": "#17324D",
                                                "fontFamily": "Titillium Web",
                                                "fontStyle": "normal",
                                                "fontWeight": "700",
                                              },
                                            ]
                                          }
                                          testID="infoScreenTitle"
                                          weight="Bold"
                                        >
                                          Fatto!
                                        </Text>
                                        <View
                                          spacer={true}
                                          style={Object {}}
                                        />
                                        <Text
                                          color="bluegreyDark"
                                          defaultColor="bluegreyDark"
                                          defaultWeight="Regular"
                                          font="TitilliumWeb"
                                          fontStyle={
                                            Object {
                                              "fontSize": 16,
                                            }
                                          }
                                          style={
                                            Array [
                                              Object {
                                                "textAlign": "center",
                                              },
                                              Object {
                                                "fontSize": 16,
                                              },
                                              Object {
                                                "color": "#17324D",
                                                "fontFamily": "Titillium Web",
                                                "fontStyle": "normal",
                                                "fontWeight": "400",
                                              },
                                            ]
                                          }
                                          testID="infoScreenBody"
                                          weight="Regular"
                                        >
                                          Ora puoi continuare con il pagamento.
                                        </Text>
                                      </View>
                                      <View
                                        pointerEvents="box-none"
                                        style={
                                          Array [
                                            Object {},
                                            Object {
                                              "marginTop": -50,
                                              "overflow": "hidden",
                                              "paddingTop": 50,
                                            },
                                          ]
                                        }
                                        testID="FooterWithButtons"
                                      >
                                        <View
                                          style={
                                            Array [
                                              Object {},
                                              Object {
                                                "backgroundColor": "#FFFFFF",
                                                "elevation": 20,
                                                "paddingBottom": 16,
                                                "paddingLeft": 24,
                                                "paddingRight": 24,
                                                "paddingTop": 16,
                                                "shadowColor": "#000000",
                                                "shadowOffset": Object {
                                                  "height": 50,
                                                  "width": 0,
                                                },
                                                "shadowOpacity": 0.5,
                                                "shadowRadius": 37,
                                              },
                                            ]
                                          }
                                        >
                                          <View
                                            style={
                                              Array [
                                                Object {},
                                                Object {
                                                  "flexDirection": "row",
                                                },
                                              ]
                                            }
                                          >
                                            <View
                                              accessibilityRole="button"
                                              accessibilityState={
                                                Object {
                                                  "disabled": undefined,
                                                }
                                              }
                                              accessible={true}
                                              focusable={true}
                                              forwardedRef={[Function]}
                                              hitSlop={
                                                Object {
                                                  "bottom": 4,
                                                  "top": 4,
                                                }
                                              }
                                              onClick={[Function]}
                                              onResponderGrant={[Function]}
                                              onResponderMove={[Function]}
                                              onResponderRelease={[Function]}
                                              onResponderTerminate={[Function]}
                                              onResponderTerminationRequest={[Function]}
                                              onStartShouldSetResponder={[Function]}
                                              style={
                                                Object {
                                                  "alignContent": "center",
                                                  "alignItems": "center",
                                                  "alignSelf": "flex-start",
                                                  "backgroundColor": "#007aff",
                                                  "borderBottomWidth": null,
                                                  "borderColor": "#007aff",
                                                  "borderLeftWidth": null,
                                                  "borderRadius": 5,
                                                  "borderRightWidth": null,
                                                  "borderTopWidth": null,
                                                  "borderWidth": undefined,
                                                  "elevation": 2,
                                                  "flex": 1,
                                                  "flexDirection": "row",
                                                  "height": 45,
                                                  "justifyContent": "center",
                                                  "opacity": 1,
                                                  "paddingBottom": 6,
                                                  "paddingTop": 6,
                                                  "shadowColor": undefined,
                                                  "shadowOffset": undefined,
                                                  "shadowOpacity": undefined,
                                                  "shadowRadius": undefined,
                                                }
                                              }
                                              testID="primaryButtonId"
                                            >
                                              <Text
                                                style={
                                                  Array [
                                                    Object {
                                                      "backgroundColor": "transparent",
                                                      "color": "#fff",
                                                      "fontFamily": "System",
                                                      "fontSize": 16.5,
                                                      "marginLeft": 0,
                                                      "marginRight": 0,
                                                      "paddingLeft": 16,
                                                      "paddingRight": 16,
                                                    },
                                                    undefined,
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                Continua
                                              </Text>
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
