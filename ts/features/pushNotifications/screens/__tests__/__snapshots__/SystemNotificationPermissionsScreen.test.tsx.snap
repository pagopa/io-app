// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SystemNotificationPermissionsScreen Should match snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  SYSTEM_NOTIFICATION_PERMISSIONS
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        centerContent={true}
                        collapsable={false}
                        contentContainerStyle={
                          [
                            {
                              "paddingBottom": 56,
                              "paddingHorizontal": 24,
                            },
                            {
                              "alignContent": "center",
                              "alignItems": "stretch",
                              "flexGrow": 1,
                              "justifyContent": "center",
                            },
                          ]
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          [
                            0,
                            0,
                          ]
                        }
                        style={{}}
                      >
                        <View>
                          <View
                            style={
                              {
                                "alignItems": "center",
                                "display": "flex",
                                "flexDirection": "column",
                                "rowGap": 16,
                              }
                            }
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={180}
                              bbWidth={180}
                              color="#00C5CA"
                              focusable={false}
                              height={180}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "flex": 0,
                                    "height": 180,
                                    "width": 180,
                                  },
                                ]
                              }
                              tintColor="#00C5CA"
                              vbHeight={240}
                              vbWidth={240}
                              width={180}
                            >
                              <RNSVGGroup
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                              >
                                <RNSVGPath
                                  d="M60.7708 115.18C46.5408 115.18 33.0708 106.61 27.5508 92.59C20.3408 74.29 29.3608 53.54 47.6608 46.33C63.6308 40.04 81.8308 46.01 90.9308 60.53C91.3708 61.23 91.1608 62.16 90.4608 62.6C89.7608 63.04 88.8308 62.83 88.3908 62.13C80.0508 48.84 63.3908 43.37 48.7608 49.13C32.0008 55.73 23.7408 74.74 30.3408 91.5C36.9408 108.26 55.9408 116.52 72.7108 109.92C73.4808 109.62 74.3508 109.99 74.6608 110.77C74.9608 111.54 74.5808 112.41 73.8108 112.72C69.5308 114.41 65.1208 115.2 60.7808 115.2L60.7708 115.18Z"
                                  fill={
                                    {
                                      "payload": 4278240714,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M90.301 63.72C90.301 63.72 90.201 63.72 90.151 63.72L60.521 60.74C59.701 60.66 59.101 59.92 59.181 59.1C59.261 58.28 60.021 57.68 60.821 57.76L88.901 60.59L90.551 33.43C90.601 32.6 91.301 31.98 92.141 32.02C92.971 32.07 93.601 32.78 93.551 33.61L91.811 62.33C91.791 62.74 91.601 63.12 91.281 63.38C91.011 63.61 90.661 63.74 90.311 63.74L90.301 63.72Z"
                                  fill={
                                    {
                                      "payload": 4278240714,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M144.48 143.66L145.64 138.25L147.68 135.65L151.01 134.82C151.17 134.36 151.32 133.9 151.45 133.43L148.34 133.9L141.54 132.94H132.3C132.3 132.94 128.95 132.01 126.95 131.19C124.95 130.37 125.17 129.84 124.59 129.18C124.02 128.52 123.16 128.36 123.16 128.36L123.18 125.35L122.32 123.56L125.57 118.82L127.74 117.13L130.58 116.08L134.61 115.38L148.33 113.9L151.48 113.79C147.25 99.26 133.85 88.64 117.96 88.64H42.91C23.63 88.65 8 104.28 8 123.57C8 142.85 23.63 158.48 42.91 158.48H117.96C128.82 158.48 138.52 153.52 144.92 145.75L144.47 143.67L144.48 143.66Z"
                                  fill={
                                    {
                                      "payload": 4289392367,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M231.34 191.26L227.34 191.23C227.49 168.48 212.92 143.71 204.22 130.97C200.55 125.59 195.48 121.58 189.57 119.35C167.04 110.86 140.91 114.45 130.72 116.38C127.04 117.08 124.46 120.29 124.71 123.85C124.79 125.04 125.05 128.66 132.45 129.86C147.7 132.32 161.21 129.55 161.35 129.52L162.17 133.44C161.59 133.56 147.79 136.39 131.81 133.82C123.1 132.42 120.97 127.78 120.72 124.14C120.33 118.56 124.31 113.53 129.98 112.46C140.5 110.46 167.51 106.77 190.98 115.61C197.67 118.13 203.39 122.66 207.52 128.72C216.48 141.85 231.49 167.43 231.34 191.26Z"
                                  fill={
                                    {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M166.72 155.74C166.47 155.74 166.22 155.73 165.98 155.7C163.12 155.42 161.16 153.51 160.62 150.47C159.87 146.23 161.92 140.38 166.73 133.11C170.17 127.9 173.76 123.87 173.91 123.7L176.89 126.37C173.06 130.65 163.39 143.21 164.56 149.78C164.84 151.37 165.6 151.66 166.37 151.73C170.39 152.13 178.91 146.07 181.24 140.11L184.96 141.57C182.19 148.64 172.91 155.75 166.71 155.75L166.72 155.74Z"
                                  fill={
                                    {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M187.15 156.52C186.39 152.57 180.65 149.36 178.5 148.45L180.05 144.76C180.45 144.93 189.76 148.9 191.08 155.76L187.15 156.51V156.52Z"
                                  fill={
                                    {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M152.98 153.98C149.78 153.98 146.61 153.2 144.74 150.69C142.33 147.45 141.52 142.51 142.74 138.38C143.73 135.03 145.91 132.57 148.87 131.47C149.61 131.19 150.4 131 151.22 130.9L151.72 134.87C151.2 134.93 150.71 135.05 150.26 135.22C148.01 136.06 147.01 138.02 146.57 139.51C145.71 142.44 146.27 146.05 147.94 148.29C150.36 151.54 159.05 149.28 161.9 148.23L163.28 151.98C162.44 152.29 157.67 153.97 152.97 153.97L152.98 153.98Z"
                                  fill={
                                    {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M166.589 168.62C164.319 168.62 162.129 168.11 160.039 167.1C151.859 163.13 148.359 152.75 148.209 152.31L152.009 151.06C152.039 151.15 155.149 160.29 161.799 163.51C164.709 164.92 167.829 164.99 171.309 163.72C174.809 162.45 176.879 160.93 176.989 159.55C177.129 157.65 173.839 154.93 171.569 153.7L173.469 150.18C174.279 150.62 181.359 154.6 180.979 159.84C180.749 162.99 177.959 165.56 172.679 167.48C170.599 168.24 168.559 168.62 166.589 168.62Z"
                                  fill={
                                    {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M187.651 208.13C174.711 190.58 172.001 166.06 171.891 165.03L175.871 164.61C175.901 164.85 178.581 189.09 190.871 205.76L187.651 208.13Z"
                                  fill={
                                    {
                                      "payload": 4278927075,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                                <RNSVGPath
                                  d="M43.1305 149.97C57.7108 149.97 69.5305 138.15 69.5305 123.57C69.5305 108.99 57.7108 97.17 43.1305 97.17C28.5502 97.17 16.7305 108.99 16.7305 123.57C16.7305 138.15 28.5502 149.97 43.1305 149.97Z"
                                  fill={
                                    {
                                      "payload": 4278240714,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                            <View
                              style={
                                {
                                  "paddingHorizontal": 24,
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "display": "flex",
                                    "flexDirection": "column",
                                    "rowGap": 8,
                                  }
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  color="bluegreyDark"
                                  defaultColor="bluegreyDark"
                                  defaultWeight="Semibold"
                                  dynamicTypeRamp="title2"
                                  font="TitilliumSansPro"
                                  fontStyle={
                                    {
                                      "fontSize": 22,
                                      "lineHeight": 33,
                                    }
                                  }
                                  maxFontSizeMultiplier={1.25}
                                  style={
                                    [
                                      {
                                        "textAlign": "center",
                                      },
                                      {
                                        "fontSize": 22,
                                        "lineHeight": 33,
                                      },
                                      {
                                        "color": "#17324D",
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontStyle": "normal",
                                        "fontWeight": "600",
                                      },
                                    ]
                                  }
                                  weight="Semibold"
                                >
                                  Don't miss any important messages!
                                </Text>
                                <Text
                                  allowFontScaling={false}
                                  color="bluegrey"
                                  defaultColor="bluegrey"
                                  defaultWeight="Regular"
                                  dynamicTypeRamp="body"
                                  font="TitilliumSansPro"
                                  fontStyle={
                                    {
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                    }
                                  }
                                  maxFontSizeMultiplier={1.25}
                                  style={
                                    [
                                      {
                                        "textAlign": "center",
                                      },
                                      {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      },
                                      {
                                        "color": "#475A6D",
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontStyle": "normal",
                                        "fontWeight": "400",
                                      },
                                    ]
                                  }
                                  weight="Regular"
                                >
                                  Turn on push notifications to know immediately when you get a new message.
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                      <View
                        pointerEvents="box-none"
                        style={
                          [
                            {
                              "bottom": 0,
                              "justifyContent": "flex-end",
                              "position": "absolute",
                              "width": "100%",
                            },
                            {
                              "height": 120,
                              "paddingBottom": 24,
                            },
                          ]
                        }
                      >
                        <View
                          pointerEvents="none"
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              false,
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "opacity": undefined,
                                },
                                false,
                              ]
                            }
                          >
                            <BVLinearGradient
                              colors={
                                [
                                  16777215,
                                  218103807,
                                  419430399,
                                  620756991,
                                  822083583,
                                  1040187391,
                                  1241513983,
                                  1442840575,
                                  1644167167,
                                  1845493759,
                                  2046820351,
                                  2264924159,
                                  2466250751,
                                  2667577343,
                                  2868903935,
                                  3070230527,
                                  3271557119,
                                  3489660927,
                                  3690987519,
                                  3892314111,
                                  4093640703,
                                  4294967295,
                                ]
                              }
                              endPoint={
                                {
                                  "x": 0.5,
                                  "y": 1,
                                }
                              }
                              locations={
                                [
                                  0,
                                  0.047619047619047616,
                                  0.09523809523809523,
                                  0.14285714285714285,
                                  0.19047619047619047,
                                  0.23809523809523808,
                                  0.2857142857142857,
                                  0.3333333333333333,
                                  0.38095238095238093,
                                  0.42857142857142855,
                                  0.47619047619047616,
                                  0.5238095238095237,
                                  0.5714285714285714,
                                  0.6190476190476191,
                                  0.6666666666666666,
                                  0.7142857142857142,
                                  0.7619047619047619,
                                  0.8095238095238095,
                                  0.8571428571428571,
                                  0.9047619047619047,
                                  0.9523809523809523,
                                  1,
                                ]
                              }
                              startPoint={
                                {
                                  "x": 0.5,
                                  "y": 0,
                                }
                              }
                              style={
                                {
                                  "height": 99.6,
                                }
                              }
                            />
                          </View>
                          <View
                            style={
                              {
                                "backgroundColor": "#FFFFFF",
                                "bottom": 0,
                                "height": 20.4,
                              }
                            }
                          />
                        </View>
                        <View
                          onLayout={[Function]}
                          pointerEvents="box-none"
                          style={
                            {
                              "flexShrink": 0,
                              "paddingHorizontal": 24,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            accessibilityLabel="Turn on notificatons"
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": false,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": undefined,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={{}}
                            testID="notifications-modal-open-system-settings-button"
                          >
                            <View
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "borderRadius": 4,
                                    "elevation": 0,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "paddingHorizontal": 16,
                                    "textAlignVertical": "center",
                                  },
                                  {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  {
                                    "height": 40,
                                  },
                                  {
                                    "backgroundColor": "#0073E6",
                                  },
                                  {
                                    "backgroundColor": undefined,
                                    "transform": [
                                      {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                    },
                                    false,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  accessible={false}
                                  allowFontScaling={false}
                                  color="white"
                                  defaultColor="white"
                                  defaultWeight="Bold"
                                  ellipsizeMode="tail"
                                  font="TitilliumSansPro"
                                  fontStyle={
                                    {
                                      "fontSize": 16,
                                    }
                                  }
                                  importantForAccessibility="no-hide-descendants"
                                  maxFontSizeMultiplier={1.25}
                                  numberOfLines={1}
                                  style={
                                    [
                                      {
                                        "alignSelf": "center",
                                      },
                                      {
                                        "fontSize": 16,
                                      },
                                      {
                                        "color": "#FFFFFF",
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontStyle": "normal",
                                        "fontWeight": "700",
                                      },
                                    ]
                                  }
                                  weight="Bold"
                                >
                                  Turn on notificatons
                                </Text>
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignSelf": "center",
                                "marginBottom": 0,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "height": 16,
                                }
                              }
                            />
                            <View
                              accessibilityLabel="Not now"
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": false,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessibilityValue={
                                {
                                  "max": undefined,
                                  "min": undefined,
                                  "now": undefined,
                                  "text": undefined,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={
                                {
                                  "bottom": 14,
                                  "left": 24,
                                  "right": 24,
                                  "top": 14,
                                }
                              }
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              onTouchEnd={[Function]}
                              style={
                                {
                                  "alignSelf": "flex-start",
                                }
                              }
                              testID="notifications-modal-not-now-button"
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "elevation": 0,
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                      "textAlignVertical": "center",
                                    },
                                    false,
                                    {},
                                    {
                                      "transform": [
                                        {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  accessible={false}
                                  allowFontScaling={false}
                                  ellipsizeMode="tail"
                                  importantForAccessibility="no-hide-descendants"
                                  maxFontSizeMultiplier={1.3}
                                  numberOfLines={1}
                                  style={
                                    [
                                      {
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "700",
                                      },
                                      {
                                        "color": "#0073E6",
                                      },
                                      {
                                        "color": undefined,
                                      },
                                    ]
                                  }
                                >
                                  Not now
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
