// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationsPreferencesPreview should match snapshot, preview off, reminder off 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ONBOARDING_NOTIFICATIONS_PREFERENCES
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={4}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          {
                            "justifyContent": "center",
                            "minHeight": 200,
                          }
                        }
                      >
                        <Image
                          resizeMode="contain"
                          source={
                            {
                              "testUri": "../../../img/onboarding/notification_white.png",
                            }
                          }
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              {
                                "height": undefined,
                                "width": undefined,
                              },
                              undefined,
                            ]
                          }
                        />
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderCurve": "continuous",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "marginVertical": 4,
                                "minHeight": 90,
                                "paddingHorizontal": 24,
                                "paddingVertical": 8,
                              },
                              {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": "#E8EBF1",
                              },
                            ]
                          }
                        >
                          <RNSVGSvgView
                            accessibilityElementsHidden={true}
                            accessibilityLabel=""
                            accessible={false}
                            align="xMidYMid"
                            bbHeight={24}
                            bbWidth={24}
                            focusable={false}
                            height={24}
                            importantForAccessibility="no-hide-descendants"
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {
                                  "color": "#475A6D",
                                },
                                {
                                  "flex": 0,
                                  "height": 24,
                                  "width": 24,
                                },
                              ]
                            }
                            tintColor="#475A6D"
                            vbHeight={24}
                            vbWidth={24}
                            width={24}
                          >
                            <RNSVGGroup
                              fill={
                                {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGRect
                                fill={
                                  {
                                    "payload": 4278927075,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                                rx="4"
                                width={24}
                                x={0}
                                y={0}
                              />
                              <RNSVGMask
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                maskContentUnits={1}
                                maskUnits={0}
                                name="a"
                                width={24}
                                x="6"
                                y="7"
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M7.25 7c.69036 0 1.25.55964 1.25 1.25S7.94036 9.5 7.25 9.5 6 8.94036 6 8.25 6.55964 7 7.25 7Zm10.5 6c0 2.2091-1.7909 4-3.8095 4-2.3996 0-4.1905-1.7909-4.1905-4 0-2.2091 1.7909-4 4.1905-4 2.0186 0 3.8095 1.7909 3.8095 4Zm-9.5-1.25c0-.5523-.44772-1-1-1s-1 .4477-1 1V16c0 .5523.44772 1 1 1s1-.4477 1-1v-4.25Zm6.4826.8302h.5326v-.524h-.5287v-.6337h-.5785v2.1082c0 .3331.0459.5606.1417.6824.092.1259.2682.1869.5287.1869.0996 0 .249-.0244.4406-.0691l-.0268-.4874-.3295.0081c-.0575 0-.0996-.0122-.1264-.0406-.0268-.0285-.0422-.061-.046-.0975-.0038-.0406-.0077-.1016-.0077-.195v-.9383Zm-1.7431-.52v2.287h.5785v-2.287h-.5785Zm-.8683-.0568c.1011 0 .1867.034.2528.1021.0661.0681.0972.1514.0972.2536 0 .1021-.0311.1816-.0972.2497-.0623.0605-.1439.0946-.2489.0946-.1011 0-.1867-.0341-.2528-.1022-.0661-.0681-.1011-.1513-.1011-.2497 0-.0984.035-.1816.0972-.2497.0661-.0682.1517-.0984.2528-.0984Z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGMask>
                              <RNSVGGroup
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                mask="a"
                              >
                                <RNSVGPath
                                  d="M-13-13h50v50h-50z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                          <View
                            style={
                              {
                                "width": 16,
                              }
                            }
                          />
                          <View
                            style={
                              {
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            >
                              You have a new message
                            </Text>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="footnote"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 14,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 21,
                                  },
                                ]
                              }
                            >
                              Open the app to read the content
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesPreview should match snapshot, preview off, reminder on 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ONBOARDING_NOTIFICATIONS_PREFERENCES
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={3}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          {
                            "justifyContent": "center",
                            "minHeight": 200,
                          }
                        }
                      >
                        <Image
                          resizeMode="contain"
                          source={
                            {
                              "testUri": "../../../img/onboarding/notification_white.png",
                            }
                          }
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              {
                                "height": undefined,
                                "width": undefined,
                              },
                              undefined,
                            ]
                          }
                        />
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderCurve": "continuous",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "marginVertical": 4,
                                "minHeight": 90,
                                "paddingHorizontal": 24,
                                "paddingVertical": 8,
                              },
                              {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": "#E8EBF1",
                              },
                            ]
                          }
                        >
                          <RNSVGSvgView
                            accessibilityElementsHidden={true}
                            accessibilityLabel=""
                            accessible={false}
                            align="xMidYMid"
                            bbHeight={24}
                            bbWidth={24}
                            focusable={false}
                            height={24}
                            importantForAccessibility="no-hide-descendants"
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {
                                  "color": "#475A6D",
                                },
                                {
                                  "flex": 0,
                                  "height": 24,
                                  "width": 24,
                                },
                              ]
                            }
                            tintColor="#475A6D"
                            vbHeight={24}
                            vbWidth={24}
                            width={24}
                          >
                            <RNSVGGroup
                              fill={
                                {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGRect
                                fill={
                                  {
                                    "payload": 4278927075,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                                rx="4"
                                width={24}
                                x={0}
                                y={0}
                              />
                              <RNSVGMask
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                maskContentUnits={1}
                                maskUnits={0}
                                name="a"
                                width={24}
                                x="6"
                                y="7"
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M7.25 7c.69036 0 1.25.55964 1.25 1.25S7.94036 9.5 7.25 9.5 6 8.94036 6 8.25 6.55964 7 7.25 7Zm10.5 6c0 2.2091-1.7909 4-3.8095 4-2.3996 0-4.1905-1.7909-4.1905-4 0-2.2091 1.7909-4 4.1905-4 2.0186 0 3.8095 1.7909 3.8095 4Zm-9.5-1.25c0-.5523-.44772-1-1-1s-1 .4477-1 1V16c0 .5523.44772 1 1 1s1-.4477 1-1v-4.25Zm6.4826.8302h.5326v-.524h-.5287v-.6337h-.5785v2.1082c0 .3331.0459.5606.1417.6824.092.1259.2682.1869.5287.1869.0996 0 .249-.0244.4406-.0691l-.0268-.4874-.3295.0081c-.0575 0-.0996-.0122-.1264-.0406-.0268-.0285-.0422-.061-.046-.0975-.0038-.0406-.0077-.1016-.0077-.195v-.9383Zm-1.7431-.52v2.287h.5785v-2.287h-.5785Zm-.8683-.0568c.1011 0 .1867.034.2528.1021.0661.0681.0972.1514.0972.2536 0 .1021-.0311.1816-.0972.2497-.0623.0605-.1439.0946-.2489.0946-.1011 0-.1867-.0341-.2528-.1022-.0661-.0681-.1011-.1513-.1011-.2497 0-.0984.035-.1816.0972-.2497.0661-.0682.1517-.0984.2528-.0984Z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGMask>
                              <RNSVGGroup
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                mask="a"
                              >
                                <RNSVGPath
                                  d="M-13-13h50v50h-50z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                          <View
                            style={
                              {
                                "width": 16,
                              }
                            }
                          />
                          <View
                            style={
                              {
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            >
                              You have a notice due tomorrow
                            </Text>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="footnote"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 14,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 21,
                                  },
                                ]
                              }
                            >
                              Log in to pay for it
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesPreview should match snapshot, preview on, reminder off 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ONBOARDING_NOTIFICATIONS_PREFERENCES
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          {
                            "justifyContent": "center",
                            "minHeight": 200,
                          }
                        }
                      >
                        <Image
                          resizeMode="contain"
                          source={
                            {
                              "testUri": "../../../img/onboarding/notification_white.png",
                            }
                          }
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              {
                                "height": undefined,
                                "width": undefined,
                              },
                              undefined,
                            ]
                          }
                        />
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderCurve": "continuous",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "marginVertical": 4,
                                "minHeight": 90,
                                "paddingHorizontal": 24,
                                "paddingVertical": 8,
                              },
                              {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": "#E8EBF1",
                              },
                            ]
                          }
                        >
                          <RNSVGSvgView
                            accessibilityElementsHidden={true}
                            accessibilityLabel=""
                            accessible={false}
                            align="xMidYMid"
                            bbHeight={24}
                            bbWidth={24}
                            focusable={false}
                            height={24}
                            importantForAccessibility="no-hide-descendants"
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {
                                  "color": "#475A6D",
                                },
                                {
                                  "flex": 0,
                                  "height": 24,
                                  "width": 24,
                                },
                              ]
                            }
                            tintColor="#475A6D"
                            vbHeight={24}
                            vbWidth={24}
                            width={24}
                          >
                            <RNSVGGroup
                              fill={
                                {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGRect
                                fill={
                                  {
                                    "payload": 4278927075,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                                rx="4"
                                width={24}
                                x={0}
                                y={0}
                              />
                              <RNSVGMask
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                maskContentUnits={1}
                                maskUnits={0}
                                name="a"
                                width={24}
                                x="6"
                                y="7"
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M7.25 7c.69036 0 1.25.55964 1.25 1.25S7.94036 9.5 7.25 9.5 6 8.94036 6 8.25 6.55964 7 7.25 7Zm10.5 6c0 2.2091-1.7909 4-3.8095 4-2.3996 0-4.1905-1.7909-4.1905-4 0-2.2091 1.7909-4 4.1905-4 2.0186 0 3.8095 1.7909 3.8095 4Zm-9.5-1.25c0-.5523-.44772-1-1-1s-1 .4477-1 1V16c0 .5523.44772 1 1 1s1-.4477 1-1v-4.25Zm6.4826.8302h.5326v-.524h-.5287v-.6337h-.5785v2.1082c0 .3331.0459.5606.1417.6824.092.1259.2682.1869.5287.1869.0996 0 .249-.0244.4406-.0691l-.0268-.4874-.3295.0081c-.0575 0-.0996-.0122-.1264-.0406-.0268-.0285-.0422-.061-.046-.0975-.0038-.0406-.0077-.1016-.0077-.195v-.9383Zm-1.7431-.52v2.287h.5785v-2.287h-.5785Zm-.8683-.0568c.1011 0 .1867.034.2528.1021.0661.0681.0972.1514.0972.2536 0 .1021-.0311.1816-.0972.2497-.0623.0605-.1439.0946-.2489.0946-.1011 0-.1867-.0341-.2528-.1022-.0661-.0681-.1011-.1513-.1011-.2497 0-.0984.035-.1816.0972-.2497.0661-.0682.1517-.0984.2528-.0984Z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGMask>
                              <RNSVGGroup
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                mask="a"
                              >
                                <RNSVGPath
                                  d="M-13-13h50v50h-50z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                          <View
                            style={
                              {
                                "width": 16,
                              }
                            }
                          />
                          <View
                            style={
                              {
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            >
                              Comune di Ipazia
                            </Text>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="footnote"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 14,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 21,
                                  },
                                ]
                              }
                            >
                              Summer camp registration is now open
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesPreview should match snapshot, preview on, reminder on 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ONBOARDING_NOTIFICATIONS_PREFERENCES
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          {
                            "justifyContent": "center",
                            "minHeight": 200,
                          }
                        }
                      >
                        <Image
                          resizeMode="contain"
                          source={
                            {
                              "testUri": "../../../img/onboarding/notification_white.png",
                            }
                          }
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              {
                                "height": undefined,
                                "width": undefined,
                              },
                              undefined,
                            ]
                          }
                        />
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "borderCurve": "continuous",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "marginVertical": 4,
                                "minHeight": 90,
                                "paddingHorizontal": 24,
                                "paddingVertical": 8,
                              },
                              {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": "#E8EBF1",
                              },
                            ]
                          }
                        >
                          <RNSVGSvgView
                            accessibilityElementsHidden={true}
                            accessibilityLabel=""
                            accessible={false}
                            align="xMidYMid"
                            bbHeight={24}
                            bbWidth={24}
                            focusable={false}
                            height={24}
                            importantForAccessibility="no-hide-descendants"
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {
                                  "color": "#475A6D",
                                },
                                {
                                  "flex": 0,
                                  "height": 24,
                                  "width": 24,
                                },
                              ]
                            }
                            tintColor="#475A6D"
                            vbHeight={24}
                            vbWidth={24}
                            width={24}
                          >
                            <RNSVGGroup
                              fill={
                                {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGRect
                                fill={
                                  {
                                    "payload": 4278927075,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                                rx="4"
                                width={24}
                                x={0}
                                y={0}
                              />
                              <RNSVGMask
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                height={24}
                                maskContentUnits={1}
                                maskUnits={0}
                                name="a"
                                width={24}
                                x="6"
                                y="7"
                              >
                                <RNSVGPath
                                  clipRule={0}
                                  d="M7.25 7c.69036 0 1.25.55964 1.25 1.25S7.94036 9.5 7.25 9.5 6 8.94036 6 8.25 6.55964 7 7.25 7Zm10.5 6c0 2.2091-1.7909 4-3.8095 4-2.3996 0-4.1905-1.7909-4.1905-4 0-2.2091 1.7909-4 4.1905-4 2.0186 0 3.8095 1.7909 3.8095 4Zm-9.5-1.25c0-.5523-.44772-1-1-1s-1 .4477-1 1V16c0 .5523.44772 1 1 1s1-.4477 1-1v-4.25Zm6.4826.8302h.5326v-.524h-.5287v-.6337h-.5785v2.1082c0 .3331.0459.5606.1417.6824.092.1259.2682.1869.5287.1869.0996 0 .249-.0244.4406-.0691l-.0268-.4874-.3295.0081c-.0575 0-.0996-.0122-.1264-.0406-.0268-.0285-.0422-.061-.046-.0975-.0038-.0406-.0077-.1016-.0077-.195v-.9383Zm-1.7431-.52v2.287h.5785v-2.287h-.5785Zm-.8683-.0568c.1011 0 .1867.034.2528.1021.0661.0681.0972.1514.0972.2536 0 .1021-.0311.1816-.0972.2497-.0623.0605-.1439.0946-.2489.0946-.1011 0-.1867-.0341-.2528-.1022-.0661-.0681-.1011-.1513-.1011-.2497 0-.0984.035-.1816.0972-.2497.0661-.0682.1517-.0984.2528-.0984Z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  fillRule={0}
                                  propList={
                                    [
                                      "fill",
                                      "fillRule",
                                    ]
                                  }
                                />
                              </RNSVGMask>
                              <RNSVGGroup
                                fill={
                                  {
                                    "payload": 4278190080,
                                    "type": 0,
                                  }
                                }
                                mask="a"
                              >
                                <RNSVGPath
                                  d="M-13-13h50v50h-50z"
                                  fill={
                                    {
                                      "payload": 4294967295,
                                      "type": 0,
                                    }
                                  }
                                  propList={
                                    [
                                      "fill",
                                    ]
                                  }
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                          <View
                            style={
                              {
                                "width": 16,
                              }
                            }
                          />
                          <View
                            style={
                              {
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="headline"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 18,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                ]
                              }
                            >
                              You have a notice due soon
                            </Text>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="footnote"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 14,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 21,
                                  },
                                ]
                              }
                            >
                              Log in to pay the notice issued by ACI
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
