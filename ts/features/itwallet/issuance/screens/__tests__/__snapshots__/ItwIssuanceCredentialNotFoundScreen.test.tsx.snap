// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItwIssuanceCredentialNotFoundScreen it should render the generic error message when route params are invalid 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ITW_ISSUANCE_CREDENTIAL_NOT_FOUND
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "additive",
                            "right": "additive",
                            "top": "additive",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={2}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M7 150.41v15.07c0 5.87 4.76 10.63 10.63 10.63h152.76c5.87 0 10.63-4.76 10.63-10.63v-8.43c0-.39-11.44-17.76-18.33-18.63-6.89-.87-15.91-3.54-15.91-3.54-10.32-3.9-.42-12.65-.42-12.65l2.72-.43c-11.11-.83-12.16-11.46-12.16-11.46l5.18-2.95-1.41-2.87-.67-2.83-.07-2.37 1.38-.98s4.14-1.27 4.79-1.33c.65-.06 6.02.68 6.02.68l7.73.98s11.4 3.27 11.63 3.34c.23.07 9.5 4.71 9.5 4.71V64.63c0-5.87-4.76-10.63-10.63-10.63H17.63C11.76 54 7 58.76 7 64.63V150.41Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M168.31 172.12H18.9201c-4.6 0-8.34-3.74-8.34-8.34V65.41c0-4.59 3.74-8.33 8.34-8.33H169.51c4.6 0 8.34 3.74 8.34 8.34v37.71c0 .75-.61 1.35-1.35 1.35-.74 0-1.35-.61-1.35-1.35V65.41c0-3.1-2.53-5.63-5.63-5.63H18.9201c-3.1 0-5.63 2.53-5.63 5.63v98.37c0 3.1 2.53 5.63 5.63 5.63H168.31c3.1 0 5.63-2.53 5.63-5.63v-16.29c0-.75.61-1.35 1.35-1.35.74 0 1.35.61 1.35 1.35v16.29c0 4.6-3.74 8.34-8.34 8.34h.01Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M229.74 144.18c-14.45-19.53-40.46-50.52-48.71-50.52v-4c12.97 0 47.98 46.8 51.93 52.14l-3.22 2.38ZM165.6 115.05c-18.46-2.42-27.63-6.04-28.84-11.37-.74-3.26 1.84-5.94 3.48-7.01 9.19-5.9 38.25 5.61 41.53 6.94l-1.5 3.71c-11.66-4.73-32.25-10.89-37.85-7.29 0 0-2.06 1.44-1.75 2.77.2.85 2.36 5.25 25.45 8.28l-.52 3.97Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M165.45 128.27c-27.17-5.71-30.83-11.35-31.22-15.1-.52-5.04 5.75-7.95 6.47-8.27l1.62 3.66c-1.42.63-4.29 2.49-4.1 4.2.15 1.37 2.6 6.25 28.07 11.6l-.82 3.91h-.02Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M201.77 185.46c-2.43-3.36-4.81-6.87-7.33-10.59-11.38-16.79-23.15-34.16-38.58-35.71-8.27-.83-13.23-3.3-14.76-7.35-2.06-5.44 3.13-11.13 3.35-11.37l2.94 2.72c-1.04 1.14-3.53 4.66-2.55 7.25.93 2.43 4.98 4.13 11.42 4.77 17.29 1.74 29.59 19.89 41.49 37.45 2.5 3.69 4.86 7.18 7.26 10.49l-3.24 2.34Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M43.6602 138.19c-8.36 0-15.17-6.8-15.17-15.17 0-8.37 6.8-15.17 15.17-15.17 8.37 0 15.17 6.8 15.17 15.17 0 8.37-6.8 15.17-15.17 15.17Zm0-27.33c-6.71 0-12.17 5.46-12.17 12.17s5.46 12.17 12.17 12.17 12.17-5.46 12.17-12.17-5.46-12.17-12.17-12.17Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M63.5003 158.12c-.83 0-1.5-.67-1.5-1.5 0-10.11-8.23-18.34-18.34-18.34s-18.34 8.23-18.34 18.34c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5c0-11.77 9.57-21.34 21.34-21.34s21.34 9.57 21.34 21.34c0 .83-.67 1.5-1.5 1.5ZM118.02 139.21H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H118.02c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5ZM104.62 77H29.9902c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5H104.62c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5ZM71.6702 88.77h-41.68c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5h41.67c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5h.01ZM107.18 153.73H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H107.18c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5ZM124.2 146.66H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H124.2c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="title2"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 22,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 33,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Aggiungi il documento al Portafoglio
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Per usare i documenti su IO, prima aggiungili al Portafoglio. È facile e veloce.
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Continue"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderRadius": 4,
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "paddingHorizontal": 16,
                                          "textAlignVertical": "center",
                                        },
                                        {
                                          "overflow": "hidden",
                                        },
                                        false,
                                        {
                                          "height": 40,
                                        },
                                        {
                                          "backgroundColor": "#0073E6",
                                        },
                                        {
                                          "backgroundColor": undefined,
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={false}
                                        ellipsizeMode="tail"
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.25}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#FFFFFF",
                                              "fontFamily": "Titillium Sans Pro",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 20,
                                            },
                                            {
                                              "alignSelf": "center",
                                            },
                                          ]
                                        }
                                      >
                                        Continue
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Cancel"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  hitSlop={
                                    {
                                      "bottom": 14,
                                      "left": 24,
                                      "right": 24,
                                      "top": 14,
                                    }
                                  }
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  onTouchEnd={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "textAlignVertical": "center",
                                        },
                                        false,
                                        {},
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      accessibilityElementsHidden={true}
                                      accessible={false}
                                      allowFontScaling={false}
                                      ellipsizeMode="tail"
                                      importantForAccessibility="no-hide-descendants"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={1}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 16,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": undefined,
                                          },
                                          {
                                            "color": undefined,
                                          },
                                        ]
                                      }
                                    >
                                      Cancel
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ItwIssuanceCredentialNotFoundScreen it should render the generic error message when route params are invalid 2`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ITW_ISSUANCE_CREDENTIAL_NOT_FOUND
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={3}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "additive",
                            "right": "additive",
                            "top": "additive",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={4}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M7 150.41v15.07c0 5.87 4.76 10.63 10.63 10.63h152.76c5.87 0 10.63-4.76 10.63-10.63v-8.43c0-.39-11.44-17.76-18.33-18.63-6.89-.87-15.91-3.54-15.91-3.54-10.32-3.9-.42-12.65-.42-12.65l2.72-.43c-11.11-.83-12.16-11.46-12.16-11.46l5.18-2.95-1.41-2.87-.67-2.83-.07-2.37 1.38-.98s4.14-1.27 4.79-1.33c.65-.06 6.02.68 6.02.68l7.73.98s11.4 3.27 11.63 3.34c.23.07 9.5 4.71 9.5 4.71V64.63c0-5.87-4.76-10.63-10.63-10.63H17.63C11.76 54 7 58.76 7 64.63V150.41Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M168.31 172.12H18.9201c-4.6 0-8.34-3.74-8.34-8.34V65.41c0-4.59 3.74-8.33 8.34-8.33H169.51c4.6 0 8.34 3.74 8.34 8.34v37.71c0 .75-.61 1.35-1.35 1.35-.74 0-1.35-.61-1.35-1.35V65.41c0-3.1-2.53-5.63-5.63-5.63H18.9201c-3.1 0-5.63 2.53-5.63 5.63v98.37c0 3.1 2.53 5.63 5.63 5.63H168.31c3.1 0 5.63-2.53 5.63-5.63v-16.29c0-.75.61-1.35 1.35-1.35.74 0 1.35.61 1.35 1.35v16.29c0 4.6-3.74 8.34-8.34 8.34h.01Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M229.74 144.18c-14.45-19.53-40.46-50.52-48.71-50.52v-4c12.97 0 47.98 46.8 51.93 52.14l-3.22 2.38ZM165.6 115.05c-18.46-2.42-27.63-6.04-28.84-11.37-.74-3.26 1.84-5.94 3.48-7.01 9.19-5.9 38.25 5.61 41.53 6.94l-1.5 3.71c-11.66-4.73-32.25-10.89-37.85-7.29 0 0-2.06 1.44-1.75 2.77.2.85 2.36 5.25 25.45 8.28l-.52 3.97Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M165.45 128.27c-27.17-5.71-30.83-11.35-31.22-15.1-.52-5.04 5.75-7.95 6.47-8.27l1.62 3.66c-1.42.63-4.29 2.49-4.1 4.2.15 1.37 2.6 6.25 28.07 11.6l-.82 3.91h-.02Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M201.77 185.46c-2.43-3.36-4.81-6.87-7.33-10.59-11.38-16.79-23.15-34.16-38.58-35.71-8.27-.83-13.23-3.3-14.76-7.35-2.06-5.44 3.13-11.13 3.35-11.37l2.94 2.72c-1.04 1.14-3.53 4.66-2.55 7.25.93 2.43 4.98 4.13 11.42 4.77 17.29 1.74 29.59 19.89 41.49 37.45 2.5 3.69 4.86 7.18 7.26 10.49l-3.24 2.34Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M43.6602 138.19c-8.36 0-15.17-6.8-15.17-15.17 0-8.37 6.8-15.17 15.17-15.17 8.37 0 15.17 6.8 15.17 15.17 0 8.37-6.8 15.17-15.17 15.17Zm0-27.33c-6.71 0-12.17 5.46-12.17 12.17s5.46 12.17 12.17 12.17 12.17-5.46 12.17-12.17-5.46-12.17-12.17-12.17Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M63.5003 158.12c-.83 0-1.5-.67-1.5-1.5 0-10.11-8.23-18.34-18.34-18.34s-18.34 8.23-18.34 18.34c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5c0-11.77 9.57-21.34 21.34-21.34s21.34 9.57 21.34 21.34c0 .83-.67 1.5-1.5 1.5ZM118.02 139.21H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H118.02c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5ZM104.62 77H29.9902c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5H104.62c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5ZM71.6702 88.77h-41.68c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5h41.67c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5h.01ZM107.18 153.73H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H107.18c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5ZM124.2 146.66H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H124.2c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="title2"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 22,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 33,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Aggiungi il documento al Portafoglio
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Per usare i documenti su IO, prima aggiungili al Portafoglio. È facile e veloce.
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Continue"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderRadius": 4,
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "paddingHorizontal": 16,
                                          "textAlignVertical": "center",
                                        },
                                        {
                                          "overflow": "hidden",
                                        },
                                        false,
                                        {
                                          "height": 40,
                                        },
                                        {
                                          "backgroundColor": "#0073E6",
                                        },
                                        {
                                          "backgroundColor": undefined,
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={false}
                                        ellipsizeMode="tail"
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.25}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#FFFFFF",
                                              "fontFamily": "Titillium Sans Pro",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 20,
                                            },
                                            {
                                              "alignSelf": "center",
                                            },
                                          ]
                                        }
                                      >
                                        Continue
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Cancel"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  hitSlop={
                                    {
                                      "bottom": 14,
                                      "left": 24,
                                      "right": 24,
                                      "top": 14,
                                    }
                                  }
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  onTouchEnd={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "textAlignVertical": "center",
                                        },
                                        false,
                                        {},
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      accessibilityElementsHidden={true}
                                      accessible={false}
                                      allowFontScaling={false}
                                      ellipsizeMode="tail"
                                      importantForAccessibility="no-hide-descendants"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={1}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 16,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": undefined,
                                          },
                                          {
                                            "color": undefined,
                                          },
                                        ]
                                      }
                                    >
                                      Cancel
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`ItwIssuanceCredentialNotFoundScreen it should render the screen with a button to start the document activation flow 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  ITW_ISSUANCE_CREDENTIAL_NOT_FOUND
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={5}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaView
                        edges={
                          {
                            "bottom": "additive",
                            "left": "additive",
                            "right": "additive",
                            "top": "additive",
                          }
                        }
                        style={
                          {
                            "flexGrow": 1,
                            "marginHorizontal": 24,
                          }
                        }
                      >
                        <RCTScrollView
                          centerContent={true}
                          collapsable={false}
                          contentContainerStyle={
                            [
                              {
                                "alignContent": "center",
                                "alignItems": "stretch",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              false,
                            ]
                          }
                          handlerTag={6}
                          handlerType="NativeViewGestureHandler"
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={120}
                                bbWidth={120}
                                color="#00C5CA"
                                focusable={false}
                                height={120}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 120,
                                      "width": 120,
                                    },
                                  ]
                                }
                                tintColor="#00C5CA"
                                vbHeight={240}
                                vbWidth={240}
                                width={120}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M7 150.41v15.07c0 5.87 4.76 10.63 10.63 10.63h152.76c5.87 0 10.63-4.76 10.63-10.63v-8.43c0-.39-11.44-17.76-18.33-18.63-6.89-.87-15.91-3.54-15.91-3.54-10.32-3.9-.42-12.65-.42-12.65l2.72-.43c-11.11-.83-12.16-11.46-12.16-11.46l5.18-2.95-1.41-2.87-.67-2.83-.07-2.37 1.38-.98s4.14-1.27 4.79-1.33c.65-.06 6.02.68 6.02.68l7.73.98s11.4 3.27 11.63 3.34c.23.07 9.5 4.71 9.5 4.71V64.63c0-5.87-4.76-10.63-10.63-10.63H17.63C11.76 54 7 58.76 7 64.63V150.41Z"
                                    fill={
                                      {
                                        "payload": 4289392367,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M168.31 172.12H18.9201c-4.6 0-8.34-3.74-8.34-8.34V65.41c0-4.59 3.74-8.33 8.34-8.33H169.51c4.6 0 8.34 3.74 8.34 8.34v37.71c0 .75-.61 1.35-1.35 1.35-.74 0-1.35-.61-1.35-1.35V65.41c0-3.1-2.53-5.63-5.63-5.63H18.9201c-3.1 0-5.63 2.53-5.63 5.63v98.37c0 3.1 2.53 5.63 5.63 5.63H168.31c3.1 0 5.63-2.53 5.63-5.63v-16.29c0-.75.61-1.35 1.35-1.35.74 0 1.35.61 1.35 1.35v16.29c0 4.6-3.74 8.34-8.34 8.34h.01Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M229.74 144.18c-14.45-19.53-40.46-50.52-48.71-50.52v-4c12.97 0 47.98 46.8 51.93 52.14l-3.22 2.38ZM165.6 115.05c-18.46-2.42-27.63-6.04-28.84-11.37-.74-3.26 1.84-5.94 3.48-7.01 9.19-5.9 38.25 5.61 41.53 6.94l-1.5 3.71c-11.66-4.73-32.25-10.89-37.85-7.29 0 0-2.06 1.44-1.75 2.77.2.85 2.36 5.25 25.45 8.28l-.52 3.97Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M165.45 128.27c-27.17-5.71-30.83-11.35-31.22-15.1-.52-5.04 5.75-7.95 6.47-8.27l1.62 3.66c-1.42.63-4.29 2.49-4.1 4.2.15 1.37 2.6 6.25 28.07 11.6l-.82 3.91h-.02Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M201.77 185.46c-2.43-3.36-4.81-6.87-7.33-10.59-11.38-16.79-23.15-34.16-38.58-35.71-8.27-.83-13.23-3.3-14.76-7.35-2.06-5.44 3.13-11.13 3.35-11.37l2.94 2.72c-1.04 1.14-3.53 4.66-2.55 7.25.93 2.43 4.98 4.13 11.42 4.77 17.29 1.74 29.59 19.89 41.49 37.45 2.5 3.69 4.86 7.18 7.26 10.49l-3.24 2.34Z"
                                    fill={
                                      {
                                        "payload": 4278927075,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M43.6602 138.19c-8.36 0-15.17-6.8-15.17-15.17 0-8.37 6.8-15.17 15.17-15.17 8.37 0 15.17 6.8 15.17 15.17 0 8.37-6.8 15.17-15.17 15.17Zm0-27.33c-6.71 0-12.17 5.46-12.17 12.17s5.46 12.17 12.17 12.17 12.17-5.46 12.17-12.17-5.46-12.17-12.17-12.17Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                  <RNSVGPath
                                    d="M63.5003 158.12c-.83 0-1.5-.67-1.5-1.5 0-10.11-8.23-18.34-18.34-18.34s-18.34 8.23-18.34 18.34c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5c0-11.77 9.57-21.34 21.34-21.34s21.34 9.57 21.34 21.34c0 .83-.67 1.5-1.5 1.5ZM118.02 139.21H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H118.02c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5ZM104.62 77H29.9902c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5H104.62c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5ZM71.6702 88.77h-41.68c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5h41.67c1.93 0 3.5 1.57 3.5 3.5s-1.57 3.5-3.5 3.5h.01ZM107.18 153.73H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H107.18c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5ZM124.2 146.66H75.4902c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5H124.2c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5Z"
                                    fill={
                                      {
                                        "payload": 4278240714,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                            </View>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="title2"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 22,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 33,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Aggiungi il documento al Portafoglio
                            </Text>
                            <View
                              style={
                                {
                                  "height": 8,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Per usare i documenti su IO, prima aggiungili al Portafoglio. È facile e veloce.
                            </Text>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Continue"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": false,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "borderRadius": 4,
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "paddingHorizontal": 16,
                                          "textAlignVertical": "center",
                                        },
                                        {
                                          "overflow": "hidden",
                                        },
                                        false,
                                        {
                                          "height": 40,
                                        },
                                        {
                                          "backgroundColor": "#0073E6",
                                        },
                                        {
                                          "backgroundColor": undefined,
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        [
                                          {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                            "justifyContent": "center",
                                          },
                                          false,
                                        ]
                                      }
                                    >
                                      <Text
                                        accessibilityElementsHidden={true}
                                        accessible={false}
                                        allowFontScaling={false}
                                        ellipsizeMode="tail"
                                        importantForAccessibility="no-hide-descendants"
                                        maxFontSizeMultiplier={1.25}
                                        numberOfLines={1}
                                        style={
                                          [
                                            {},
                                            {
                                              "color": "#FFFFFF",
                                              "fontFamily": "Titillium Sans Pro",
                                              "fontSize": 16,
                                              "fontStyle": "normal",
                                              "fontWeight": "600",
                                              "lineHeight": 20,
                                            },
                                            {
                                              "alignSelf": "center",
                                            },
                                          ]
                                        }
                                      >
                                        Continue
                                      </Text>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "height": 24,
                                  }
                                }
                              />
                              <View>
                                <View
                                  accessibilityLabel="Cancel"
                                  accessibilityRole="button"
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": false,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  hitSlop={
                                    {
                                      "bottom": 14,
                                      "left": 24,
                                      "right": 24,
                                      "top": 14,
                                    }
                                  }
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  onTouchEnd={[Function]}
                                  style={
                                    {
                                      "alignSelf": "flex-start",
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "elevation": 0,
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                          "textAlignVertical": "center",
                                        },
                                        false,
                                        {},
                                        {
                                          "transform": [
                                            {
                                              "scale": undefined,
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                  >
                                    <Text
                                      accessibilityElementsHidden={true}
                                      accessible={false}
                                      allowFontScaling={false}
                                      ellipsizeMode="tail"
                                      importantForAccessibility="no-hide-descendants"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={1}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 16,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": undefined,
                                          },
                                          {
                                            "color": undefined,
                                          },
                                        ]
                                      }
                                    >
                                      Cancel
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </RNCSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
