// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TosWebviewComponent The snapshot for the TosWebviewComponent Should render correctly with bottom footer and a basic placeholding HTML 1`] = `
Array [
  <View
    style={
      Object {
        "flex": 1,
      }
    }
    testID="toSWebViewContainer"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        androidCameraAccessDisabled={true}
        androidMicrophoneAccessDisabled={true}
        cacheEnabled={true}
        injectedJavaScript="const meta = document.createElement('meta');meta.setAttribute('content', 'width=device-width, initial-scale=0.99, maximum-scale=0.99, user-scalable=0');meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta);function findParent(tagname, el) {while (el) {if ((el.nodeName || el.tagName).toLowerCase() === tagname.toLowerCase()) {return el;}el = el.parentNode;}return null;}document.body.onclick = function(e) {e = e || event;const from = findParent(\\"a\\", e.target || e.srcElement);if (from) {const href = from.href;const message = {type: \\"LINK_MESSAGE\\",payload: {href}};window.ReactNativeWebView.postMessage(JSON.stringify(message));return false;}};true;"
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        source={
          Object {
            "html": "<html><head></head><body></body></html>",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        textZoom={100}
        useSharedProcessPool={true}
      />
    </View>
  </View>,
  <View
    pointerEvents="box-none"
    style={
      Object {
        "marginTop": -50,
        "overflow": "hidden",
        "paddingTop": 50,
      }
    }
    testID="FooterWithButtons"
  >
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "elevation": 20,
          "paddingBottom": 16,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 16,
          "shadowColor": "#0E0F13",
          "shadowOffset": Object {
            "height": 50,
            "width": 0,
          },
          "shadowOpacity": 0.5,
          "shadowRadius": 37,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          forwardedRef={[Function]}
          hitSlop={
            Object {
              "bottom": 4,
              "top": 4,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "transparent",
              "borderBottomWidth": 1,
              "borderColor": "#007aff",
              "borderLeftWidth": 1,
              "borderRadius": 5,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "borderWidth": 1,
              "elevation": null,
              "flex": 1,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "opacity": 1,
              "paddingBottom": 6,
              "paddingTop": 6,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
            }
          }
          testID="toSWebViewContainerFooterLeftButton"
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007aff",
                  "fontFamily": "System",
                  "fontSize": 16.5,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                },
                undefined,
                undefined,
              ]
            }
            uppercase={false}
          >
            Exit
          </Text>
        </View>
        <View
          style={
            Object {
              "width": 16,
            }
          }
        />
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          forwardedRef={[Function]}
          hitSlop={
            Object {
              "bottom": 4,
              "top": 4,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "alignSelf": "stretch",
              "backgroundColor": "#007aff",
              "borderBottomWidth": null,
              "borderColor": "#007aff",
              "borderLeftWidth": null,
              "borderRadius": 5,
              "borderRightWidth": null,
              "borderTopWidth": null,
              "borderWidth": undefined,
              "elevation": 2,
              "flex": 2,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "opacity": 1,
              "paddingBottom": 6,
              "paddingTop": 6,
              "shadowColor": undefined,
              "shadowOffset": undefined,
              "shadowOpacity": undefined,
              "shadowRadius": undefined,
            }
          }
          testID="toSWebViewContainerFooterRightButton"
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007aff",
                  "fontFamily": "System",
                  "fontSize": 16.5,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                },
                undefined,
                undefined,
              ]
            }
            uppercase={false}
          >
            Accept and continue
          </Text>
        </View>
      </View>
    </View>
  </View>,
]
`;
