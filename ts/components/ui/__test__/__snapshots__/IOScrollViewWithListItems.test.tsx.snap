// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IOScrollViewWithListItems Rendering renders correctly with default props 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  DUMMY
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          [
                            {
                              "paddingBottom": 56,
                              "paddingHorizontal": 24,
                            },
                            {},
                          ]
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          [
                            0,
                            0,
                          ]
                        }
                        style={{}}
                      >
                        <View>
                          <Text
                            allowFontScaling={false}
                            dynamicTypeRamp="title1"
                            maxFontSizeMultiplier={1.25}
                            style={
                              [
                                {},
                                {
                                  "color": "#0E0F13",
                                  "fontFamily": "Titillium Sans Pro",
                                  "fontSize": 28,
                                  "fontStyle": "normal",
                                  "fontWeight": "600",
                                  "lineHeight": 40,
                                },
                              ]
                            }
                          >
                            Test Title
                          </Text>
                          <View
                            style={
                              {
                                "height": 8,
                              }
                            }
                          />
                          <Text
                            allowFontScaling={false}
                            dynamicTypeRamp="body"
                            maxFontSizeMultiplier={1.25}
                            style={
                              [
                                {},
                                {
                                  "color": "#555C70",
                                  "fontFamily": "Titillium Sans Pro",
                                  "fontSize": 16,
                                  "fontStyle": "normal",
                                  "fontWeight": "400",
                                  "lineHeight": 24,
                                },
                              ]
                            }
                          >
                            Test Subtitle
                          </Text>
                          <View
                            style={
                              {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            accessibilityLabel="List Header"
                            accessible={true}
                            style={
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              }
                            }
                          >
                            <View
                              importantForAccessibility="no-hide-descendants"
                              style={
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  accessibilityElementsHidden={false}
                                  accessible={true}
                                  importantForAccessibility="yes"
                                >
                                  <Text
                                    allowFontScaling={false}
                                    dynamicTypeRamp="headline"
                                    maxFontSizeMultiplier={1.25}
                                    role="heading"
                                    style={
                                      [
                                        {},
                                        {
                                          "color": "#555C70",
                                          "fontFamily": "Titillium Sans Pro",
                                          "fontSize": 18,
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                          "lineHeight": 25,
                                        },
                                      ]
                                    }
                                  >
                                    List Header
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View>
                            <View
                              accessibilityLabel="Item 1; Value 1"
                              accessible={true}
                              style={
                                {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                }
                              }
                              testID="item-1"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    accessible={true}
                                  >
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="footnote"
                                      maxFontSizeMultiplier={1.25}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#555C70",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 14,
                                            "fontStyle": "normal",
                                            "fontWeight": "400",
                                            "lineHeight": 21,
                                          },
                                        ]
                                      }
                                    >
                                      Item 1
                                    </Text>
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="headline"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={2}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 18,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": 25,
                                          },
                                        ]
                                      }
                                    >
                                      Value 1
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                          </View>
                          <View>
                            <View
                              accessibilityLabel="Item 2; Value 2"
                              accessible={true}
                              style={
                                {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                }
                              }
                              testID="item-2"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    accessible={true}
                                  >
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="footnote"
                                      maxFontSizeMultiplier={1.25}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#555C70",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 14,
                                            "fontStyle": "normal",
                                            "fontWeight": "400",
                                            "lineHeight": 21,
                                          },
                                        ]
                                      }
                                    >
                                      Item 2
                                    </Text>
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="headline"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={2}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 18,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": 25,
                                          },
                                        ]
                                      }
                                    >
                                      Value 2
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                      <View
                        pointerEvents="box-none"
                        style={
                          [
                            {
                              "bottom": 0,
                              "justifyContent": "flex-end",
                              "position": "absolute",
                              "width": "100%",
                            },
                            {
                              "height": 120,
                              "paddingBottom": 24,
                            },
                          ]
                        }
                      >
                        <View
                          pointerEvents="none"
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              false,
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "opacity": undefined,
                                },
                                false,
                              ]
                            }
                          >
                            <BVLinearGradient
                              colors={
                                [
                                  16777215,
                                  218103807,
                                  419430399,
                                  620756991,
                                  822083583,
                                  1040187391,
                                  1241513983,
                                  1442840575,
                                  1644167167,
                                  1845493759,
                                  2046820351,
                                  2264924159,
                                  2466250751,
                                  2667577343,
                                  2868903935,
                                  3070230527,
                                  3271557119,
                                  3489660927,
                                  3690987519,
                                  3892314111,
                                  4093640703,
                                  4294967295,
                                ]
                              }
                              endPoint={
                                {
                                  "x": 0.5,
                                  "y": 1,
                                }
                              }
                              locations={
                                [
                                  0,
                                  0.047619047619047616,
                                  0.09523809523809523,
                                  0.14285714285714285,
                                  0.19047619047619047,
                                  0.23809523809523808,
                                  0.2857142857142857,
                                  0.3333333333333333,
                                  0.38095238095238093,
                                  0.42857142857142855,
                                  0.47619047619047616,
                                  0.5238095238095237,
                                  0.5714285714285714,
                                  0.6190476190476191,
                                  0.6666666666666666,
                                  0.7142857142857142,
                                  0.7619047619047619,
                                  0.8095238095238095,
                                  0.8571428571428571,
                                  0.9047619047619047,
                                  0.9523809523809523,
                                  1,
                                ]
                              }
                              startPoint={
                                {
                                  "x": 0.5,
                                  "y": 0,
                                }
                              }
                              style={
                                {
                                  "height": 99.6,
                                }
                              }
                            />
                          </View>
                          <View
                            style={
                              {
                                "backgroundColor": "#FFFFFF",
                                "bottom": 0,
                                "height": 20.4,
                              }
                            }
                          />
                        </View>
                        <View
                          onLayout={[Function]}
                          pointerEvents="box-none"
                          style={
                            {
                              "flexShrink": 0,
                              "paddingHorizontal": 24,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            accessibilityLabel="Press me button"
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": false,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": undefined,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={{}}
                            testID="action-button"
                          >
                            <View
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "borderRadius": 4,
                                    "elevation": 0,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "paddingHorizontal": 16,
                                    "textAlignVertical": "center",
                                  },
                                  {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  {
                                    "height": 40,
                                  },
                                  {
                                    "backgroundColor": "#0073E6",
                                  },
                                  {
                                    "backgroundColor": undefined,
                                    "transform": [
                                      {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                    },
                                    false,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  accessible={false}
                                  allowFontScaling={false}
                                  ellipsizeMode="tail"
                                  importantForAccessibility="no-hide-descendants"
                                  maxFontSizeMultiplier={1.25}
                                  numberOfLines={1}
                                  style={
                                    [
                                      {},
                                      {
                                        "color": "#FFFFFF",
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "700",
                                        "lineHeight": 20,
                                      },
                                      {
                                        "alignSelf": "center",
                                      },
                                    ]
                                  }
                                >
                                  Press me
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`IOScrollViewWithListItems Rendering renders correctly without optional props 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  DUMMY
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={3}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          [
                            {
                              "paddingBottom": 56,
                              "paddingHorizontal": 24,
                            },
                            {},
                          ]
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          [
                            0,
                            0,
                          ]
                        }
                        style={{}}
                      >
                        <View>
                          <Text
                            allowFontScaling={false}
                            dynamicTypeRamp="title1"
                            maxFontSizeMultiplier={1.25}
                            style={
                              [
                                {},
                                {
                                  "color": "#0E0F13",
                                  "fontFamily": "Titillium Sans Pro",
                                  "fontSize": 28,
                                  "fontStyle": "normal",
                                  "fontWeight": "600",
                                  "lineHeight": 40,
                                },
                              ]
                            }
                          />
                        </View>
                      </RCTScrollView>
                      <View
                        pointerEvents="box-none"
                        style={
                          [
                            {
                              "bottom": 0,
                              "justifyContent": "flex-end",
                              "position": "absolute",
                              "width": "100%",
                            },
                            {
                              "height": 120,
                              "paddingBottom": 24,
                            },
                          ]
                        }
                      >
                        <View
                          pointerEvents="none"
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              false,
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "opacity": undefined,
                                },
                                false,
                              ]
                            }
                          >
                            <BVLinearGradient
                              colors={
                                [
                                  16777215,
                                  218103807,
                                  419430399,
                                  620756991,
                                  822083583,
                                  1040187391,
                                  1241513983,
                                  1442840575,
                                  1644167167,
                                  1845493759,
                                  2046820351,
                                  2264924159,
                                  2466250751,
                                  2667577343,
                                  2868903935,
                                  3070230527,
                                  3271557119,
                                  3489660927,
                                  3690987519,
                                  3892314111,
                                  4093640703,
                                  4294967295,
                                ]
                              }
                              endPoint={
                                {
                                  "x": 0.5,
                                  "y": 1,
                                }
                              }
                              locations={
                                [
                                  0,
                                  0.047619047619047616,
                                  0.09523809523809523,
                                  0.14285714285714285,
                                  0.19047619047619047,
                                  0.23809523809523808,
                                  0.2857142857142857,
                                  0.3333333333333333,
                                  0.38095238095238093,
                                  0.42857142857142855,
                                  0.47619047619047616,
                                  0.5238095238095237,
                                  0.5714285714285714,
                                  0.6190476190476191,
                                  0.6666666666666666,
                                  0.7142857142857142,
                                  0.7619047619047619,
                                  0.8095238095238095,
                                  0.8571428571428571,
                                  0.9047619047619047,
                                  0.9523809523809523,
                                  1,
                                ]
                              }
                              startPoint={
                                {
                                  "x": 0.5,
                                  "y": 0,
                                }
                              }
                              style={
                                {
                                  "height": 99.6,
                                }
                              }
                            />
                          </View>
                          <View
                            style={
                              {
                                "backgroundColor": "#FFFFFF",
                                "bottom": 0,
                                "height": 20.4,
                              }
                            }
                          />
                        </View>
                        <View
                          onLayout={[Function]}
                          pointerEvents="box-none"
                          style={
                            {
                              "flexShrink": 0,
                              "paddingHorizontal": 24,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            accessibilityLabel="Press me button"
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": false,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": undefined,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={{}}
                            testID="action-button"
                          >
                            <View
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "borderRadius": 4,
                                    "elevation": 0,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "paddingHorizontal": 16,
                                    "textAlignVertical": "center",
                                  },
                                  {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  {
                                    "height": 40,
                                  },
                                  {
                                    "backgroundColor": "#0073E6",
                                  },
                                  {
                                    "backgroundColor": undefined,
                                    "transform": [
                                      {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                    },
                                    false,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  accessible={false}
                                  allowFontScaling={false}
                                  ellipsizeMode="tail"
                                  importantForAccessibility="no-hide-descendants"
                                  maxFontSizeMultiplier={1.25}
                                  numberOfLines={1}
                                  style={
                                    [
                                      {},
                                      {
                                        "color": "#FFFFFF",
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "700",
                                        "lineHeight": 20,
                                      },
                                      {
                                        "alignSelf": "center",
                                      },
                                    ]
                                  }
                                >
                                  Press me
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`IOScrollViewWithListItems Rendering renders subtitle as array correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  DUMMY
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={2}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          [
                            {
                              "paddingBottom": 56,
                              "paddingHorizontal": 24,
                            },
                            {},
                          ]
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          [
                            0,
                            0,
                          ]
                        }
                        style={{}}
                      >
                        <View>
                          <Text
                            allowFontScaling={false}
                            dynamicTypeRamp="title1"
                            maxFontSizeMultiplier={1.25}
                            style={
                              [
                                {},
                                {
                                  "color": "#0E0F13",
                                  "fontFamily": "Titillium Sans Pro",
                                  "fontSize": 28,
                                  "fontStyle": "normal",
                                  "fontWeight": "600",
                                  "lineHeight": 40,
                                },
                              ]
                            }
                          >
                            Test Title
                          </Text>
                          <View
                            style={
                              {
                                "height": 8,
                              }
                            }
                          />
                          <Text
                            allowFontScaling={false}
                            dynamicTypeRamp="body"
                            maxFontSizeMultiplier={1.25}
                            style={
                              [
                                {},
                                {
                                  "color": "#555C70",
                                  "fontFamily": "Titillium Sans Pro",
                                  "fontSize": 16,
                                  "fontStyle": "normal",
                                  "fontWeight": "400",
                                  "lineHeight": 24,
                                },
                                {
                                  "textAlign": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Subtitle Part 1
                            </Text>
                            <Text
                              allowFontScaling={false}
                              dynamicTypeRamp="body"
                              maxFontSizeMultiplier={1.25}
                              style={
                                [
                                  {},
                                  {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Sans Pro",
                                    "fontSize": 16,
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                    "lineHeight": 24,
                                  },
                                  {
                                    "textAlign": "center",
                                  },
                                ]
                              }
                            >
                              Subtitle Part 2 Bold
                            </Text>
                          </Text>
                          <View
                            style={
                              {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            accessibilityLabel="List Header"
                            accessible={true}
                            style={
                              {
                                "marginHorizontal": -24,
                                "paddingHorizontal": 24,
                                "paddingVertical": 12,
                              }
                            }
                          >
                            <View
                              importantForAccessibility="no-hide-descendants"
                              style={
                                {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "justifyContent": "space-between",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  accessibilityElementsHidden={false}
                                  accessible={true}
                                  importantForAccessibility="yes"
                                >
                                  <Text
                                    allowFontScaling={false}
                                    dynamicTypeRamp="headline"
                                    maxFontSizeMultiplier={1.25}
                                    role="heading"
                                    style={
                                      [
                                        {},
                                        {
                                          "color": "#555C70",
                                          "fontFamily": "Titillium Sans Pro",
                                          "fontSize": 18,
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                          "lineHeight": 25,
                                        },
                                      ]
                                    }
                                  >
                                    List Header
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View>
                            <View
                              accessibilityLabel="Item 1; Value 1"
                              accessible={true}
                              style={
                                {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                }
                              }
                              testID="item-1"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    accessible={true}
                                  >
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="footnote"
                                      maxFontSizeMultiplier={1.25}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#555C70",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 14,
                                            "fontStyle": "normal",
                                            "fontWeight": "400",
                                            "lineHeight": 21,
                                          },
                                        ]
                                      }
                                    >
                                      Item 1
                                    </Text>
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="headline"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={2}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 18,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": 25,
                                          },
                                        ]
                                      }
                                    >
                                      Value 1
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                          </View>
                          <View>
                            <View
                              accessibilityLabel="Item 2; Value 2"
                              accessible={true}
                              style={
                                {
                                  "marginHorizontal": -24,
                                  "paddingHorizontal": 24,
                                  "paddingVertical": 12,
                                }
                              }
                              testID="item-2"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    accessible={true}
                                  >
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="footnote"
                                      maxFontSizeMultiplier={1.25}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#555C70",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 14,
                                            "fontStyle": "normal",
                                            "fontWeight": "400",
                                            "lineHeight": 21,
                                          },
                                        ]
                                      }
                                    >
                                      Item 2
                                    </Text>
                                    <Text
                                      allowFontScaling={false}
                                      dynamicTypeRamp="headline"
                                      maxFontSizeMultiplier={1.25}
                                      numberOfLines={2}
                                      style={
                                        [
                                          {},
                                          {
                                            "color": "#0E0F13",
                                            "fontFamily": "Titillium Sans Pro",
                                            "fontSize": 18,
                                            "fontStyle": "normal",
                                            "fontWeight": "600",
                                            "lineHeight": 25,
                                          },
                                        ]
                                      }
                                    >
                                      Value 2
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                      <View
                        pointerEvents="box-none"
                        style={
                          [
                            {
                              "bottom": 0,
                              "justifyContent": "flex-end",
                              "position": "absolute",
                              "width": "100%",
                            },
                            {
                              "height": 120,
                              "paddingBottom": 24,
                            },
                          ]
                        }
                      >
                        <View
                          pointerEvents="none"
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              false,
                            ]
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "opacity": undefined,
                                },
                                false,
                              ]
                            }
                          >
                            <BVLinearGradient
                              colors={
                                [
                                  16777215,
                                  218103807,
                                  419430399,
                                  620756991,
                                  822083583,
                                  1040187391,
                                  1241513983,
                                  1442840575,
                                  1644167167,
                                  1845493759,
                                  2046820351,
                                  2264924159,
                                  2466250751,
                                  2667577343,
                                  2868903935,
                                  3070230527,
                                  3271557119,
                                  3489660927,
                                  3690987519,
                                  3892314111,
                                  4093640703,
                                  4294967295,
                                ]
                              }
                              endPoint={
                                {
                                  "x": 0.5,
                                  "y": 1,
                                }
                              }
                              locations={
                                [
                                  0,
                                  0.047619047619047616,
                                  0.09523809523809523,
                                  0.14285714285714285,
                                  0.19047619047619047,
                                  0.23809523809523808,
                                  0.2857142857142857,
                                  0.3333333333333333,
                                  0.38095238095238093,
                                  0.42857142857142855,
                                  0.47619047619047616,
                                  0.5238095238095237,
                                  0.5714285714285714,
                                  0.6190476190476191,
                                  0.6666666666666666,
                                  0.7142857142857142,
                                  0.7619047619047619,
                                  0.8095238095238095,
                                  0.8571428571428571,
                                  0.9047619047619047,
                                  0.9523809523809523,
                                  1,
                                ]
                              }
                              startPoint={
                                {
                                  "x": 0.5,
                                  "y": 0,
                                }
                              }
                              style={
                                {
                                  "height": 99.6,
                                }
                              }
                            />
                          </View>
                          <View
                            style={
                              {
                                "backgroundColor": "#FFFFFF",
                                "bottom": 0,
                                "height": 20.4,
                              }
                            }
                          />
                        </View>
                        <View
                          onLayout={[Function]}
                          pointerEvents="box-none"
                          style={
                            {
                              "flexShrink": 0,
                              "paddingHorizontal": 24,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            accessibilityLabel="Press me button"
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": false,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": undefined,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={{}}
                            testID="action-button"
                          >
                            <View
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "borderRadius": 4,
                                    "elevation": 0,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "paddingHorizontal": 16,
                                    "textAlignVertical": "center",
                                  },
                                  {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  {
                                    "height": 40,
                                  },
                                  {
                                    "backgroundColor": "#0073E6",
                                  },
                                  {
                                    "backgroundColor": undefined,
                                    "transform": [
                                      {
                                        "scale": undefined,
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                      "justifyContent": "center",
                                    },
                                    false,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  accessible={false}
                                  allowFontScaling={false}
                                  ellipsizeMode="tail"
                                  importantForAccessibility="no-hide-descendants"
                                  maxFontSizeMultiplier={1.25}
                                  numberOfLines={1}
                                  style={
                                    [
                                      {},
                                      {
                                        "color": "#FFFFFF",
                                        "fontFamily": "Titillium Sans Pro",
                                        "fontSize": 16,
                                        "fontStyle": "normal",
                                        "fontWeight": "700",
                                        "lineHeight": 20,
                                      },
                                      {
                                        "alignSelf": "center",
                                      },
                                    ]
                                  }
                                >
                                  Press me
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
