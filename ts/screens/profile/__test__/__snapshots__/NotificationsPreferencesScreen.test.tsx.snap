// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationsPreferencesScreen should match snapshot, disabled  preview, disabled  reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={16}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, disabled  preview, disabled  reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={15}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, disabled  preview, enabled   reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={18}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, disabled  preview, enabled   reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={17}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a notice due tomorrow
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Log in to pay for it
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": true,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={true}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, disabled  preview, undefined reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={14}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, disabled  preview, undefined reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={13}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, enabled   preview, disabled  reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={22}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, enabled   preview, disabled  reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={21}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Comune di Ipazia
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Summer camp registration is now open
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": true,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={true}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, enabled   preview, enabled   reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={24}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, enabled   preview, enabled   reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={23}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a notice due soon
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Log in to pay the notice issued by ACI
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": true,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={true}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": true,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={true}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, enabled   preview, undefined reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={20}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, enabled   preview, undefined reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={19}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Comune di Ipazia
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Summer camp registration is now open
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": true,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={true}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, undefined preview, disabled  reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={10}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, undefined preview, disabled  reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={9}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, undefined preview, enabled   reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={12}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, undefined preview, enabled   reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={11}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a notice due tomorrow
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Log in to pay for it
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": true,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={true}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, undefined preview, undefined reminder,     updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={8}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 0.5,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`NotificationsPreferencesScreen should match snapshot, undefined preview, undefined reminder, not updating 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={7}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "#FFFFFF",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTScrollView
                        collapsable={false}
                        contentContainerStyle={
                          Object {
                            "flexGrow": 1,
                            "paddingBottom": 0,
                          }
                        }
                        decelerationRate="normal"
                        onScroll={[Function]}
                        scrollEventThrottle={8}
                        snapToEnd={false}
                        snapToOffsets={
                          Array [
                            0,
                            0,
                          ]
                        }
                        style={Object {}}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <Text
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              allowFontScaling={false}
                              color="black"
                              defaultColor="black"
                              defaultWeight="SemiBold"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 28,
                                  "lineHeight": 40,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 28,
                                    "lineHeight": 40,
                                  },
                                  Object {
                                    "color": "#0E0F13",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "600",
                                  },
                                ]
                              }
                              weight="SemiBold"
                            >
                              Customize push notifications
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 16,
                                }
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              color="grey-700"
                              defaultColor="bluegrey"
                              defaultWeight="Regular"
                              font="TitilliumWeb"
                              fontStyle={
                                Object {
                                  "fontSize": 16,
                                  "lineHeight": 24,
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                    "lineHeight": 24,
                                  },
                                  Object {
                                    "color": "#555C70",
                                    "fontFamily": "Titillium Web",
                                    "fontStyle": "normal",
                                    "fontWeight": "400",
                                  },
                                ]
                              }
                              weight="Regular"
                            >
                              Choose how to receive messages and reminders.
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "height": 16,
                              }
                            }
                          />
                          <View
                            style={
                              Object {
                                "paddingHorizontal": 24,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessibilityIgnoresInvertColors={true}
                              style={
                                Object {
                                  "justifyContent": "center",
                                  "minHeight": 200,
                                }
                              }
                            >
                              <Image
                                resizeMode="contain"
                                source={
                                  Object {
                                    "testUri": "../../../img/onboarding/notification_white.png",
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "height": undefined,
                                      "width": undefined,
                                    },
                                    undefined,
                                  ]
                                }
                              />
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#CCD4DC",
                                    "borderRadius": 8,
                                    "borderWidth": 1,
                                    "flexDirection": "row",
                                    "marginVertical": 4,
                                    "minHeight": 90,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#2351E6",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#2351E6"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      d="M2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5ZM2.5 2a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M23.5 14c0 4.418-3.582 8-7.619 8-4.8 0-8.381-3.582-8.381-8s3.582-8 8.381-8c4.037 0 7.619 3.582 7.619 8Zm-6.035-.84h1.065v-1.048h-1.057v-1.267h-1.157v4.216c0 .667.092 1.122.283 1.365.184.252.537.374 1.058.374.2 0 .498-.049.881-.138l-.054-.975-.659.016c-.114 0-.199-.024-.252-.081a.328.328 0 0 1-.092-.195 4.118 4.118 0 0 1-.016-.39V13.16Zm-3.486-1.04v4.574h1.157v-4.573h-1.157Zm-1.737-.113c.203 0 .374.068.506.204a.692.692 0 0 1 .194.507.675.675 0 0 1-.194.5.684.684 0 0 1-.498.189.693.693 0 0 1-.708-.704.72.72 0 0 1 .195-.5.672.672 0 0 1 .505-.196Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                    <RNSVGPath
                                      d="M4.5 11.5a2 2 0 1 0-4 0V20a2 2 0 1 0 4 0v-8.5Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                                <View
                                  style={
                                    Object {
                                      "width": 16,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    You have a new message
                                  </Text>
                                  <Text
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="Bold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    Open the app to read the content
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 24,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Show a preview
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Show a preview"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="previewsPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Include the sender and subject of the message in the push notification
                              </Text>
                              <View
                                style={
                                  Object {
                                    "height": 8,
                                  }
                                }
                              />
                              <Text
                                accessibilityRole="link"
                                allowFontScaling={false}
                                color="blue"
                                defaultColor="blue"
                                defaultWeight="SemiBold"
                                font="TitilliumWeb"
                                fontSize="small"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 24,
                                    "textDecorationLine": "underline",
                                  }
                                }
                                onPress={[Function]}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 24,
                                      "textDecorationLine": "underline",
                                    },
                                    Object {
                                      "color": "#0073E6",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                  ]
                                }
                                weight="SemiBold"
                              >
                                More info
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#D2D6E3",
                                  "height": 0.5,
                                }
                              }
                            />
                            <View
                              accessible={false}
                              needsOffscreenAlphaCompositing={true}
                              pointerEvents="auto"
                              style={
                                Array [
                                  Object {
                                    "marginHorizontal": -24,
                                    "paddingHorizontal": 24,
                                    "paddingVertical": 12,
                                  },
                                  Object {
                                    "opacity": 1,
                                  },
                                ]
                              }
                              testID="ListItemSwitch"
                            >
                              <View
                                accessible={false}
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "flex-start",
                                      "flexDirection": "row",
                                      "justifyContent": "space-between",
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": false,
                                    }
                                  }
                                  accessible={false}
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <Text
                                    accessible={false}
                                    allowFontScaling={false}
                                    color="black"
                                    defaultColor="black"
                                    defaultWeight="SemiBold"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 18,
                                        "lineHeight": 25,
                                      }
                                    }
                                    importantForAccessibility="no-hide-descendants"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        Object {
                                          "fontSize": 18,
                                          "lineHeight": 25,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "600",
                                        },
                                      ]
                                    }
                                    weight="SemiBold"
                                  >
                                    Allow reminders
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "width": 8,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Object {
                                      "alignSelf": "flex-start",
                                      "justifyContent": "center",
                                      "minHeight": 32,
                                    }
                                  }
                                >
                                  <RCTSwitch
                                    accessibilityLabel="Allow reminders"
                                    accessibilityRole="switch"
                                    accessibilityState={
                                      Object {
                                        "checked": false,
                                        "disabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    onTintColor="#0073E6"
                                    style={
                                      Array [
                                        Object {
                                          "height": 31,
                                          "width": 51,
                                        },
                                        Object {
                                          "backgroundColor": "#F5F6F7",
                                          "borderRadius": 16,
                                        },
                                      ]
                                    }
                                    testID="remindersPreferenceSwitch"
                                    thumbTintColor="#FFFFFF"
                                    tintColor="#F5F6F7"
                                    value={false}
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "height": 4,
                                  }
                                }
                              />
                              <Text
                                allowFontScaling={false}
                                color="grey-700"
                                defaultColor="blue"
                                defaultWeight="Bold"
                                font="TitilliumWeb"
                                fontStyle={
                                  Object {
                                    "fontSize": 14,
                                    "lineHeight": 21,
                                  }
                                }
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "lineHeight": 21,
                                    },
                                    Object {
                                      "color": "#555C70",
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "400",
                                    },
                                  ]
                                }
                                weight="Regular"
                              >
                                Upon request of the sender, receive push notifications close to deadlines or when you have unread messages
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "height": 32,
                                }
                              }
                            />
                            <Modal
                              accessibilityPositionChangeAnnouncement=""
                              accessible={false}
                              backdropComponent={[Function]}
                              enableDismissOnClose={true}
                              footerComponent={[Function]}
                              handleComponent={[Function]}
                              handleComponentAccessibility={
                                Object {
                                  "accessible": false,
                                }
                              }
                              hardwareAccelerated={false}
                              importantForAccessibility="yes"
                              snapPoints={
                                Array [
                                  340,
                                ]
                              }
                              style={
                                Object {
                                  "borderCurve": "continuous",
                                  "borderTopLeftRadius": 24,
                                  "borderTopRightRadius": 24,
                                  "overflow": "hidden",
                                }
                              }
                              visible={true}
                            >
                              <RCTScrollView
                                style={
                                  Object {
                                    "flex": 1,
                                    "paddingHorizontal": 24,
                                  }
                                }
                              >
                                <View>
                                  <Text
                                    allowFontScaling={false}
                                    color="bluegrey"
                                    defaultColor="bluegrey"
                                    defaultWeight="Regular"
                                    font="TitilliumWeb"
                                    fontStyle={
                                      Object {
                                        "fontSize": 16,
                                        "lineHeight": 24,
                                      }
                                    }
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 16,
                                          "lineHeight": 24,
                                        },
                                        Object {
                                          "color": "#475A6D",
                                          "fontFamily": "Titillium Web",
                                          "fontStyle": "normal",
                                          "fontWeight": "400",
                                        },
                                      ]
                                    }
                                    weight="Regular"
                                  >
                                    If this option is enabled, push notifications show the sender and subject of messages, even when the screen is locked. This information is processed by your OS manager and by third-party apps that may be running.
                                  </Text>
                                </View>
                              </RCTScrollView>
                            </Modal>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={Object {}}
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          accessibilityRole="header"
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#FFFFFF",
                              },
                              Object {
                                "borderBottomWidth": 1,
                              },
                              Object {
                                "backgroundColor": "#FFFFFF",
                                "borderColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "marginTop": 0,
                                },
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                  "flexGrow": 1,
                                  "height": 56,
                                  "justifyContent": "space-between",
                                  "paddingHorizontal": 24,
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Back"
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              hitSlop={8}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "height": 24,
                                      "width": 24,
                                    },
                                    Object {
                                      "alignItems": "center",
                                    },
                                    Object {
                                      "justifyContent": "center",
                                    },
                                    Object {
                                      "transform": Array [
                                        Object {
                                          "scale": undefined,
                                        },
                                      ],
                                    },
                                  ]
                                }
                              >
                                <RNSVGSvgView
                                  accessibilityElementsHidden={true}
                                  accessibilityLabel=""
                                  accessible={false}
                                  align="xMidYMid"
                                  animatedProps={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  bbHeight={24}
                                  bbWidth={24}
                                  focusable={false}
                                  height={24}
                                  importantForAccessibility="no-hide-descendants"
                                  meetOrSlice={0}
                                  minX={0}
                                  minY={0}
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderWidth": 0,
                                      },
                                      Object {
                                        "color": "#0E0F13",
                                      },
                                      Object {
                                        "flex": 0,
                                        "height": 24,
                                        "width": 24,
                                      },
                                    ]
                                  }
                                  tintColor="#0E0F13"
                                  vbHeight={24}
                                  vbWidth={24}
                                  width={24}
                                >
                                  <RNSVGGroup
                                    fill={
                                      Object {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                  >
                                    <RNSVGPath
                                      clipRule={0}
                                      d="M12.7071.2929c-.3905-.39053-1.0237-.39053-1.4142 0l-11 11c-.39053.3905-.39053 1.0237 0 1.4142l11 11c.3905.3905 1.0237.3905 1.4142 0 .3905-.3905.3905-1.0237 0-1.4142L2.41421 12 12.7071 1.70711c.3905-.39053.3905-1.0237 0-1.41422Z"
                                      fill={
                                        Object {
                                          "type": 2,
                                        }
                                      }
                                      fillRule={0}
                                      propList={
                                        Array [
                                          "fill",
                                          "fillRule",
                                        ]
                                      }
                                    />
                                  </RNSVGGroup>
                                </RNSVGSvgView>
                              </View>
                            </View>
                            <View
                              accessibilityElementsHidden={false}
                              accessibilityLabel="Customize push notifications"
                              accessibilityRole="header"
                              accessible={true}
                              importantForAccessibility="yes"
                              style={
                                Object {
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "marginHorizontal": 16,
                                }
                              }
                            >
                              <Text
                                accessible={false}
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "fontSize": 14,
                                      "textAlign": "center",
                                    },
                                    Object {
                                      "fontFamily": "Titillium Web",
                                      "fontStyle": "normal",
                                      "fontWeight": "600",
                                    },
                                    Object {
                                      "opacity": undefined,
                                    },
                                  ]
                                }
                              >
                                Customize push notifications
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "flexShrink": 0,
                                  },
                                ]
                              }
                            >
                              <View
                                accessibilityLabel="Contextual Help"
                                accessibilityRole="button"
                                accessibilityState={
                                  Object {
                                    "disabled": false,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                hitSlop={8}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "height": 24,
                                        "width": 24,
                                      },
                                      Object {
                                        "alignItems": "center",
                                      },
                                      Object {
                                        "justifyContent": "center",
                                      },
                                      Object {
                                        "transform": Array [
                                          Object {
                                            "scale": undefined,
                                          },
                                        ],
                                      },
                                    ]
                                  }
                                >
                                  <RNSVGSvgView
                                    accessibilityElementsHidden={true}
                                    accessibilityLabel=""
                                    accessible={false}
                                    align="xMidYMid"
                                    animatedProps={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    bbHeight={24}
                                    bbWidth={24}
                                    focusable={false}
                                    height={24}
                                    importantForAccessibility="no-hide-descendants"
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {
                                          "color": "#0E0F13",
                                        },
                                        Object {
                                          "flex": 0,
                                          "height": 24,
                                          "width": 24,
                                        },
                                      ]
                                    }
                                    tintColor="#0E0F13"
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={24}
                                  >
                                    <RNSVGGroup
                                      fill={
                                        Object {
                                          "payload": 4278190080,
                                          "type": 0,
                                        }
                                      }
                                    >
                                      <RNSVGPath
                                        d="M6 8c0-3.31371 2.68629-6 6-6 3.3137 0 6 2.68629 6 6 0 2.7248-1.8172 5.0278-4.3079 5.7583C12.3754 14.1446 11 15.2973 11 17v1c0 .5523.4477 1 1 1s1-.4477 1-1v-1c0-.5064.452-1.087 1.255-1.3225C17.5744 14.7039 20 11.6365 20 8c0-4.41828-3.5817-8-8-8-4.41828 0-8 3.58172-8 8 0 .55228.44772 1 1 1s1-.44772 1-1Zm7.5 14.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5Z"
                                        fill={
                                          Object {
                                            "type": 2,
                                          }
                                        }
                                        propList={
                                          Array [
                                            "fill",
                                          ]
                                        }
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;
