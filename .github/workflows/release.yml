name: Release new app version
env:
  IO_APP_RELEASE_STORE_FILE : ${{secrets.IO_APP_RELEASE_STORE_FILE}}
  IO_APP_RELEASE_STORE_PASSWORD: ${{secrets.IO_APP_RELEASE_STORE_PASSWORD}}
  IO_APP_RELEASE_KEY_ALIAS: ${{secrets.IO_APP_RELEASE_KEY_ALIAS}}
  IO_APP_RELEASE_KEY_PASSWORD: ${{secrets.IO_APP_RELEASE_KEY_PASSWORD}}
on:
  push
    # branches: IOPLT-9-migrate-release-workflow
    #tags: /^[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$/
jobs:
  # run-static-checks:
  #   uses: ./.github/workflows/staticcheck.yaml
  release-android:
    # needs: run-static-checks
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
      - id: setup
        uses: ./.github/actions/setup-composite
      - id: setup-jdk-11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - id: setup-android-sdk
        uses: android-actions/setup-android@v2
      - id: setup-ruby
        uses: ruby/setup-ruby@d2b39ad0b52eca07d23f3aa14fdf2a3fcc1f411c
        with:
          ruby-version: 2.7
          bundler-cache: true
      # Recreate google-services.json from ENV variable
      - id: recreate-google-services-json
        run: ./scripts/google-services-json-file-setup.sh ./android/app
        shell: bash
        env:
          ENCODED_IOAPP_GOOGLE_SERVICES_JSON_FILE: ${{secrets.ENCODED_IOAPP_GOOGLE_SERVICES_JSON_FILE}}
      - id:  recreate-json-key-file
        run: ./scripts/json-key-file-setup.sh
        shell: bash
        env:
          ENCODED_IOAPP_JSON_KEY_FILE: ${{secrets.ENCODED_IOAPP_JSON_KEY_FILE}}
      # Recreate keystore from ENV variable
      - id: recreate-keystore
        run: ./scripts/keystore-setup.sh
        shell: bash
        env:
          ENCODED_IO_APP_RELEASE_KEYSTORE: ${{secrets.ENCODED_IO_APP_RELEASE_KEYSTORE}}
      # Build the js bundle in release mode
      - id: build-js-bundle
        run: yarn bundle:android-release
      # Run alpha lane
      - id: run-alpha-lane
        run: cd android && bundle exec fastlane alpha
      # Promote internal to alpha
      - id: promote-internal-to-alpha
        run: cd android && bundle exec fastlane promote_internal_to_alpha
      - id: archive-production-artifacts
        uses: actions/upload-artifact@v3
        with:
          path: android/app/build/outputs/bundle
  # release-ios:
  #   # needs: run-static-checks
  #   environment: prod
  #   runs-on: macos-latest
  #   steps:
  #     - id: checkout
  #       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
  #     - id: setup
  #       uses: ./.github/actions/setup-composite
  #     - id: setup-ruby
  #       uses: ruby/setup-ruby@d2b39ad0b52eca07d23f3aa14fdf2a3fcc1f411c
  #       with:
  #         bundler-cache: true
  #     - id: prepare-ios-build
  #       run: ./scripts/ios-release-build.sh
  #       env:
  #         APP_STORE_API_KEY_ID: ${{secrets.APP_STORE_API_KEY_ID}}
  #         APP_STORE_API_PRIVATE_KEY: ${{secrets.APP_STORE_API_PRIVATE_KEY}}
  #     - id: add-ssh-deploy-key
  #       run: |
  #         echo -e "Host github.com
  #           AddKeysToAgent yes
  #           IdentityFile ~/.ssh/id_ed25519" > ~/.ssh/config
  #         echo -e "$SSH_DEPLOY_KEY" > ~/.ssh/id_ed25519
  #         chmod 400 ~/.ssh/id_ed25519
  #         ssh-add ~/.ssh/id_ed25519
  #       env:
  #         SSH_DEPLOY_KEY: ${{secrets.SSH_DEPLOY_KEY}}
  #     - id: build-upload-app-store
  #       name: Build & submit to App store
  #       run: |
  #         cd ios
  #         bundle exec fastlane beta_circleci_testflight
  #       env:
  #         APP_STORE_API_KEY_ID: ${{secrets.APP_STORE_API_KEY_ID}}
  #         APP_STORE_API_PRIVATE_KEY: ${{secrets.APP_STORE_API_PRIVATE_KEY}}
  #         APP_STORE_API_KEY_ISSUER_ID: ${{secrets.APP_STORE_API_KEY_ISSUER_ID}}
  #         ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD: ${{secrets.ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD}}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}