name: Pull request review
on:
  pull_request
jobs:
  compile:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-pr-staticcheck-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
      - id: checkout
        uses: actions/checkout@v3.0.2
      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - id: yarn-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: generate-api-client
        run: yarn generate
      - id: run-ci-checks
        run: yarn tsc:noemit
  lint:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v3.0.2
      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - id: yarn-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: generate-api-client
        run: yarn generate
      - id: run-ci-checks
        run: yarn lint
  prettier:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v3.0.2
      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - id: yarn-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: generate-api-client
        run: yarn generate
      - id: run-ci-checks
        run: yarn prettier:check
  test:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v3.0.2
      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - id: yarn-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: generate-api-client
        run: yarn generate
      - id: run-ci-checks
        run: yarn test:ci
      - id: codecov-script
        run: ./scripts/codecov.sh