import * as t from "io-ts";

interface IMinMaxArray<T> extends Array<T> {
  readonly minMaxArray: unique symbol;
}

/**
 * Validate an array in order to have the size between min and max
 * @param min
 * @param max
 * @param a
 */
const minMaxArray = <C extends t.Mixed>(min: number, max: number, a: C) =>
  t.brand(
    t.array(a),
    (n: Array<C>): n is t.Branded<Array<C>, IMinMaxArray<C>> =>
      min <= n.length && n.length <= max,
    "minMaxArray"
  );

/**
 * The row format generated by yarn outdated --json
 * 0: Package name
 * 1: Current Version
 * 2: Wanted Version
 * 3: Latest available version
 * 4: Package Type (devDependencies, dependencies, resolutionDependencies)
 * 5: Package URL
 */
const Row = minMaxArray(6, 6, t.string);

const Data = t.interface({
  body: t.readonlyArray(Row)
});

export const DependenciesTable = t.interface({
  type: t.string,
  data: Data
});

/**
 * Represent the json layout generated by yarn outdated --json
 */
export type DependenciesTable = t.TypeOf<typeof DependenciesTable>;
